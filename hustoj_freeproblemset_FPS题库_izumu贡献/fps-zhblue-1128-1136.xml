<?xml version="1.0" encoding="UTF-8"?>
<fps version="1.0">
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题8.1]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[写两个函数，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果两个整数由键盘输入。]]></description>
<input><![CDATA[两个数]]></input>
<output><![CDATA[最大公约数 最小公倍数]]></output>
<sample_input><![CDATA[6 15]]></sample_input>
<sample_output><![CDATA[3 30]]></sample_output>
<test_input><![CDATA[]]></test_input>
<test_output><![CDATA[]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C++"><![CDATA[
#include<stdio.h>
int maxyueshu(int m,int n)  
 
{  int i=1,t;  
for(;i<=m&&i<=n;i++)  
{if(m%i==0&&n%i==0)  
 t=i;  
}  
return(t);  
}  
int minbeishu(int m,int n)  

{int j;  
if(m>=n) j=m;  
else j=n;  
for(;!(j%m==0&&j%n==0);j++);  
return j;  
}  
int main()  
{int a,b,max,min;  
//printf("enter two number is: ");  
scanf("%d%d",&a,&b);  
max=maxyueshu(a,b);  
min=minbeishu(a,b);  
printf("%d %d",max,min);  
return 0;
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题8.2]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[求方程 的根，用三个函数分别求当b^2-4ac大于0、等于0、和小于0时的根，并输出结果。从主函数输入a、b、c的值。 ]]></description>
<input><![CDATA[a b c]]></input>
<output><![CDATA[x1=? x2=?]]></output>
<sample_input><![CDATA[4 1 1]]></sample_input>
<sample_output><![CDATA[x1=-0.125+0.484i x2=-0.125-0.484i]]></sample_output>
<test_input><![CDATA[4 1 2]]></test_input>
<test_output><![CDATA[x1=-0.125+0.696i x2=-0.125-0.696i]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C"><![CDATA[
#include<stdio.h>
#include"math.h"  
float yishigen(m,n,k)  
float m,n,k;  
{float x1,x2;  
x1=(-n+sqrt(k))/(2*m);  
x2=(-n-sqrt(k))/(2*m);  
printf("x1=%.3f x2=%.3f\n",x1,x2);  
}  
float denggen(m,n)  
float m,n;  
{float x;  
x=-n/(2*m);  
printf("x1=%.3f x2=%.3f\n",x,x);  
}  
float xugen(m,n,k)  
float m,n,k;  
{float x,y;  
x=-n/(2*m);  
y=sqrt(-k)/(2*m);  
printf("x1=%.3f+%.3fi x2=%.3f-%.3fi\n",x,y,x,y);  
}  
main()  
{float a,b,c,q;  
//printf("input a b c is ");  
scanf("%f%f%f",&a,&b,&c);  
//printf("\n");  
q=b*b-4*a*c;  
if(q>0) yishigen(a,b,q);  
else if(q==0) denggen(a,b);  
else xugen(a,b,q);  
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题8.3]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[写一个判断素数的函数，在主函数输入一个整数，输出是否是素数的消息。]]></description>
<input><![CDATA[一个数]]></input>
<output><![CDATA[如果是素数输出prime
如果不是输出not prime]]></output>
<sample_input><![CDATA[97]]></sample_input>
<sample_output><![CDATA[prime]]></sample_output>
<test_input><![CDATA[98]]></test_input>
<test_output><![CDATA[not prime]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C"><![CDATA[
psushu(m)  
int m;  
{
	int i=2,t;  
	for(;i<=m;i++)  
		if(m%i==0&&i<m) break;  
	if(i==m+1) t=1;  
		else t=0;  
	return t;  
}  
main()  
{int a,s;  
//printf("enter sushu is \n");  
scanf("%d",&a);  
s=psushu(a);  
if(s==1) printf("prime");  
else printf("not prime");  
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题8.4]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[写一个函数，使给定的一个二维数组（３×３）转置，即行列互换。]]></description>
<input><![CDATA[一个3x3的矩阵]]></input>
<output><![CDATA[转置后的矩阵]]></output>
<sample_input><![CDATA[1 2 3
4 5 6
7 8 9
]]></sample_input>
<sample_output><![CDATA[1 4 7 
2 5 8 
3 6 9 
]]></sample_output>
<test_input><![CDATA[9 8 7
6 5 4
3 2 1]]></test_input>
<test_output><![CDATA[9 6 3 
8 5 2 
7 4 1 
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C"><![CDATA[
int zhuangzhi(b)  
int b[3][3];  
{int i,j,t;  
for(i=0;i<3;i++)  
for(j=0;j<=i;j++)  
{t=b[i][j];b[i][j]=b[j][i];b[j][i]=t;}  
}  
int main()  
{int a[3][3];int i,j;  
for(i=0;i<3;i++)  
for(j=0;j<3;j++)  
scanf("%d",&a[i][j]);  

zhuangzhi(a);  
for(i=0;i<3;i++)  
{for(j=0;j<3;j++)  
printf("%d ",a[i][j]);  
printf("\n");}  
return 0;
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题8.5]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[写一函数，使输入的一个字符串按反序存放，在主函数中输入输出反序后的字符串。  ]]></description>
<input><![CDATA[一行字符]]></input>
<output><![CDATA[逆序后的字符串]]></output>
<sample_input><![CDATA[123456abcdef 
]]></sample_input>
<sample_output><![CDATA[fedcba654321
]]></sample_output>
<test_input><![CDATA[1qaz-pl,
]]></test_input>
<test_output><![CDATA[,lp-zaq1]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C"><![CDATA[
fanxu(str1)  
char str1[100];  
{int i,t,j;  
char str2[100];strcpy(str2,str1);  
t=strlen(str1);  
for(i=0,j=t-1;j>-1;i++,j--)  
str1[i]=str2[j];
str1[i--]=0;
}  

int main()  
{char str0[100];  
scanf("%s",str0);  
fanxu(str0);  
printf("%s",str0);  
 return 0;
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题8.6]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[写一函数，将两个字符串连接]]></description>
<input><![CDATA[两行字符串]]></input>
<output><![CDATA[链接后的字符串]]></output>
<sample_input><![CDATA[123
abc]]></sample_input>
<sample_output><![CDATA[123abc]]></sample_output>
<test_input><![CDATA[456
def]]></test_input>
<test_output><![CDATA[456def]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C"><![CDATA[
lianjie(a,b)  
char a[100],b[100];  
{strcat(a,b);  
}  
int main()  
{char str1[100],str2[100];  
scanf("%s%s",str1,str2); 
lianjie(str1,str2);  
puts(str1);  
 return 0;
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题8.7]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[写一函数，将两个字符串中的元音字母复制到另一个字符串，然后输出。]]></description>
<input><![CDATA[一行字符串]]></input>
<output><![CDATA[顺序输出其中的元音字母（aeiuo）]]></output>
<sample_input><![CDATA[abcde]]></sample_input>
<sample_output><![CDATA[ae]]></sample_output>
<test_input><![CDATA[abcdefghijklmnopqrstuvwxyz]]></test_input>
<test_output><![CDATA[aeiou]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C"><![CDATA[
fuzhi(a,b)
char a[100],b[100];
{int i,j=0;
for(i=0;a[i]!='\0';i++)
if(a[i]==97||a[i]==101||a[i]==105||a[i]==111||a[i]==117||a[i]==65||
a[i]==69||a[i]==73||a[i]==85) {b[j]=a[i];j++;}

b[j]=0;
}
int main()
{char str1[100],str2[100];
scanf("%s",str1);
fuzhi(str1,str2);
printf("%s",str2);
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题8.8]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[写一函数，输入一个四位数字，要求输出这四个数字字符，但每两个数字间空格。如输入1990，应输出"1 9 9 0"。]]></description>
<input><![CDATA[一个四位数]]></input>
<output><![CDATA[增加空格输出]]></output>
<sample_input><![CDATA[1990]]></sample_input>
<sample_output><![CDATA[1 9 9 0 ]]></sample_output>
<test_input><![CDATA[2009]]></test_input>
<test_output><![CDATA[2 0 0 9 ]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C"><![CDATA[
char f(b)  
char b[4];  
{int i=0;  
for(;i<4;i++)  
{  
printf("%c ",b[i]);}  
printf("\n");  
}  
main()  
{int a,u,v,w,t;char c[4];  
scanf("%4d",&a);  
u=a*0.001;v=0.01*(a-1000*u);w=(a-1000*u-100*v)*0.1;t=a-1000*u-100*v-10*w;  
c[0]=u+48;  
c[1]=v+48;  
c[2]=w+48;  
c[3]=t+48;  
f(c);  
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题8.9]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[编写一函数，由实参传来一个字符串，统计此字符串中字母、数字、空格和其它字符的个数，在主函数中输入字符串以及输出上述结果。

只要结果，别输出什么提示信息。]]></description>
<input><![CDATA[一行字符串]]></input>
<output><![CDATA[统计数据，4个数字，空格分开。]]></output>
<sample_input><![CDATA[!@#$%^QWERT    1234567]]></sample_input>
<sample_output><![CDATA[5 7 4 6 ]]></sample_output>
<test_input><![CDATA[!34drd23478t sadfoiweruo inJK*&UIH&*Fi88jhio2u3r98usdf)(*(*^87]]></test_input>
<test_output><![CDATA[34 15 2 11 ]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C"><![CDATA[
char tongji(str0,b)
char str0[100];
int b[4];
{int i;
for(i=0;str0[i]!='\0';i++)
{if(str0[i]>=65&&str0[i]<=90||str0[i]>=97&&str0[i]<=122) b[0]++;
else if(str0[i]>=48&&str0[i]<=57) b[1]++;
else if(str0[i]==32) b[2]++;
else b[3]++;}
}
int main()
{char str1[100];static int i,a[4];
gets(str1);
tongji(str1,a);
for(i=0;i<4;i++)
printf("%d ",a[i]);printf("\n");
return 0;
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
</fps>