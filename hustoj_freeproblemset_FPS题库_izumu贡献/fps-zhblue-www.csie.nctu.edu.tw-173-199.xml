<?xml version="1.0" encoding="UTF-8"?> 
<fps version="1.1" url="http://code.google.com/p/freeproblemset/">
	<generator name="HUSTOJ" url="http://code.google.com/p/hustoj/"/>
	<item>
<title><![CDATA[Network Wars]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<img><src><![CDATA[http://192.168.2.104/v1-htm01/173img1.gif]]></src><base64><![CDATA[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]]></base64></img><description><![CDATA[<p>It is the year 2126 and comet Swift-Tuttle has struck the earth as predicted. The resultant explosion emits a large cloud of high energy neutrons that eliminates all human life. The accompanying electro-magnetic storm causes two unusual events: many of the links between various parts of the electronic network are severed, and some postgraduate AI projects begin to merge and mutate, in much the same way as animal life did several million years ago. In a very short time two programs emerge, Paskill and Lisper, which move through the network marking each node they visit: Paskill activates a modified Prolog interpreter and Lisper activates the `Hello World' program. However `Hello World' has mutated into an endless loop that so ties up the node that no other program, not even Lisper, can re-enter that node and the Prolog interpreter immediately reverse compiles (and destroys) any program that enters. However, Paskill knows which nodes it has visited and never tries to re-enter them. Thus if Lisper attempts to enter a node already visited by Paskill it will be annihilated; neither can enter a node already visited by Lisper, if either (or both) cannot move both will halt and if they ever arrive at a node simultaneously they annihilate each other. Both programs move through the network at the same speed.</p>
<p></p>
<p>Write a program to simulate these events. All nodes in the the network are labelled with a single uppercase letter as shown below. When moving to the next node, Paskill searches alphabetically forwards from the current node, whereas Lisper searches alphabetically backwards from the current node, both wrapping round if necessary. Thus, (in the absence of the other) if Paskill enters the network below at A, it would visit the nodes in the order A, B, C, D, G, H, E, F; if Lisper enters the network at H it would visit them in the order H, G, E, F. Simulation stops when one or more of the above events occurs. If more than one event occurs, mention Paskill first.</p>
<p></p>
<p><img align="BOTTOM" src="http://192.168.2.104/v1-htm01/173img1.gif" alt="picture23" /></p>]]></description>
<input><![CDATA[<p>Input will consist of a series of lines. Each line will describe a network and indicate the starting nodes for the two programs. A network is described as a series of nodes separated by `<tt>;</tt>' and terminated by a period (`<tt>.</tt>').  Each node is described by its identifier, a `<tt>:</tt>' and one or more of the nodes connected to it. Each link will be mentioned at least once, as will each node, although not all nodes will be `described'. After the period will appear the labels of the starting nodes--first Paskill and then Lisper. No line will contain more than 255 characters. The file will be terminated by a line consisting of a single <tt>#</tt>.</p>]]></input> 
<output><![CDATA[<p>Output will consist of one line for each network. Each line will specify the terminating event and the node where it occurs. The terminating event is one or two of the following:</p>
<p></p>
<ul>
    <li>Lisper destroyed in node ?</li>
    <li>{Paskill/Lisper} trapped in node ?</li>
    <li>Both annihilated in node ?</li>
</ul>]]></output>
<sample_input><![CDATA[A:BD;C:BD;F:E;G:DEH;H:EG. A H
E:AB. A B
B:ACD. B D
A:B;B:C;D:E. A D
#]]></sample_input>
<sample_output><![CDATA[Paskill trapped in node D Lisper trapped in node F
Both annihilated in node E
Lisper destroyed in node B
Lisper trapped in node E]]></sample_output>
<test_input><![CDATA[A:B;C:BDE;F:EG;G:H. A H
A:B;C:BDE;F:EG;G:H. A G
A:B;C:BE;F:EG;G:H. A G
A:B;C:BDE;F:EG;G:H. H C
A:B;C:BDE;F:EG;G:H. B H
A:B;C:BDE;F:EG;G:H. B E
A:B;C:BDE;F:EG;G:H. C B
A:BD;C:BD;F:E;G:DEH;H:EG. A H
E:AB. A B
B:ACD.B D
A:B;B:C;D:E. A D
#
]]></test_input>
<test_output><![CDATA[Paskill trapped in node D Lisper destroyed in node C
Lisper destroyed in node C
Paskill trapped in node C Both annihilated in node C
Lisper trapped in node A
Paskill trapped in node D
Both annihilated in node C
Paskill trapped in node D Lisper trapped in node A
Paskill trapped in node D Lisper trapped in node F
Both annihilated in node E
Lisper destroyed in node B
Lisper trapped in node E
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[www.csie.nctu.edu.tw]]></source>
</item>
<item>
<title><![CDATA[Strategy]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<img><src><![CDATA[http://192.168.2.104/v1-htm01/174img1.gif]]></src><base64><![CDATA[R0lGODlhAgAbAIAAAAAAAP///yH5BAEAAAEALAAAAAACABsAAAIKRIynyesdopxUFgA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/174img1.gif]]></src><base64><![CDATA[R0lGODlhAgAbAIAAAAAAAP///yH5BAEAAAEALAAAAAACABsAAAIKRIynyesdopxUFgA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/174img1.gif]]></src><base64><![CDATA[R0lGODlhAgAbAIAAAAAAAP///yH5BAEAAAEALAAAAAACABsAAAIKRIynyesdopxUFgA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/174img1.gif]]></src><base64><![CDATA[R0lGODlhAgAbAIAAAAAAAP///yH5BAEAAAEALAAAAAACABsAAAIKRIynyesdopxUFgA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/174img1.gif]]></src><base64><![CDATA[R0lGODlhAgAbAIAAAAAAAP///yH5BAEAAAEALAAAAAACABsAAAIKRIynyesdopxUFgA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/174img1.gif]]></src><base64><![CDATA[R0lGODlhAgAbAIAAAAAAAP///yH5BAEAAAEALAAAAAACABsAAAIKRIynyesdopxUFgA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/174img1.gif]]></src><base64><![CDATA[R0lGODlhAgAbAIAAAAAAAP///yH5BAEAAAEALAAAAAACABsAAAIKRIynyesdopxUFgA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/174img1.gif]]></src><base64><![CDATA[R0lGODlhAgAbAIAAAAAAAP///yH5BAEAAAEALAAAAAACABsAAAIKRIynyesdopxUFgA7]]></base64></img><description><![CDATA[<p>A well known psychology experiment involves people playing a game in which they can either trade with each other or attempt to cheat the other player. If both players TRADE then each gains one point. If one TRADEs and the other CHEATs then the TRADEr loses 2 points and the CHEATer wins 2. If both CHEAT then each loses 1 point.</p>
<p></p>
<p>There are a variety of different strategies for playing this game, although most people are either unable to find a winning strategy, or, having decided on a strategy, do not stick to it. Thus it is fairer to attempt to evaluate these strategies by simulation on a computer. Each strategy is simulated by an automaton. An automaton is characterised by a program incorporating the strategy, a memory for previous encounters and a count reflecting the score of that automaton. The count starts at zero and is altered according to the above rules after each encounter. The memory is able to determine what happened on up to the last two encounters with each other contender.</p>
<p></p>
<p>Write a program that will read in details of up to 10 different strategies, play each strategy against each other strategy 10 times and then print out the final scores. Strategies will be in the form of simple programs obeying the following grammar:</p>
<p></p>
<blockquote>  &lt;program&gt; ::= &lt;statement&gt;. <br />
&lt;statement&gt; ::= &lt;command&gt;  <img align="MIDDLE" width="2" height="27" src="http://192.168.2.104/v1-htm01/174img1.gif" alt="tex2html_wrap_inline45" />  &lt;ifstat&gt; <br />
&lt;ifstat&gt; ::= IF &lt;condition&gt; THEN &lt;statement&gt; ELSE &lt;statement&gt; <br />
&lt;condition&gt; ::= &lt;cond&gt;  <img align="MIDDLE" width="2" height="27" src="http://192.168.2.104/v1-htm01/174img1.gif" alt="tex2html_wrap_inline45" />  &lt;cond&gt; &lt;op&gt; &lt;condition&gt; <br />
&lt;op&gt; ::= AND  <img align="MIDDLE" width="2" height="27" src="http://192.168.2.104/v1-htm01/174img1.gif" alt="tex2html_wrap_inline45" />  OR <br />
&lt;cond&gt; ::= &lt;memory&gt; {=  <img align="MIDDLE" width="2" height="27" src="http://192.168.2.104/v1-htm01/174img1.gif" alt="tex2html_wrap_inline45" />  #} {&lt;command&gt;  <img align="MIDDLE" width="2" height="27" src="http://192.168.2.104/v1-htm01/174img1.gif" alt="tex2html_wrap_inline45" />  NULL} <br />
&lt;memory&gt; ::= {MY  <img align="MIDDLE" width="2" height="27" src="http://192.168.2.104/v1-htm01/174img1.gif" alt="tex2html_wrap_inline45" />  YOUR} LAST {1  <img align="MIDDLE" width="2" height="27" src="http://192.168.2.104/v1-htm01/174img1.gif" alt="tex2html_wrap_inline45" />  2} <br />
&lt;command&gt; ::= TRADE  <img align="MIDDLE" width="2" height="27" src="http://192.168.2.104/v1-htm01/174img1.gif" alt="tex2html_wrap_inline45" />  CHEAT </blockquote>
<p>Note that LAST1 refers to the previous encounter between these two automata, LAST2 to the encounter before that and that `MY' and `YOUR' have the obvious meanings. Spaces and line breaks may appear anywhere in the program and are for legibility only. The symbol `<tt>#</tt>' means `is not equal to'. NULL indicates that an encounter has not ocurred.  The following are valid programs:</p>
<p></p>
<pre>
CHEAT.
IF MY LAST1 = CHEAT THEN TRADE ELSE CHEAT.
IFYOURLAST2=NULLTHENTRADEELSEIFYOURLAST1=TRADETHENTRADE
ELSECHEAT.</pre>]]></description>
<input><![CDATA[<p>Input will consist of a series of programs. Each program will be no longer than 255 characters and may be split over several lines for convenience. There will be no more than 10 programs. The file will be terminated by a line containing only a single `<tt>#</tt>'.</p>]]></input> 
<output><![CDATA[<p>Output will consist of one line for each line of input. Each line will consist of the final score of the relevant program right justified in a field of width 3.</p>]]></output>
<sample_input><![CDATA[CHEAT.
IF MY LAST1 = CHEAT THEN TRADE ELSE CHEAT.
IFYOURLAST2=NULLTHENTRADEELSEIFYOURLAST1=TRADETHENTRADE
ELSECHEAT.
#]]></sample_input>
<sample_output><![CDATA[  1
-12
-13]]></sample_output>
<test_input><![CDATA[IF MYLAST1=NULLTHENTRADE ELSE   IF YOURLAST1=TRADETHENTRADEELSECHEAT.
IF MYLAST2=NULLTHENTRADE ELSE   IF YOURLAST2=TRADETHENTRADEELSECHEAT.
IF MY LAST 1 = CHEAT THEN TRADE ELSE CHEAT.
IF YOURLAST2 = NULL THEN TRADE ELSE IF YOURLAST1=TRADE THEN TRADE ELSE CHEAT.
IF YOUR LAST1=CHEATORYOURLAST2=CHEAT THEN IF MYLAST1=CHEATTHENTRADEELSECHEATELSEIFMYLAST1#CHEATTHENCHEATELSETRADE.
IF MYLAST1=NULL THEN IF YOURLAST1=NULL THEN TRADEELSE CHEATELSE IF YOURLAST1=CHEAT OR MYLAST2=CHEAT AND YOURLAST1#CHEAT THEN CHEATELSEIF YOURLAST1=TRADE AND YOURLAST2=TRADE THEN CHEAT ELSE TRADE.
IF MYLAST1=CHEAT THEN TRADE ELSE CHEAT.
IF YOURLAST1#TRADETHENTRADEELSECHEAT.
TRADE.
CHEAT.
#
]]></test_input>
<test_output><![CDATA[ 11
  3
  9
  7
  9
 13
  9
 -6
-36
 33
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[www.csie.nctu.edu.tw]]></source>
</item>
<item>
<title><![CDATA[Keywords]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<description><![CDATA[<p>Many researchers are faced with an ever increasing number of journal articles to read and find it difficult to locate papers of relevance to their particular lines of research. However, it is possible to subscribe to various services which claim that they will find articles that fit an `interest profile' that you supply, and pass them on to you. One simple way of performing such a search is to determine whether a pair of keywords occurs `sufficiently' close to each other in the title of an article. The threshold is determined by the researchers themselves, and refers to the number of words that may occur between the pair of keywords. Thus an archeologist interested in cave paintings could specify her profile as ``<tt>0 rock art</tt>'', meaning that she wants all titles in which the words ``<tt>rock</tt>'' and ``<tt>art</tt>'' appear with 0 words in between, that is next to each other. This would select not only ``<tt>Rock Art of the Maori</tt>'' but also ``<tt>Pop Art, Rock, and the Art of Hang-glider Maintenance</tt>''.</p>
<p></p>
<p>Write a program that will read in a series of profiles followed by a series of titles and determine which of the titles (if any) are selected by each of the profiles. A title is selected by a profile if at least one pair of keywords from the profile is found in the title, separated by no more than the given threshold. For the purposes of this program, a word is a sequence of letters, preceded by one or more blanks and terminated by a blank or the end of line marker.</p>]]></description>
<input><![CDATA[<p>Input will consist of no more than 50 profiles followed by no more than 250 titles. Each profile and title will be numbered in the order of their appearance, starting from 1, although the numbers will not appear in the file.</p>
<p></p>
<ul>
    <li>Each profile will start with the characters ``<tt>P:</tt>'', and will consist of a number representing a threshold, followed by two or more keywords in lower case.</li>
    <li>Each title will start with the characters ``<tt>T:</tt>'', and will consist of a string of characters terminated by ``<tt>|</tt>''. The character ``<tt>|</tt>'' will not occur anywhere in a title except at the end. No title will be longer than 255 characters, and if necessary it will flow on to more than one line. No line will be longer than eighty characters and each continuation line of a title will start with at least one blank. Line breaks will only occur between words.
    <p></p>
    <p>All non-alphabetic characters are to be ignored, thus the title ``<tt>Don't Rock -- the Boat as Metaphor in 1984</tt>'' would be treated as ``<tt>Dont Rock the Boat as Metaphor in</tt>'' and ``<tt>HP2100X</tt>'' will be treated as ``<tt>HPX</tt>''. The file will be terminated by a line consisting of a single <tt>#</tt>.</p>
    </li>
</ul>]]></input> 
<output><![CDATA[<p>Output will consist of a series of lines, one for each profile in the input. Each line will consist of the profile number (the number of its appearance in the input) followed by ``<tt>:</tt>'' and the numbers of the selected titles in numerical order, separated by commas and with no spaces.</p>]]></output>
<sample_input><![CDATA[P: 0 rock art
P: 3 concepts conceptions
P: 1   art rock   metaphor concepts
T: Rock Art of the Maori|
T: Jazz and Rock - Art Brubeck and Elvis Presley|
T: Don't Rock --- the Boat as Metaphor in 1984, Concepts
   and (Mis)-Conceptions of an Art Historian.|
T: Carved in Rock, The Art and Craft of making promises
   believable when your `phone bills have gone
   through the roof|
#]]></sample_input>
<sample_output><![CDATA[1: 1,2
2: 
3: 1,2,3,4
]]></sample_output>
<test_input><![CDATA[P: 0 rock art
P: 3 concepts conceptions
P: 1   art rock    metaphor concepts
P: 0 never art art
P: 200 za zb zc zd ze zf zg zh zi zj zk zl zm zn zo zp zq zr zs zt zu zv zw
T: Rock Art of the Maori|
T: Jaxx and Rock - Art Brubeck and Elvix Presley|
T: Don't Rock - the boat as Metaphor in 1984, Concepts
 and (Mis)-Conceptions of an Art Historian.|
T: Carved in Rock, The Art and Craft of making promices
 believable when your `phone bills have gone
 through the roof|
T: metaphor one two art|
T: A nasty one
 with some lines
        rock
  218769463 19263946238
  not metaphor having any sensible data at all|
T: metaphor art|
T: rock metaphor|
T: rock one metaphor|
T: rock one two metaphor|
T: art art|
T: one|
T: art shs art sjsjsj never ajajaj art art|
T: a b c d e f g h i j k l m n o p q r s t u v w x y z aa ab ac ad ae af ag ah
 ai aj ak al am an ao ap aq ar as at au av aw ax ay ax ba bb bc bd be bf bg
 bh bi bk j sj dk sh sg sg sn sm si sy sy st sr sr sk sk sl sl sj sh sg sg sn
 sb sp
 qj qu qi qy qt qr qe qw qaq qs qd qf qg qh qj qk ql qm qn qb qv qc qx zq
 wp wo wi wu wy wt wr we wl wk wj wh wg wf wd ws wa wm wn wb wv
 ep eo ei eu ey et er el ek ej eh eg ef|
#
]]></test_input>
<test_output><![CDATA[1: 1,2
2:
3: 1,2,3,4,6,7,8,9
4: 11,13
5:
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[www.csie.nctu.edu.tw]]></source>
</item>
<item>
<title><![CDATA[City Navigation]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<img><src><![CDATA[http://192.168.2.104/v1-htm01/176img1.gif]]></src><base64><![CDATA[R0lGODdh4AE7AfEAAP///wAAAH19ff///ywAAAAA4AE7AQAC/oSPqcvtD6OctNqLs968+w+G4kiW5omm6sq27gvH8kzX9o3n+s73/g8MCofEovGITCqXzKbzCY1Kp9Sq9YrNarfcrvcLvg3G5LL5jE6r1+y2+w2Py+f0uv2Oz+v3/L4fr/EnOEhYaHiImKi4yDgY2IgYUBZAeSYJOXA5VmmJmWmmScYJqUk5uml36rnKSvfY6jd6GYpKWppJ+2k7mauqyGmqK1oXDGt8vPaKrEdbWpn724lbSwoqKukbLTyLTVy8DH6sHJ7KO3strI2+3c3YPIzbvnheyy3vRj99a4pN3/6cjpzANOMGyulFLZ+6hPCgGXpXT2GifP7g4VMojx+3/nrxnjk0aLAgyDcIt1FbGOpWwEjWIp6cyFCXSnzrpjXcKNPkvZEgRfJcI6uYxp2HggLTuPJhSmf8khYyai/YR1DOJpmTGnXop6nGVGWD5fOn2LFky4L89lJcBrNs27p9awsiuLBw69q9i1cNWqet6Ob9Czjw2H4zl/kVjDix4lb20ho7zGyo5MmUK9OpjDnz5MuaO2vm7Dn05jmiS2utG5UvK8h5uPZxjQb2HtktWZJeCId2a7tLVa9ijUd38Mu4SRanCfN2crjNvvZdW/R4G+F3qPt+TXx5HOvEeFvifgh4delswCs/SB5oer3rf+69jkl8Oe2528e2L802evqL/sFCf4hfbdGdN+B++m0XYH+JyNcdf8gdWJ+D0yVoUYEK+ocBhE9lp+GDFkbY4YQSXggJgxx+aNyI6qnIHotpmGcgiav9t6GL99mYH4oeAkggjzLOmKGOg1gHI4I91hijj0aG2NZ7htFISJEgLilkeRQ6NuSJSqLm3GNQZomjgFumyOSKZbZ4JllICWTikVFqiSSVY+4Y55RzNtkUm18KIiWZctbp551WhmkVoSOtSU6bSQJK55tugrmoo5FCyqWTagUp6B9EXgnfbHBK+ieob0mmJ6aMUmrnqYOmeSOrOWaq5mnhKBoqqoGqamaVucL6IqcCkZronppy2mejIroq/iauaOoaK6JzCRsLsdIaiiWfn9qKp7NPmiqqsr1S2ykz11r7KLnMEWbTs9xiy+6qzH6LbKHxVsire+h2+Ru02IFb7LG1mvvvsOUKfG486W57wbzjDRwtw/tOCnCq3bLlUT/Brhuxt62+u3G9r2r88cRlHYUTwhYoPB/EBAfcsMots/ywWyRv0i8ftErc7q4gJyuyux7znLNYMx98acIce+owH5vyOy3K4QyNb3z6Kt300UBnbCzW/v5sENQ173HzrT3rPPayXNO7s7xWD2RUTUWfvPZwSSPtcsw4a+1z2r8y5baXGK98drWAix00vHEL/jLFfNOsrtGBpwwz1XOL/jv5bpXLLfPiRGPouN4L1y056HRHPvrdg48aNZCdl2034XiTXXjHnodr+V2Wvl2B0+PC/rrZs3/te9anZw58H2ELn7jrw+fNuuzNhxz7YKnn+3fyz1+9PO/ZBx899tYTH9LUs5lGPpHlmwba+aGlr35n7LefWV63+736j/bfj/9B03tyfP7+/w+Y+XEObgAsoAHvJ8DnVO+ADGyg/PYntQU6cIIUNEsCVUfACmpwgzTTHASf8kFNBaUMr9Ac2q5RPA6qEBanGCELQxgL5zxCFobjBeJWiEPp2fCGv4Dha2QIHRo6zyYpzKERe7hD2imliBf5SAk7aEOHeIU2Fzyi/hVB2JikwG+LXPwMFAnyn964pBdCNJhU9HHFNHpCKB6JTRffCMdvyNEMT5RXRdzIEKQ0hYlq7KMb28jH7fhQaWUcQx0tckdE5nEY5wikHx/ZkS92ZZDjc2IQs9hBgFwFhRXrZCQhCUoRHmUZVYySV8jQv1CqkhxVQUYph9RCTaRylbQ8RkpIScnWjMaQ4qulL9X4yhL18pfENGIwGzFLvcSRMu9b5jE74sw86S+a2iIJNauJOkfaIZkvuqY0BelNGIbzmeMUZzkfqM06cHOIvavh76r2OG2mcyK5DM8wMXc4JX6OdJQTXT/5WTve1NMQ64ReO9m5PXdeT23x9BXb/gZaiIJ6r3XIo+jW3sk0cHUNooSQKEMxGgkBiHSkJC1pSeEJ0nxudJ5z8OgJu/fRKJl0pjNF6UJfelDpsVQOLuVh6ZQXC5oKdaQ2hSlOE9qs8Enwpzf1KTOGOtSi5nSioRPoTuPQU31CznRBhSpNpYpUg4ZVaBx1xD332dCJePWrGUWZPNGp1PpNNaBcfc1aa9rWfL4VL89cRFb36s/W3NWkYP0e84x6qLIK4q+FtetgSdrYqtZVsue6KhwYm9eHPBaymU3p41Ya1ww2datAdexmBYBFolSUsqtlKvgGglm3/uK0IjUlNi86WsBaNbS5U+nuuMcn2qKWT8AKLD4n/uvabPGWArq7nFMFS1tYygqgxy0ta19bKrmOla7WnY1wiVtc6qK1u/+s1HIn0FzjPjc43wXvbQ8716MaVnGWfUNs9Trb6Lr3m8gtL3m5m83zSiC94tUqMdoryvdqb77A3S5P+qqI+6Y1pPqVrmpxi1gD/3Zkiv2DhD37FATjt7OjBS1sz0ra3Ob3tJFN7oItqtwTL9W/KlZrhUcsW40+tL5u+HCNKcxiEmdYt+aVsXYZDOMXK03EE8axb/fG4zb4eMgr3myLaYzh+CY2ymyYspY1TBomg/jHT7ailx283uqImcxN/mwaz4xkhHY1yDmuc5mPCOckN3jOVhbyl4lc/sw8Xxe+mlozlf2M5j4K2sV7Nm2f7dzm2alx0VgmNJ8fe2UAZznRk0ZxgyAd4htHms2SfrOnNzxoJXtX1GM+NIFdWZjGidbC3mxmNIV7TtLkeprhtF1MccdcYwp32Kwupnd+PcDe5jAAxG72YI0dQC73+NT/Y7azrx1VaD+QJ1kNILa/jVdt8xXCC6K2/6wN7nQPV9zj7rDxzJ0/dKv72+wOjLvBBm/8yXve1643aqiSXQKKEdnkVhO/we3vgskXg711IdCA0Z99H5zYCa9swQkaRsZFsZsAt6a0czNxbFfc2HWU5kbIOBOsdEOTgwl5v0dOzJLHRCLr2Mcez2hw/pc3G+Yxz3hOOOIUiKNCjzhvuc4pznNfytwkP1ekThg59JEdHelJp+UMPbhHqkCFMJ7kb9emPuyq17Lbf5E42O8qdqvnG4FnL3baFb12+5m97VB9uyrJLj+6P9ruj/zrrsFZGr0/lny2dmbhl2lB6nyc0prOm4LD7PY/Z7q6D1Y8sNF75/4ydLrQpbOTR53hFzq3o3HfdJxfFV72Rj7RgG5tpTc6erPOuPGs17rXU2FoySP69OAI4eJLb2k9w4uZq/Y86HX/6l2ol/Szp7yrif/U1V/62bsXPistT79Zf/nTckq9mqXvaExXP9UPjf1iga/q1/vu8QfJfaHBT36F/oaeMdhPdrDdPHopvt/4oeY/qUtMf+bnYejXaPEnZ+FHfUC2d8fHad30dx7Xa8lAgPKHfJ/XfwvYatvHcZFQf8zCeM4XfAYoVtOHduPHaPpDTwLoMh84Xq5HewVYfBj4f/OHRxyogizDgilmetY3gghYgqAGgDVYFB0IKznIfZoHgunXeTLoapnXN6Z0g1xlhKjWgyJIVTEofkBIg9+Rgst3hGcwhfk3ed/nf02If1xog174W2G4fK23g0sGfyd4gFZ4EV1YYF9IRxM4h3JYhXx4hdFXhhV4hh03hFEIVGxYYG4YgliYgBYYhGhYiGrIMIiIhGmmg4sIiEwoiKUm/oRKYYjIQ4n/tXB0OIqM+IOOuIWE6ImSuIJ62IfqR4G1Z2OBKIvJp3GReIdr6Ip/+IKxyHvItn+aWItOeIurmIuTuIvA+IulCIt7mIlZiIoa2Ikg9ImmF4ouyIy96IxLCI0MuIzl4Ui+tx7X+IavqI3mqHq0+I1gxoqqSI3tKIXJmI1JCIPNiI5kKIzrqIicERlM0UrdF0vqR46YqIw8yIvpmI8GWZCkCI6WoxL/OCX+AFFcMZBKOI8tWI7P2IjeqJDTUSQ0B5F+0kgcRZHyaIl4mJHneJD42I0Z2IDTyI9ysTn+AhDsB4omyY6JOIa4F4f2uJKXyI+6JJPiaA5M/kePFVmPC+mHSqmRp8iRDAkUfXJKT3hRLCclJdl8GLmJMxhcPamSTPmVHhkZqkiUNXF7yJiVQKmPO3lgXkmPvtiRDalLZEmEUCGQOLmPSfmW24iQLcmVLwmJxliJaomUcMmXWmmRLLmRLrmOymSHg4mSqISXbEmFP9mW6hiXOQmZG4iLm4mWR5aZkZmYammYprhWlFmN9xaYooiYA+B343R4cRSbcIRrsKlrtjk+j/kdLTSOOBmMJUUkQvVxeyB4p3lAqumOAHdLLIJ3cDhTwUlTw6kHxelVDIScSdQry3kmzWmaAgCdz4kX1Fl3xxmOU/FNecmdTSlS32lS0pkH/uKZbQZ0nVSZI+jpmyS4npchnOEJn2wln+XpIfaZll2xn5AHnnfRn/5ZQPNZjLupnR54nz6YnwbanvyZoCdFnrppOALqOKlxNRdHEgXaftFpoRdKVBmahu7CoXAjdCWBhoE0d96pnySKoCbKWf+poZt0kYTpc4h0YVOUG/sTo+wJnCVqo9ZZTor3gGDYo+lwcrvpo/eCRtsholRKo3Zhoze6oAAKj4fYpMtJcxpncyp3YXpRpSB3pXWRpSeKoyn6Rw9ahF9aKBLxkFAXdVsxogeapxVao2uKpDlKkEd5SW6jR7bHSVzHdZ80HWcaomkKF2taWyjamdIAp8qSntxI/lJEmqlGaqJ/6qYOCpaCOqAsxKj4UKptAanrtqWAmkmh2pqX2pebSqFF2qdZ6qmTaqg7KpquGaHOyad7SqtYCqm3KphcWKllA6uKOVKauqyceqHE+o7scaxB85oRyGu1dpvwk6qeMZtv9EOsqqia6aWjWo2BepKV6ao8iZlQmZco+KnY+KqTaYI+ma6XmZDs6lAwCUvlumCFeZjiCq8Au6hu2ZqlSa9i+a7Yea6fqX2AqZPziqlOyZihyZnF2okrqmyc2IaoCayL+ZeNWbHR+keWqYvk2qUB267/aq9+aYYam5z7qkwyGacme4wbC7GxKrEfS7H6Slz8umf+eo8C/muuQgsU7reWOsaz01SUDbojbDRQWAmaULmrBhuWC9uxOduyj/iy+1GnTKt1ajOSZYqD8qqFWzkkRpuZKRukDtkQ9DldYGpGd0mznmmzZTuMT7mUCFsdGcG3oLoxmnSWrTi3rEmaKouuunq4VvuwtjiTt7m0M1lNzYGochu1eVuwhiuGN3u5QTu1gpSbSYQvaEFGRhmvgxuwncu5iUu0eqm4g6m21jSW2Jk6cDpCV9llZBuNdzux+Iq0qwmFJ2uNuIu3B9u6hPu69aq6jpmwQ7urQPuTx4u4mWu3IJu0MeSzvui86Qq9xYuyHFuzWytC1ytn2buj27u6VBu9dUuM/o0bvsBraeRrieYrv95Lt+Brve7br8K7u5Z7vv86v71rv9+Kvz+rvzrLu9ObtvnquzF7hWXZRI+bv6abknuZutKbu0fLuNPDcuwbwM5IETwEtQ1Lveo7vFXbv0FrvsorIjKrwv31wfARwhmrta5Lv8Zbw6cbsi3CwjmckVYptvIFv1r1vwh8wOurwS8hGw7skUsBGzF8fy5Lw5pbuBVMwlBMn5TawEQIjkx8kxLMvKo7xBecwACssDqcxZcDpMHrxaOJuiRrwSVMwW4MvEIakHUYWGmsxpVLvFMsx4srxkUcT0kKfUEqyKQSxEtDxPwbxoNoRIecvGB8wxPMvZIM/ndrzLp8jLxvvL97nMKmZsnou7l9HMWJzMkKjGcFnLWpbLar7LCNjMqsjMF/rMim7MqfjLlVbMCzLMVtHG0s5cjii8KRPLSdXGR+9cq6m8ulvMuPrHDzVK3Yeq3X1K1dNM1cVM1bhECj63Et1at85832op1stBUWw822/M3nnDmKRHRtVM56jM7vLBgpZ6d4Os6u0M3wjM8vFEtkmqiBC0bmnM8BbUDJKtAFjRiH9B4fAaIGzdBugdC+oNAM2tATPSuDOqW/JnQUrdGKUXJ9K0XNQcgbvUKFvEuETNJN8dAPSRRzBEVntMEifUUSrcSW6nMmB3Qvykg399IwfUQy/q3FyFrTM4fEbXun9PzDPL1BPg3M3nN181yoOgpNUa3T7onU9rLNkqS3LkwyVHS7AF3Vxja7K7fTLdxdYRsuTox5X23Qszt0YcrDi9hIzIjWA6bWa93Ebe1UM81xGRGPXl3XvsTW9XzWP+2ApPu+9/zXfRTY5ExFhD2ysRbB7hwcS9pE1gp40HzZ0pytmD2XK0xEa3vHfD2ukh3KJrzIm2zatHzFX4vVcslPdjnaIryzuKzKyFzbI9zBn/u9fU3amBzHmUzbsDzGGcylux3bMpyKoyzLykzKJkzWv2vcXdzbvPzb6evHcFza1l2/ZQyz0Z3Hsi21kLzMmpzMzv3W/u3r3Yft15M8zMI8mqc9w6vNa3Nal1tNueDNv9TN3u/t3pdMzAsclK3kwDU51gyL3NIY3LYt3IBsxV4b4DXXgQR+1NKN33us3yf8vP0NyhgO3Ln9IGAa4UVtuxK43hxevhruvyhOxR5+LCBOIHHdunMdAYzb3uOd4LHMyPINIi4eIzCumTIOATTO3zZ+3ahd3a6NOTxOJT4+4mrwywO84fB927PN4kss4PXtoaI63cx848O93KlNxjqu29t93E8c391L5MqN3b6N5CJLuM17zDhu5Nm93/6t2g6O3mRO4Qfeyjac5n7e3EceleC64XBe4lK+4Loc6HQ+6MvLxiW7/uVLrb0qnuF/jsPVK8DpHdkVbt7kPeUMXt6C/tzdreffzee4reZzzuYmHr93zsGZXurqHelQnuKWTsmI3ud4fr+aTsCHTumTbus1TtyEfstj6+vBPuSLvur/XeV7K+lAHOdevuYXjuuoLuaxy+vYG+2g/umK/uWift67HuubfupUnuqhzujVbu7X3tnZPr7b7u3TLt7KfuExi5smzdlMeuz0Pu/fnu6uLsibrdlODu/M7e/L/uvarXzu3s6cDu6enugGL+/P3rO03vDlHt4Qr+AbL+dn7g6OjUwFD+b8rvEdn9wLP+7bJPKCru7cHvGdvgp6HUGzzvCVTvJd7vK5hf7xFD9t+37w1J7wrR7mjSDzwuTzE4/z8a7q9R6AFs9TeEnZVp7vlT31Uj/wmU1NicfzUhYGXe/1Xw/2YS/2Y0/2ZW/2Z4/2aa/2a8/2be/2bw/3cS/3c0/3dW/3d4/3ea/3e8/3fe/3fw/4gS/4g0/4hW/4h4/4ia/4i8/4je/4j+8FBQAAOw==]]></base64></img><description><![CDATA[<p>Most US cities are constructed according to a very simple plan--they have Avenues running north and south, and Streets running east and west, enclosing square blocks. Avenues and Streets are numbered, with numbers increasing westward and southward. There are 50 driveways on each side of a block, numbered 00 to 98 on one side and 01 to 99 on the other. House numbers increase in the same directions as Street and Avenue numbers. If you are travelling in the direction of increasing numbers then odd numbers are on your right. Thus the house at 1288 16th Street (S16 1288) is located on 16th Street, west of 12th Avenue and east of 13th Avenue, and is on the right-hand side going east. The residence described as A11 1543 lies on 11th Avenue, south of 15th Street and north of 16th Street, and is on the right-hand side going south. Both of these are marked on the following typical street map:</p>
<p><img src="http://192.168.2.104/v1-htm01/176img1.gif" alt="" /></p>
<p>Quiet suburbs are formed by the simple expedient of making some Avenues and Streets discontinuous as shown above. Note that Avenues and Streets keep the same name, even when there are places where they simply don't exist. It is difficult to get lost in such a city, as the address tells you exactly where to go. However, if you don't know the pattern of missing portions, you can spend a lot of time going into dead-end roads.</p>
<p></p>
<p>Write a program that will firstly read in a description of the `missing' areas in a city and then a series of pairs of addresses, where an address is assumed to specify a driveway not necessarily a residence. For each pair of addresses the program must calculate the distance between them, by the shortest legal route. The distance is the number of driveways you pass (on your side of the road) excluding the source and destination. You may make the following assumptions:</p>
<p></p>
<ul>
    <li>You drive on the right hand side of the road.</li>
    <li>You may not cross a lane of traffic except at an intersection, that is you must turn right when entering or leaving a driveway.</li>
    <li>Driveways are located in the centres of their sections.</li>
    <li>U-turns are illegal except at the end of cul de sacs.</li>
    <li>Streets and Avenues are numbered from 00 to 49 and there are no roads beyond these bounds; however there are driveways on both sides of the bounding roads.</li>
    <li>Sections on corners have two driveways.</li>
    <li>A route exists between any pair of driveways.</li>
</ul>]]></description>
<input><![CDATA[<p>Input will be divided into two portions: a ``missing road'' portion and an address portion, each terminated by a line consisting of a single `<tt>#</tt>'. The ``missing road'' portion consists of a series of lines with each line containing a road identifier and a pair of house numbers. A road identifier is an `<tt>A</tt>' or an `<tt>S</tt>' (specifying an Avenue or a Street) followed by a number in the range 00 to 49. A house number is an even number in the range 0000 to 4898. The area between and including the specified numbers on the identified road is inaccessible. Note that the line goes directly across the street, thus if number 1612 is inaccessible, then so is 1613. Inaccessible portions run from the borders of sections not from driveways. There will be exactly one space separating parts of the input.</p>
<p></p>
<p>The address portion consists of a series of lines each line containing two addresses. An address is a road identifier (as above) followed by a number in the range 0000 to 4899. There will be exactly one space separating parts of the input.</p>]]></input> 
<output><![CDATA[<p>Output consists of a series of lines, one for each line in the address portion of the input file. Each line contains the distance between the two houses specified in the input (the number of driveways passed) written as an integer, left justified.</p>
<p></p>
<p></p>
<p><b>Note:</b> The following sample data matches the diagram on previous page. (Note the intersection of A13 and S17).</p>]]></output>
<sample_input><![CDATA[A11 1612 1720
A12 1508 1636
S16 1152 1250
S17 1048 1134
S17 1272 1326
#
S16 1288 A11 1543
#]]></sample_input>
<sample_output><![CDATA[213]]></sample_output>
<test_input><![CDATA[A11 1612 1720
A12 0158 1636
S14 0952 1388
S16 1152 1250
S17 1048 1134
S17 1272 1326
S17 0840 0860
A01 2000 4898
A02 2000 4898
A03 2000 4898
A04 2000 4898
A05 2000 4898
A06 2000 4898
A07 2000 4898
A08 2000 4898
A09 2000 4898
A10 2000 4898
A11 2000 4898
A12 2000 4898
A13 2000 4898
A14 2000 4898
A15 2000 4898
A16 2000 4898
A17 2000 4898
A18 2000 4898
A19 2000 4898
A20 2000 4898
A21 2000 4898
A22 2000 4898
A23 2000 4898
A24 2000 4898
A25 2000 4898
A26 2000 4898
A27 2000 4898
A28 2000 4898
A29 2000 4898
A30 2000 4898
A31 2000 4898
A32 2000 4898
A33 2000 4898
A34 2000 4898
A35 2000 4898
A36 2000 4898
A37 2000 4898
A38 2000 4898
A39 2000 4898
A40 2000 4898
A41 2000 4898
A42 2000 4898
A43 2000 4898
A44 2000 4898
A45 2000 4898
A46 2000 4898
A47 2000 4898
A48 2000 4898
A00 2000 2098
A00 2200 2298
A00 2400 2498
A00 2600 2698
A00 2800 2898
A49 2100 2198
A49 2300 2398
A49 2500 2598
A49 2700 2798
A49 2900 2998
A00 3000 3098
A00 3200 3298
A00 3400 3498
A00 3600 3698
A00 3800 3898
A49 3100 3198
A49 3300 3398
A49 3500 3598
A49 3700 3798
A49 3900 3998
A00 4000 4098
A00 4200 4298
A00 4400 4498
A00 4600 4698
A00 4800 4898
A49 4100 4198
A49 4300 4398
A49 4500 4598
A49 4700 4798
S49 0000 0002
#
S49 2520 S49 2512
S49 2412 S49 2520
S49 2520 S49 2412
S49 2512 S49 2520
S16 1288 A11 1543
A13 1621 A13 1625
A13 1625 A13 1621
A13 1621 A13 1618
A13 1621 A13 1622
S16 1288 S16 1282
S16 1288 S16 1292
S16 1288 S16 1289
S16 1289 S16 1288
S17 0888 S17 0882
S17 0888 S17 0892
S17 0888 S17 0889
S17 0889 S17 0888
S17 0888 S17 0832
S17 0888 S17 0831
#
]]></test_input>
<test_output><![CDATA[3
145141
53
145191
213
1
297
379
377
2
245
36
210
2
183
26
158
205
197
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[www.csie.nctu.edu.tw]]></source>
</item>
<item>
<title><![CDATA[Eeny Meeny]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<description><![CDATA[<p>In darkest &lt;name of continent/island deleted to prevent offence&gt; lived a tribe called the ``Eeny Meenys''. They got this name from their way of choosing a chief for a year. It appears that a newspaper reporter visited the tribe and managed to get across a few ideas of civilisation, but apparently came to an unfortunate end before finishing the job. Thus the tribe no longer had a permanent chief; the chief's term was exactly one year. At the end of that time, they ate the current chief, and chose another chief. Their method of choosing a chief was the ``Eeny meeny miny mo'' method. All eligible tribal members (women were also eligible--one of the blessings of civilisation the tribe had adopted) stood in a circle, a starting place was chosen, and the chief medicine man (who was ineligible for chieftainship) went around counting out `E', `e', `n', `y', `M', `e', `e', `n', `y', `M',`i', `n', `y', `M', `o!', `E', `e', `n', `y', `M', `e', `e', `n', `y', `M', `i', `n', `y', `M', `o!', .... At every `o!', the person indicated was pushed out of the circle which then closed up and the count restarted with his neighbour (the one who would have been `E' anyway). This process continued until only one was left--the new chief.</p>
<p></p>
<p>While the chance of glory for a year makes the job of chief highly attractive to tribal members, you (possessing a computer decades before they were invented) find the brevity of the glory unappealing. You have managed to find out that the count this year will start with Mxgobgwq (a very large person), so you would like to know where not to stand. You don't know the direction, nor how many eligible people there are, but you can estimate the number (it is certainly less or equal than 1000000).</p>
<p></p>
<p>Write a program that will determine the `first' (i.e. closest to Mxgobgwq) safe position to stand, regardless of the actual number of people and the direction of count (clockwise or anti-clockwise).</p>]]></description>
<input><![CDATA[<p>Input will consist of a series of lines, each line containing the upper and lower estimates of the number of eligible people (both numbers inclusive). The file will be terminated by a line containing two zeroes (0 0).</p>]]></input> 
<output><![CDATA[<p>Output will consist of a series of lines, one for each line of the input. Each line will consist of a single number giving the number of the position closest to Mxgobgwq that will not be chosen as chief for any number in the given range and for either direction of elimination. If no position is safe then print <tt>&quot;Better estimate needed&quot;</tt>.</p>]]></output>
<sample_input><![CDATA[80 150
40 150
0 0]]></sample_input>
<sample_output><![CDATA[1
Better estimate needed]]></sample_output>
<test_input><![CDATA[80 150
40 150
2 2
3 3
4 4
5 5
6 6
99 499
26 100
0 0]]></test_input>
<test_output><![CDATA[1
Better estimate needed
Better estimate needed
Better estimate needed
1
1
1
Better estimate needed
7
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[www.csie.nctu.edu.tw]]></source>
</item>
<item>
<title><![CDATA[Hearts]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<description><![CDATA[<p>There are 52 playing cards in a pack, divided into suits, and, within suits, into denominations. The suits are (in order, lowest to highest) Clubs, Diamonds, Hearts and Spades, abbreviated C, D, H and S. The 13 denominations (or face values) are (from lowest to highest): 2, 3, 4, 5, 6, 7, 8, 9, 10 (T), Jack (J), Queen (Q), King (K) and Ace(A). A higher card will beat a lower card in the same suit, but will not usually beat any other card in a different suit. An exception to this is the `trump' suit--if a suit is designated to be a trump suit (by whatever means the rules of the game allow), then <b>any</b> card of that suit will beat <b>any</b> card of any other suit.</p>
<p></p>
<p>A simplified version of an old card game called Hearts is played as follows. The dealer deals cards clockwise, one by one, face downward, to four other players and himself, starting with the player on his left, who thus gets the first card, followed by the sixth, and so on, while the dealer gets the fifth card, followed by the tenth, and so on. When each player has 10 cards there will be two left--these are exposed and the suit of the one of higher denomination determines the trump suit. If there is a tie, then the highest ranking suit becomes the trump suit.</p>
<p></p>
<p>A `game' consists of 10 `tricks', each containing 5 cards, one from each player. For each trick, one player `leads', i.e. plays a card face up on the table, the rest of the players then `follow', in clockwise order. The player to the dealer's left leads to the first trick, thereafter the winner of each trick leads to the next trick. A player must follow suit if possible, i.e. play a card of the same suit as the one lead. If he cannot, then he must trump it (play a card of the designated trump suit). If he cannot trump it (because he has no cards in the trump suit), he discards a card. If a trick is trumped, then the person playing the highest trump wins the trick, otherwise the person playing the highest card of the correct suit wins it.</p>
<p></p>
<p>Strategies are as follows:</p>
<p></p>
<ol>
    <li>Leader: The leader always plays the highest card in his hand. If   there is a tie and one of the cards is a trump card, then he leads   the trump, otherwise he plays the highest ranking suit.</li>
    <li>Follower: If possible he must play the highest card in his   hand of the correct suit. If he has no cards in that suit then he   plays the highest trump he has. If he cannot trump it he plays the   highest card in his hand, breaking ties as previously specified.</li>
</ol>
<p>When all the tricks have been played, each player examines the tricks he has taken and scores the face value of any Heart he has (Jack counts 11, Queen counts 12, King counts 13 and Ace counts 14). This score is recorded.</p>
<p></p>
<p>Write a program to simulate the playing of this game.</p>]]></description>
<input><![CDATA[<p>Input will consist of a series of decks of cards, each deck spread over four lines as shown below. The file will be terminated by a line consisting of a single <tt>#</tt>.</p>]]></input> 
<output><![CDATA[<p>Output will consist of a series of lines, one for each deck in the input. Each line will consist of 5 numbers reflecting the scores of the individual players, starting with the dealer and proceeding clockwise through the rest of the players. Each score will consist of a number right justified in a field of width 3.</p>]]></output>
<sample_input><![CDATA[TS QC 8S 8D QH 2D 3H KH 9H 2H TH KS KC
9D JH 7H JD 2S QS TD 2C 4H 5H AD 4D 5D
6D 4S 9S 5S 7S JS 8H 3D 8C 3S 4C 6S 9C
AS 7C AH 6H KD JC 7D AC 5C TC QD 6C 3C
#]]></sample_input>
<sample_output><![CDATA[ 22  0 68  0 14]]></sample_output>
<test_input><![CDATA[QS JS TS 9S 8S 7S 6S 5S 4S 3S 2S AS QH
QC JC TC 9C 8C 7C 6C 5C 4C 3C 2C AC QD
KS JH KC 9H 8H 7H 6H 5H 4H 3H 2H AH KH
JD TH TD 9D 8D 7D 6D 5D 4D 3D 2D AD KD
TS QC 8S 8D QH 2D 3H KH 9H 2H TH KS KC
9D JH 7H JD 2S QS TD 2C 4H 5H AD 4D 5D
6D 4S 9S 5S 7S JS 8H 3D 8C 3S 4C 6S 9C
AS 7C AH 6H KD JC 7D AC 5C TC QD 6C 3C
AD 4D TS 7C AH 5S QC AS 8S 8D QH 2D 3H
KH KS KC 9D JH 7H JD 2S 5D 6D 4S 9S 7S
KD JS 9H 2H TH 8H 3D 8C 3S 4C 6S 9C QS
TD 2C 4H 5H 6H JC 7D AC 5C TC QD 6C 3C
AS QC 8S 8D KD 2D 3H KH 9H 2H TH KS KC
9D JH 7H JD 2S QH TD 2C 4H 5H AD 4D 5D
6D 4S 9S 5S 7S JS 8H 3D 5C 3S 4C 6S 9C
TS 7C AH 6H QS JC 7D AC 8C TC QD 6C 3C
KD QD AD JD 2D TD 3D 9D 4D 8D 5D 7D 6D
KH QH AH JH 2H TH 3H 9H 4H 8H 5H 7H 6H
KC QC AC JC 2C TC 3C 9C 4C 8C 5C 7C 6C
KS QS AS JS 2S TS 3S 9S 4S 8S 5S 7S 6S
QS JS TS 9S 8S 7S 6S 5S 4S 3S 2S AS KS
QC JC TC 9C 8C 7C 6C 5C 4C 3C 2C AC KC
QH JH QD 9H 8H 7H 6H 5H 4H 3H 2H AH KH
JD TH TD 9D 8D 7D 6D 5D 4D 3D 2D AD KD
QS JS TS 9S 8S 7S 6S 5S 4S 3S 2S AS KS
QC JC TC 9C 8C 7C 6C 5C 4C 3C 2C AC KC
QH JH QD 9H 8H 7H 6H 5H 4H 3H 2H AH KH
JD TH 9D TD 8D 7D 6D 5D 4D 3D 2D AD KD
AS AH AD AC 2S 2H 2D 2C 3S 3H 3D 3C 4S
4H 4D 4C 5S 5H 5D 5C 6S 6H 6D 6C 7S 7H
7D 7C 8S 8H 8D 8C 9S 9H 9D 9C TS TH TD
TC JS JH JD JC QS QH QD QC KS KD KH KC
TS AS TH AH TD AD TC AC 9S 2S 9H 2H 9D
2D 9C 2C 8S 3S 8H 3H 8D 3D 8C 3C 7S 4S
7H 4H 7D 4D 7C 4C 6S 5S 6H 5H 6D 5D 6C
5C JS QS KS JH QH KH JD QD KD JC QC KC
TS QC 8S 8D QH 2D 3H KH 9H 2H TH KS KC
9D JH 7H JD 2S QS TD 2C 4H 5H AD 4D 5D
6D 4S 9S 5S 7S JS 8H 3D 8C 3S 4C 6S 9C
AS 7C AH 6H KD JC 7D AC 5C TC QD 6C 3C
AD 4D TS 7C AH 5S QC AS 8S 8D QH 2D 3H
KH KS KC 9D JH 7H JD 2S 5D 6D 4S 9S 7S 
KD JS 9H 2H TH 8H 3D 8C 3S 4C 6S 9C QS 
TD 2C 4H 5H 6H JC 7D AC 5C TC QD 6C 3C
AS QC 8S 8D KD 2D 3H KH 9H 2H TH KS KC
9D JH 7H JD 2S QH TD 2C 4H 5H AD 4D 5D
6D 4S 9S 5S 7S JS 8H 3D 5C 3S 4C 6S 9C
TS 7C AH 6H QS JC 7D AC 8C TC QD 6C 3C
KD QD AD JD 2D TD 3D 9D 4D 8D 5D 7D 6D
KH QH AH JH 2H TH 3H 9H 4H 8H 5H 7H 6H
KC QC AC JC 2C TC 3C 9C 4C 8C 5C 7C 6C
KS QS AS JS 2S TS 3S 9S 4S 8S 5S 7S 6S
QS JS TS 9S 8S 7S 6S 5S 4S 3S 2S AS KS
QC JC TC 9C 8C 7C 6C 5C 4C 3C 2C AC KC
QH JH QD 9H 8H 7H 6H 5H 4H 3H 2H AH KH
JD TH TD 9D 8D 7D 6D 5D 4D 3D 2D AD KD
QS JS TS 9S 8S 7S 6S 5S 4S 3S 2S AS KS
QC JC TC 9C 8C 7C 6C 5C 4C 3C 2C AC KC
QH JH QD 9H 8H 7H 6H 5H 4H 3H 2H AH KH
JD TH 9D TD 8D 7D 6D 5D 4D 3D 2D AD KD
#
]]></test_input>
<test_output><![CDATA[  0  6 14 84  0
 22  0 68  0 14
 58 40  0  6  0
  5  0 63  0 36
  0 72  0  0 32
  0  0  0 93 11
  0  0  0 93 11
  0  2 89  0  0
 16  0  0  0 88
 22  0 68  0 14
 58 40  0  6  0
  5  0 63  0 36
  0 72  0  0 32
  0  0  0 93 11
  0  0  0 93 11
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[www.csie.nctu.edu.tw]]></source>
</item>
<item>
<title><![CDATA[Bonus Bonds]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<description><![CDATA[<p>The government of Impecunia does not levy any taxes, instead it raises money by the (sometimes forced) sale of Bonus Bonds. Originally the Bonds were numbered using a 7 digit number prefixed by a one digit code in the range 1 to 9 representing the region of Impecunia in which the bond was sold. However the scheme has proved so popular that the numbering scheme has been extended by a further two digits. To retain compatibility with the previous scheme, the 8th digit from the right (the third from the left) still designates the region of sale. At the same time, a `central' region was created and has been given the designation 0. For security reasons no bond may be numbered with a number consisting entirely of zeroes, thus, although the original bonds all started from zero (since the region code was non-zero), the bonds from the central region start from 0000000001.</p>
<p></p>
<p>Each month, the winning numbers are drawn for each region independently. The equipment generates a stream of single digits and it would appear to be simple enough to collect these together in groups of ten and compare the results with the list of Bond-holders. However, the equipment is a little antiquated and is liable to various breakdowns, thus it is desirable to only generate numbers that lie within the allocated range and with the same distributions of digits at each position as would be found by examining all the bonds sold for that region. Thus if we wish to draw <i>N</i> numbers for a given region, the equipment is set to generate 10 streams of <i>N</i> digits, one for each position. The first winning number is then made up by taking the first digit from each stream, the second winning number is composed of the second digit in each stream, and so on. For each stream, the equipment is adjusted so that the distribution of digits it generates closely matches the actual distributions of digits in that position on the allocated Bonds. The state auditors generate a table of these distributions so that the two may be compared.</p>
<p></p>
<p>Write a program that will generate the table for the state auditors for any given draw. For each region, the program will read the serial number of the <b>next bond to be sold in that region</b> so that it can calculate the distributions. Since the output is voluminous, your program will only need to print the digit distribution for a particular digit position.</p>
<p></p>
<h2><font color="#0070e8"><a name="SECTION0001001000000000000000"></a></font></h2>]]></description>
<input><![CDATA[<p>Input will consist of a series of lines, each line consisting of a ten digit number representing the <b>next</b> bond number to be sold in a particular region and an integer in the range 1 to 10 representing the desired character position. It is possible that some regions will appear more than once in the input stream, and that others will not appear at all. The file will be terminated by a line consisting of 0000000000 0.</p>]]></input> 
<output><![CDATA[<p>Output will consist of a series of tables, one for each line of the input. Each table will consist of ten rows, one for each digit in the range 0 to 9. Each row will consist of a single number giving the numbers of times that digit appears in the sequence numbers at the desired position. Each number will be right justified in a field of width 11. Separate tables by one blank line.</p>]]></output>
<sample_input><![CDATA[4810000000 1
0000000000 0]]></sample_input>
<sample_output><![CDATA[  100000000
  100000000
  100000000
  100000000
   80000000
          0
          0
          0
          0
          0]]></sample_output>
<test_input><![CDATA[4810000000 1
0000000001 10
0000000001 3
0010000000 1
0010000000 3
9999999999 7
9999999999 3
0000000022 3
0000000022 8
0000000022 9
0000000022 10
0020001234 8
0020001234 3
0000000000 0]]></test_input>
<test_output><![CDATA[  100000000
  100000000
  100000000
  100000000
   80000000
          0
          0
          0
          0
          0

          0
          0
          0
          0
          0
          0
          0
          0
          0
          0

          0
          0
          0
          0
          0
          0
          0
          0
          0
          0

          0
          0
          0
          0
          0
          0
          0
          0
          0
          0

          0
          0
          0
          0
          0
          0
          0
          0
          0
          0

  100000000
  100000000
  100000000
  100000000
  100000000
  100000000
  100000000
  100000000
  100000000
   99999999

          0
          0
          0
          0
          0
          0
          0
          0
          0
  999999999

         21
          0
          0
          0
          0
          0
          0
          0
          0
          0

         21
          0
          0
          0
          0
          0
          0
          0
          0
          0

          9
         10
          2
          0
          0
          0
          0
          0
          0
          0

          2
          3
          2
          2
          2
          2
          2
          2
          2
          2

        200
        200
        134
        100
        100
        100
        100
        100
        100
        100

          0
          0
       1234
          0
          0
          0
          0
          0
          0
          0
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[www.csie.nctu.edu.tw]]></source>
</item>
<item>
<title><![CDATA[Laser Lines]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<description><![CDATA[<p>A computer chip manufacturer has discovered a new way to combine opto-electronics and ordinary electronics by forming light-emitting and receiving nodes on the surface of the chip. These can be used to send messages to each other in a direct line-of-sight manner, thereby speeding up operation considerably by allowing a much greater density of information transfer. One difficulty is that the nodes must all be able to send messages to each other; no node should block the line-of-sight between two other nodes. The manufacturing method ensures that the nodes will be positioned exactly on the points of a lattice covering the chip, so their coordinates are given by integers between 0 and 9999 (inclusive) except that for technical reasons no node can appear at point (0, 0).</p>
<p></p>
<p>Write a program that will read in sets of coordinates of these nodes and determine whether any of them lie on lines containing three or more nodes. Because of the layout method used, it is envisaged that there may well be several lines containing three nodes, but that `longer' lines will be increasingly rare. However, no line will contain more than 10 points.</p>]]></description>
<input><![CDATA[<p>Input will consist of a series of data sets, each set containing the coordinates of between 3 and 300 points (both inclusive). Each set will start on a new line.</p>
<p>The coordinates will be pairs of integers in the range 0 to 9999 and each set will be terminated by a pair of zeroes (0 0). Successive numbers will be separated by one or more spaces; in addition a data set may be split into several lines, such splits will only occur between coordinate pairs and never between the elements of a coordinate pair. The entire file will also be terminated by a pair of zeroes (0 0).</p>
<p>Note that there will be several test cases, but only one will contain more than 100 points.</p>
<p></p>
<h2><font color="#0070e8"><a name="SECTION0001002000000000000000"></a></font></h2>]]></input> 
<output><![CDATA[<p>Output, for each set, is either the message <tt>&quot;No lines were   found&quot;</tt>, or the message <tt>&quot;The following lines were found:&quot;</tt>, followed by the sets of points lying on straight lines, each set ordered first by <i>x</i>, and if the <i>x</i>'s are equal, then by <i>y</i>.</p>
<p>All coordinates are in a field of width 4, and are separated by a comma; the points are delimited by brackets, with no spaces between successive points. The lines themselves are ordered in a similar manner to the points on each line; i.e. by considering the first point on each line, and if more than one line starts at that point, by considering the second point on the line.</p>]]></output>
<sample_input><![CDATA[  5 5 8 7 14 11 4 8   20 15
12 6  18 21 0  0
5 5 8 8 14 13 0 0
5 5 25 17 20 23 10 11 20 14 15 11 0 0
0 0]]></sample_input>
<sample_output><![CDATA[The following lines were found: 
(   4,   8)(   8,   7)(  12,   6)
(   5,   5)(   8,   7)(  14,  11)(  20,  15)
(  12,   6)(  14,  11)(  18,  21)
No lines were found
The following lines were found: 
(   5,   5)(  10,  11)(  20,  23)
(   5,   5)(  15,  11)(  20,  14)(  25,  17)]]></sample_output>
<test_input><![CDATA[5 5 8 7 14 11 4 8 20 15 12 6 18 21 0 0
5 5 8 8 14 13 0 0
5 5 25 17 20 23 10 11 20 14 15 11 0 0
1 1 2 1 3 1 1 2 2 2 3 2 1 3 2 3 3 3 0 0
1 0 2 0 3 0 0 0
0 1 0 2 0 3 0 0
1 1 1 2 1 3 1 4 2 1 3 1 4 1 4 2 4 3 4 4 2 4 3 4 0 0
1 1 1 2 1 3 2 1 2 2 2 3 3 1 3 2 3 3 0 0
0 1 0 2 1 0 1 1 1 2 2 0 2 1 2 2
2 9999 1 9999 0 9999 0 9998 1 9998 2 9998 1 9997 0 9997 2 9997 4999 5001
5000 5001 4999 5000 5001 5001 5000 5000 4999 4999 5001 5000 5000 4999
5001 4999 9997 9997 9997 9998 9998 9997 9997 9999 9998 9998 9999 9997
9998 9999 9999 9998 9999 9999 9999 0 9999 1 9999 2 9998 0 9998 1 9998 2
9997 0 9997 1 9997 2 5000 1 1 5000 9998 5000 5000 9998 0 0
1  314 8610 2026 2729 6716 3187 1618 3723 4257  821 4748  706 8408  598 2933
9172 3679 7746 3279 6977 8441 7180 3067 1627 3295 4660 2467 8256 2791 4818 1492
8743 2873 7727 9764 4925 8879 8272  203 1411 1435 5008  217 5929   97 7745 6506
7705 7081 5575 2061 6811 5928 9554 6440 9983 2438 6761 2957  859 7723 4953 8816
5100 5733 9531 6848 3387   77 7053 9889 7740 7495 1977 1437 9136 7842 5893 8647
6894 2879  937 6289 2800 8771 1613 2732 5437 9607 1744 1571 2681 1775 5768 4982
2852 1560 6098 7397 7464  804  764  598 1066 7955 8059 3816 6120 4368 7408 4939
3413 8188 8170 1414  935  672  603 1939 6729 2275 5703 2545 3659 8371 3146 3149
6564 6922 9030 3187 4787 2965 7667 7405 5520 7236 4117 5421 3663 7550 6689 1124
4717 4037 1148  539 5486 6734 1543 3376 8387 6814 9270 2773 7009 7345 5000 6638
3583 7626 9465 3649 1267 9869 3063  545 1020 8667 5544 6971 1007 6688  166 3099
9043 5352 2921 7395 9006 3472 3538 4878  716 8508 7603 1804 9228 4936 1276 8923
4033 2076 3294 4651 1099 6232 9276 5406 3261 4483 2268 1847 6905 9960 6297 6916
5407  973 3483 7721 2330 8803 7138 4388 9803 1545  394 1844   97 3788 3949 3638
823 4538 5047 4606 6754 8175 5669 2534 3724 5826 8744 6080 2572 6969 5577 8787
3609 3640 6217 7800 4570 2054 6982 8372 7518 9018 1865 7755 2675 2955 7028 4569
9642 1885  123 2245 8991 3228 8629 7631 9666 2744 3961 8361  209 2470  528 5077
4227    4 1502 7093 3125 3954 5477 2610 1511 2930  770 7056 3303 7892 6551 5661
3415 5267 2560 8850 6845  324 1580 1556 4130 4189 1437   38 5297 7623 5703 2308
8624  620 4852  751 3671 6641 2059 8037 5213 4187  393 9920 1605  465  589 1014
8034 9544 1152 2134 7635 9801 3360 4967 3414 5231 9223 5111 6600 9995 7690 7158
8941 9948 7327 7815  168 3660 3198  748 7837 2601 2985 7531  485 8943 9242 4883
6890 3781 4221 7466 6961 3411 6294 5100 9688 1011 1553 3383 6164 3561 5105 6463
8102 6359 9517 4985 4854 9960 2392 1989 4377 6893 7590  322 6127 8003 4643 1684
6345  748 9623 7873 8701 4303   58 2218 5772 8825  586 4742 9314 8699 8596 7213
9812 2127 1542 6613 8251 1898  173 8165 5607 4689 4392 1489 7999 8728  957 5983
7994 2172 4746 4039 5020 7038 7809 3158  352 6047 2920  587 3333 4835  843 6556
8557 3429 3054 4712 9163 7234 3351 4923 8085 2520  364 3480 8848 8607 4377 2507
4215 3687 6506 4299 6359 7582 8128 4559 5375 6160 3078 2402 4083 7244 6556 1795
9604  355 3237 8946 4673 5140 8775 6730 4148 5825 1448 9751 4704 1536 3131 6138
8164 4834 1353 4651 1443 3306 6623 8218 8569 1555 1768 7471 2759 3441 2478  390
9003 6896  805 6640  146 6188 5816 7709 1915 8947 8116 6416 4876 7814 7475 1913
3781 9057 5266 8744 7277 2987 5935 1087 3446 3530 4228 5735 9137 6791 7380 9955
3582  953 4004 2773 9226 2362 3880  807 5285 5139 5372 2242 1956 4152 9699 5026
5787 3710 3758 7887 9149 6811 5735 5272 9293 2290  227 9790 4950 9705 2069 8265
953 4329  612 9978 3845 7047 8653 8209 3941 6556 2752 8652 1818 3661 4124  828
9683   51 1870 1043  628 6369 2726 8039 1186 6943 4066 4890 5211 1003 9378 3248
43 3306 143 3376 153 3383 0 0
0 0
]]></test_input>
<test_output><![CDATA[The following lines were found:
(   4,   8)(   8,   7)(  12,   6)
(   5,   5)(   8,   7)(  14,  11)(  20,  15)
(  12,   6)(  14,  11)(  18,  21)
No lines were found
The following lines were found:
(   5,   5)(  10,  11)(  20,  23)
(   5,   5)(  15,  11)(  20,  14)(  25,  17)
The following lines were found:
(   1,   1)(   1,   2)(   1,   3)
(   1,   1)(   2,   1)(   3,   1)
(   1,   1)(   2,   2)(   3,   3)
(   1,   2)(   2,   2)(   3,   2)
(   1,   3)(   2,   2)(   3,   1)
(   1,   3)(   2,   3)(   3,   3)
(   2,   1)(   2,   2)(   2,   3)
(   3,   1)(   3,   2)(   3,   3)
The following lines were found:
(   1,   0)(   2,   0)(   3,   0)
The following lines were found:
(   0,   1)(   0,   2)(   0,   3)
The following lines were found:
(   1,   1)(   1,   2)(   1,   3)(   1,   4)
(   1,   1)(   2,   1)(   3,   1)(   4,   1)
(   1,   4)(   2,   4)(   3,   4)(   4,   4)
(   4,   1)(   4,   2)(   4,   3)(   4,   4)
The following lines were found:
(   1,   1)(   1,   2)(   1,   3)
(   1,   1)(   2,   1)(   3,   1)
(   1,   1)(   2,   2)(   3,   3)
(   1,   2)(   2,   2)(   3,   2)
(   1,   3)(   2,   2)(   3,   1)
(   1,   3)(   2,   3)(   3,   3)
(   2,   1)(   2,   2)(   2,   3)
(   3,   1)(   3,   2)(   3,   3)
The following lines were found:
(   0,   1)(   0,   2)(   0,9997)(   0,9998)(   0,9999)
(   0,   1)(   1,   1)(   2,   1)(5000,   1)(9997,   1)(9998,   1)(9999,   1)
(   0,   1)(   1,   2)(4999,5000)(5000,5001)(9997,9998)(9998,9999)
(   0,   1)(   1,5000)(   2,9999)
(   0,   1)(   2,   2)(9998,5000)
(   0,   1)(4999,4999)(9998,9997)
(   0,   2)(   1,   1)(   2,   0)
(   0,   2)(   1,   2)(   2,   2)(9997,   2)(9998,   2)(9999,   2)
(   0,   2)(   1,5000)(   2,9998)
(   0,   2)(4999,5000)(9998,9998)
(   0,   2)(4999,5001)(9997,9999)
(   0,9997)(   1,9997)(   2,9997)(9997,9997)(9998,9997)(9999,9997)
(   0,9997)(   1,9998)(   2,9999)
(   0,9997)(4999,4999)(9998,   1)
(   0,9998)(   1,5000)(   2,   2)
(   0,9998)(   1,9997)(4999,4999)(9997,   1)(9998,   0)
(   0,9998)(   1,9998)(   2,9998)(5000,9998)(9997,9998)(9998,9998)(9999,9998)
(   0,9998)(4999,5000)(9998,   2)
(   0,9999)(   1,5000)(   2,   1)
(   0,9999)(   1,9998)(   2,9997)(4999,5000)(5000,4999)(9997,   2)(9998,   1)(9999,   0)
(   0,9999)(   1,9999)(   2,9999)(9997,9999)(9998,9999)(9999,9999)
(   0,9999)(   2,9998)(9998,5000)
(   1,   0)(   1,   1)(   1,   2)(   1,5000)(   1,9997)(   1,9998)(   1,9999)
(   1,   0)(   2,   0)(9997,   0)(9998,   0)(9999,   0)
(   1,   0)(   2,   1)(5000,4999)(5001,5000)(9998,9997)(9999,9998)
(   1,   0)(   2,   2)(5000,9998)
(   1,   0)(4999,4999)(9997,9998)
(   1,   0)(5000,   1)(9999,   2)
(   1,   1)(   2,   2)(4999,4999)(5000,5000)(5001,5001)(9997,9997)(9998,9998)(9999,9999)
(   1,   1)(4999,5000)(9997,9999)
(   1,   1)(5000,4999)(9999,9997)
(   1,   2)(5000,   1)(9999,   0)
(   1,   2)(5000,5000)(9999,9998)
(   1,5000)(4999,5000)(5000,5000)(5001,5000)(9998,5000)
(   1,5000)(9997,   2)(9999,   1)
(   1,5000)(9997,9998)(9999,9999)
(   1,9997)(5000,4999)(9999,   1)
(   1,9997)(5000,9998)(9999,9999)
(   1,9998)(4999,4999)(9997,   0)
(   1,9998)(5000,5000)(9999,   2)
(   1,9999)(   2,9997)(5000,   1)
(   1,9999)(   2,9998)(4999,5001)(5000,5000)(5001,4999)(9998,   2)(9999,   1)
(   1,9999)(4999,5000)(9997,   1)
(   1,9999)(5000,9998)(9999,9997)
(   2,   0)(   2,   1)(   2,   2)(   2,9997)(   2,9998)(   2,9999)
(   2,   0)(5000,   1)(9998,   2)
(   2,   0)(5000,4999)(9998,9998)
(   2,   0)(5001,4999)(9999,9997)
(   2,   1)(5000,5000)(9998,9999)
(   2,   2)(5000,   1)(9998,   0)
(   2,9997)(5000,9998)(9998,9999)
(   2,9998)(5000,4999)(9998,   0)
(   2,9999)(5000,5000)(9998,   1)
(   2,9999)(5000,5001)(5001,5000)(9999,   2)
(   2,9999)(5000,9998)(9998,9997)
(4999,4999)(4999,5000)(4999,5001)
(4999,4999)(5000,4999)(5001,4999)
(4999,5001)(5000,5001)(5001,5001)
(5000,   1)(5000,4999)(5000,5000)(5000,5001)(5000,9998)
(5000,   1)(9998,9997)(9999,9999)
(5000,9998)(9998,   2)(9999,   0)
(5001,4999)(5001,5000)(5001,5001)
(9997,   0)(9997,   1)(9997,   2)(9997,9997)(9997,9998)(9997,9999)
(9997,   0)(9998,   1)(9999,   2)
(9997,   1)(9998,5000)(9999,9999)
(9997,   2)(9998,5000)(9999,9998)
(9997,9998)(9998,5000)(9999,   2)
(9997,9999)(9998,5000)(9999,   1)
(9997,9999)(9998,9998)(9999,9997)
(9998,   0)(9998,   1)(9998,   2)(9998,5000)(9998,9997)(9998,9998)(9998,9999)
(9999,   0)(9999,   1)(9999,   2)(9999,9997)(9999,9998)(9999,9999)
The following lines were found:
(  43,3306)( 143,3376)( 153,3383)
(1443,3306)(1543,3376)(1553,3383)
(3261,4483)(3294,4651)(3415,5267)
(3261,4483)(3333,4835)(3351,4923)(3360,4967)(3414,5231)
(3303,7892)(3483,7721)(3583,7626)(3663,7550)
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[www.csie.nctu.edu.tw]]></source>
</item>
<item>
<title><![CDATA[Roman Numerals]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<img><src><![CDATA[http://192.168.2.104/v1-htm01/185img1.gif]]></src><base64><![CDATA[R0lGODlhEAAeAOMAAJmZmXd3d1VVVe7u7jMzM8zMzBEREaqqqoiIiGZmZv///0RERN3d3SIiIru7uwAAACH5BAEAAAoALAAAAAAQAB4AQAQ8UMlJaz3L6s2794DwjWTJDQmBOKyjLcQizwujMU1QmHzv/xRHgmarDAiBUSI5EiBIAwPAFKDVgNisVhsBADs=]]></base64></img><description><![CDATA[<p>The original system of writing numbers used by the early Romans was simple but cumbersome. Various letters were used to represent important numbers, and these were then strung together to represent other numbers with the values decreasing monotonically from left to right. The letters they used and the numbers that were represented are given in the following table.</p>
<p></p>
<div align="CENTER">
<table cellpadding="3">
    <tbody>
        <tr>
            <td align="LEFT">I</td>
            <td align="RIGHT">1</td>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td align="LEFT">V</td>
            <td align="RIGHT">5</td>
        </tr>
        <tr>
            <td align="LEFT">X</td>
            <td align="RIGHT">10</td>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td align="LEFT">L</td>
            <td align="RIGHT">50</td>
        </tr>
        <tr>
            <td align="LEFT">C</td>
            <td align="RIGHT">100</td>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td align="LEFT">D</td>
            <td align="RIGHT">500</td>
        </tr>
        <tr>
            <td align="LEFT">M</td>
            <td align="RIGHT">1000</td>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td align="LEFT">&nbsp;</td>
            <td align="RIGHT">&nbsp;</td>
        </tr>
    </tbody>
</table>
</div>
<p>Thus 1993 was written as <tt>MDCCCCLXXXXIII</tt>. This system was then superseded by a partially place-oriented system, whereby if the above rule of decreasing values was broken, it meant that the immediately preceding (lower) value was deemed to be `negative' and was subtracted from the higher (out of place) value. In this system 1993 was usually written as <tt>MCMXCIII</tt>. There is still some controversy as to which letters could precede which other letters, but for the purposes of this problem we will assume the following restrictions:</p>
<p></p>
<dl compact="compact">
    <dt>1. </dt>
    <dd>A letter from the left column can never appear more than three times in a row, and there can never be more than one other     occurrence of that letter.
    <p></p>
    </dd>
    <dt>2. </dt>
    <dd>A letter from the right column can never appear more than     once.
    <p></p>
    </dd>
    <dt>3. </dt>
    <dd>Once a letter has been used in a `negative' position, all     subsequent characters (apart from the one immediately following)     may not be greater than that character. </dd>
</dl>
<p>Thus we could write <tt>MXMIII</tt> for 1993 or <tt>CCXCIV</tt> for 294, however we could not write <tt>ILV</tt> for 54, nor could we write <tt>LIL</tt> for 99. Note that 299 could be written as <tt>CCXCIX</tt> or <tt>CCIC</tt></p>
<p></p>
<p><br />
Given a Roman sum, we can either interpret it as such or as an encoding of an Arabic sum. Thus <tt>V+V=X</tt> could be interpreted as an ambiguous encoding of an Arabic sum with <tt>V</tt> <img border="0" align="MIDDLE" width="16" height="30" alt="$\in$" src="http://192.168.2.104/v1-htm01/185img1.gif" /> {1, 2, 3, 4} and <tt>X = 2 * V</tt>. Similarly, <tt>X+X=XX</tt> could be interpreted as a correct Roman sum but an impossible Arabic encoding (apart from the trivial encoding <tt>X</tt> = 0) and <tt>XX+XX=MXC</tt> as an incorrect Roman sum, but a valid encoding with <tt>M</tt> = 1, <tt>X</tt> = 9, and <tt>C</tt> = 8.</p>
<p></p>
<p><br />
Write a program that will read in sums in Roman numerals and determine whether or not they are correct as Roman sums and also whether they are impossible, ambiguous or valid as Arabic encodings. Assume that zero will never appear on its own or as a leading digit, and that no two Roman numerals map onto the same Arabic digit.</p>]]></description>
<input><![CDATA[<p>Input will consist of a series of lines, each line consisting of an apparent Roman sum, i.e. a valid Roman number, a plus sign (<tt>+</tt>), another valid Roman number, an equal sign (<tt>=</tt>) and another valid Roman number. No Roman number will contain more than 9 letters. The file will be terminated by a line consisting of a single <tt>#</tt>.</p>]]></input> 
<output><![CDATA[<p>Output will consist of a series of lines, one for each line of the input, and each containing two words. The first word will be one of (<tt>Correct, Incorrect</tt>) depending on whether the Roman sum is or is not correct. The second word will be separated from the first by exactly one space and will be one of the set (impossible, ambiguous, valid) depending on the Arabic sum.</p>]]></output>
<sample_input><![CDATA[V+V=X
X+X=XX
XX+XX=MXC
#
]]></sample_input>
<sample_output><![CDATA[Correct ambiguous
Correct impossible
Incorrect valid
]]></sample_output>
<test_input><![CDATA[V+V=X
X+X=XX
XX+XX=MXC
MDCLXVI+MDCLXVI=MMCCXXV
II+III=V
XX+XXX=L
LXXX+XX=C
CCC+CC=D
MC+XI=VL
MMM+CCC=MMML
#]]></test_input>
<test_output><![CDATA[Correct ambiguous
Correct impossible
Incorrect valid
Incorrect impossible
Correct impossible
Correct impossible
Correct impossible
Correct impossible
Incorrect ambiguous
Incorrect valid
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[www.csie.nctu.edu.tw]]></source>
</item>
<item>
<title><![CDATA[Pascal Program Lengths]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<description><![CDATA[<p>Your local computer user's group publishes a quarterly newsletter,  and in each issue there is a small Turbo Pascal programming problem  to be solved by the membership. Members submit their solutions to  the problem to the newsletter editor, and the member submitting the  shortest solution to the problem receives a prize.</p>
<p></p>
<p>The length of a program is measured in units. The unit count is determined by counting all occurrences of reserved words, identifiers, constants, left parentheses, left brackets, and the following operators: <code>+, -, *, /, =, &lt;, &gt;, &lt;=, &gt;=, &lt;&gt;, @, ^</code>, and <code>:=</code>. Comments are ignored, as are all other symbols not falling into one of the categories mentioned above. The program with the lowest unit count is declared the winner. Two or more programs with equal unit counts split the prize for the quarter.</p>
<p></p>
<p>In an effort to speed the judging of the contest, your team has been asked to write a program that will determine the length of a series of  Pascal programs and print the number of units in each.</p>
<p></p>
<p><b>Note:</b> Here are some additional notes on Turbo Pascal for those not familiar with the language:</p>
<ul>
    <li>Identifiers start with an underscore (<tt>_</tt>) or a letter (upper or lower case) which is followed by zero or more characters that are underscores, letters or digits.</li>
    <li>The delimiter for the beginning and ending of a string constant  is the single forward quote (<tt>'</tt>).  Each string is entirely on a single source line (that is a string constant cannot begin on one line and continue on the next).  If <tt>''</tt> appears within a string then it represents a single <tt>'</tt> character that is part of the string. A string constant consisting of a single <tt>'</tt> character is, therefore, represented by <tt>''''</tt> in a Turbo Pascal program. The empty string is allowed.</li>
    <li>The most general form of a numeric constant is illustrated by the  constant <tt>10.56E-15</tt>.  The <tt>10</tt> is the integral part (1 or more digits) and is always present.  The <tt>.56</tt> is the decimal part and is optional.  The <tt>E-15</tt> is the exponent and it is also optional. It begins with an upper or lower case <tt>E</tt>, which is followed by a sign (<tt>+</tt> or <tt>-</tt>).  The sign is optional.</li>
    <li>Turbo Pascal supports hexadecimal integer constants which consist of a $ followed by one or more hex digits (`0' to `9', `a' to `f', `A' to `F').  For example, $a9F is a legal integer constant in Turbo Pascal.</li>
    <li>The only comment delimiters that you should recognise are <tt>{}</tt>, and not <tt>(**)</tt>.  Comments do not nest.</li>
    <li>`+' and `-' should be considered as operators wherever possible. For example in <br />
    <tt>x := -3</tt> the `-' and the `3' are separate tokens.</li>
    <li>Subranges of ordinal types can be expressed as <tt>     lower..upper</tt>.  For example, <tt>1..10</tt> is a subrange involving   the integers from 1 to 10.</li>
    <li>All tokens not mentioned anywhere above consist of a single character.</li>
</ul>]]></description>
<input><![CDATA[<p>Input to your program will be a series of Turbo Pascal programs.  Each program will be terminated by a line containing tilde characters  in the first two columns, followed by the name of the submitting  member. Each of these programs will be syntactically correct and use  the standard symbols for comments (braces) and subscripts (square  brackets).</p>
<p></p>
<p>For each program, you are print a separate line containing the name of the submitting member and the unit count of the program. Use a  format identical to that of the sample below.</p>]]></input> 
<output><![CDATA[<pre>
PROGRAM SAMPLEINPUT;

VAR
  TEMP : RECORD
    FIRST, SECOND : REAL;
    END;

BEGIN {Ignore this }
TEMP.FIRST := 5.0E-2;
READLN (TEMP.SECOND); 
WRITELN ('THE ANSWER IS', TEMP.FIRST * TEMP.SECOND : 7 : 3)
END.
~~A. N. Onymous</pre>]]></output>
<sample_input><![CDATA[Program by A. N. Onymous contains 29 units.]]></sample_input>
<sample_output><![CDATA[]]></sample_output>
<test_input><![CDATA[PROGRAM SAMPLEINPUT;

VAR
  TEMP : RECORD
    FIRST, SECOND : REAL;
    END;

BEGIN {Ignore this }
TEMP.FIRST := 5.0E-2;
READLN(TEMP.SECOND);
WRITELN('THE ANSWER IS', TEMP.FIRST * TEMP.SECOND : 7 : 3)
END.
~~A. N. Onymous
program SAMPleinput;

VAR
  TEMP : RECORD
    FIRST, SECOND : 0..1000;
    END;
  ch : array [1..1] of Char;
  chptr : ^char;
  _r1, r_2, _r_3_ : REAL

BEGIN {Ignore this 'and this'}
_r1 := 5E2;
r_2:=-55E-2;
_r_3_ := 455E+22;
_r_3_ := 52342342.222;
_r_3_ := -52342342.222;
chptr := @ch[1];
ch[1] := '''';
TEMP.FIRST := -5;
READLN(TEMP.SECOND);
WRITELN('{THE} '' ANSWER IS''', TEMP.FIRST * TEMP.SECOND : 7)
END.
~~A
PROGRAM ppl(input, output);

VAR
   aline : string;
   tot : INTEGER;
   legal : SET OF CHAR;

BEGIN
WHILE NOT eof DO
   BEGIN
   tot := 0;
   REPEAT
      readln(aline);
      IF pos('~~', aline) <> 1 THEN
         BEGIN
	 WHILE aline <> '' DO
	    BEGIN
	    CASE aline[1] OF
	     'a'..'z', 'A'..'Z', '_':
	       BEGIN
	       inc(tot);
	       WHILE (aline <> '') AND (aline[1] IN ['_', '0'..'9',
		                        'a'..'z', 'A'..'Z']) DO
		  delete(aline, 1, 1);
	       END;
	     '+', '-', '*', '/', '=', '@', '^', '[':
	       BEGIN
	       inc(tot);
	       delete(aline, 1, 1);
	       END;
	     '<':
	       BEGIN
	       inc(tot);
	       delete(aline, 1, 1);
	       IF (aline <> '') AND (aline[1] IN ['>', '=']) THEN
		  delete(aline, 1, 1);
	       END;
	     '>':
	       BEGIN
	       inc(tot);
	       delete(aline, 1, 1);
	       IF (aline <> '') AND (aline[1] IN ['=']) THEN
		  delete(aline, 1, 1);
	       END;
	     ':':
	       BEGIN
	       delete(aline, 1, 1);
	       IF (aline <> '') AND (aline[1] = '=') THEN
		  BEGIN
		  inc(tot);
		  delete(aline, 1, 1);
		  END;
	       END;
	     '{':
	       BEGIN
	       WHILE pos('}', aline) = 0 DO
		  readln(aline);
	       delete(aline, 1, pos('}', aline));
	       END;
	     '(':
	       BEGIN
	       delete(aline, 1, 1);
	       IF (aline <> '') AND (aline[1] = '*') THEN
		  BEGIN
		  WHILE pos('*)', aline) = 0 DO
		     readln(aline);
		  delete(aline, 1, pos('*)', aline));
	          END
 	       ELSE
		  inc(tot);
	       END;
	     '''':
	       BEGIN
	       inc(tot);
	       WHILE (aline <> '') AND (pos('''', aline) = 1) DO
		  BEGIN
		  delete(aline,  1, 1);
	 	  delete(aline, 1, pos('''', aline));
		  END;
	       END;
	     '$':
	       BEGIN
	       delete(aline, 1, 1);
	       inc(tot);
	       WHILE (aline <> '') AND (aline[1] IN ['0'..'9', 'a'..'f',
			                'A'..'F']) DO
		  delete(aline, 1, 1);
	       END;
	     '0'..'9':
	       BEGIN
	       inc(tot);
	       legal := ['0'..'9', '.'];
	       WHILE (aline <> '') AND (aline[1] IN legal) DO
	  	  BEGIN
		  IF aline[1] = '.' THEN
		     legal := ['0'..'9'];
		  delete(aline, 1, 1);
	   	  END;
	       IF (aline <> '') AND (aline[1] IN ['e', 'E']) THEN
		  BEGIN
		  delete(aline, 1, 1);
		  WHILE (aline <> '') AND (aline[1] = ' ') DO
		     delete(aline, 1, 1);
		  IF (aline <> '') AND (aline[1] IN ['+', '-']) THEN
		     delete(aline, 1, 1);
		  WHILE (aline <> '') AND (aline[1] = ' ') DO
		     delete(aline, 1, 1);
		  WHILE (aline <> '') AND (aline[1] IN ['0'..'9']) DO
		     delete(aline, 1, 1);
		  END;
	       END;
	     OTHERWISE
	       delete(aline, 1, 1);
	    END;
	 END;
      END;
   UNTIL pos('~~', aline) = 1;

   writeln('Program by ', copy(aline, 3, 1000), ' contains ', tot:1, ' units.');
   END;
END.
~~soln
]]></test_input>
<test_output><![CDATA[Program by A. N. Onymous contains 29 units.
Program by A contains 72 units.
Program by soln contains 503 units.
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[www.csie.nctu.edu.tw]]></source>
</item>
<item>
<title><![CDATA[Synchronous Design]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<img><src><![CDATA[http://192.168.2.104/v1-htm01/192img2.gif]]></src><base64><![CDATA[]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/192img3.gif]]></src><base64><![CDATA[R0lGODlhnQAZAIAAAAAAAP///yH5BAEAAAEALAAAAACdABkAAAL+jI+pyw3fopy0WvXA3VzCDoYi840mVZ7qGmnsi2Tw/KZX5h5pmX+2wdPYXL8dMRdD8jBIJrD5ZA6hwagVIiQCAz7lkevTyapgbvl8FZ691kS2vf6iw2lyHCzHtWXlrjjvpzcX2MeGluT39EW2VNeDaGhnGCOW5JSmY4l5KEjyWBnViGeUOCXKOLmntIAK13o46iCnegcHGYf1aUbbZxs0q1mLxds1CwU6PIj75vaYu3uaKW3W47xou7lLjayrNueQWY2Z3LiEw3cOKa74l4iHPbr+rkgqmO751159fx8/8kMjoMCBHpgRPIgwYZZjCRs6PMHnocSJFCtavIgxo8YWjRw7evwIMqTIkSRLmjyJMqXKlSYLAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/192img4.gif]]></src><base64><![CDATA[R0lGODlhYwAZAIAAAAAAAP///yH5BAEAAAEALAAAAABjABkAAALNjI8AyO1v1IJPUktzU7rX6R3cBYbmmY1o6ajoC4us57az6dbRAo661LuRarkZUCYK+HjKksXX3CGjEdxEBa0mrlcqj9ssSsNgqldom2LH7CX4OG0Hk+24Zr3DmM3OMnyPN4ZVtpdC+NPHpiSDxzEH+HbmqPOR97UxaKlFRueo5pT0xrSIxjC5yFc157n5pfcHlJlniaFnGEvLyAj7d1IaAxxMCUEYbAx8GjL5e9x8EeY77Dx9S219jZ2tvc3d7f0NHi4+Tl5ufo6ert5cAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/192img5.gif]]></src><base64><![CDATA[R0lGODlhTAAZAIAAAAAAAP///yH5BAEAAAEALAAAAABMABkAAAKRjI+py+0B4pu02iav3tzkDoYYwGXfSH1qcp4eycKkCS80CknmcUOxx5NFhi8GMWekHZXFVu0pRAKTQepP6pK+jlto0aq9IrzhrznW09nIiizZrapVp0/f+iyW8eb2GT8KFCc3NjSIJogIpZgoApLVCGmhYxhZOTHzaKm5Rrnp+QkaKjpKWmp6ipqqusra6spRAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/192img6.gif]]></src><base64><![CDATA[]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/192img7.gif]]></src><base64><![CDATA[]]></base64></img><description><![CDATA[<p>The designers of digital integrated circuits (IC) are very concerned about the correctness of their designs because, unlike software, ICs cannot be easily tested. Real tests are not possible until the design has been finalized and the IC has been produced.</p>
<p></p>
<p>To simulate the behavior of a digital IC and to more or less guarantee that the final chip will work, all of today's digital ICs are based on a <i>synchronous design</i>.</p>
<p></p>
<p><a name="27">&nbsp;</a> <img align="BOTTOM" src="http://192.168.2.104/v1-htm01/192img2.gif" alt="figure22" /> <br />
<strong>Figure:</strong> The critical path (dashed line) takes 43ns to settle</p>
<p></p>
<p>In a synchronous design, an external clock signal triggers the IC to go from a well defined and stable state to the next one. On the active edge of the clock, all input and output signals and all internal nodes are stable in either the high or low state. Between two consecutive edges of the clock, the signals and nodes are allowed to change and may take any intermediate state. The behavior of a synchronous network is predictable and will not fail due to hazards or glitches introduced by irregularities of the real circuit.</p>
<p></p>
<p>To analyze whether an IC has a synchronous design, we distinguish between <i>synchronous</i> and  <img align="MIDDLE" width="157" height="25" src="http://192.168.2.104/v1-htm01/192img3.gif" alt="tex2html_wrap_inline65" /> . Flip flops are synchronous nodes. On the active edge of the clock, the output of the flip flop changes to the state of the input and holds that state throughout the next clock cycle. Synchronous nodes are connected to the clock signal.</p>
<p></p>
<p>Simple gates like ANDs or ORs are asynchronous nodes. Their output changes - with a short delay - whenever one of their inputs changes. During that transition phase, the output can even go into some undefined or intermediate state.</p>
<p></p>
<p>For simplicity, we assume that all inputs of the circuits are directly connected to the output of a synchronous node outside the circuit and that all outputs of the circuit are directly connected to the input of a synchronous node outside the circuit.</p>
<p>For an IC to have a synchronous design, mainly two requirements must be met:</p>
<p></p>
<ul>
    <li>The  <img align="MIDDLE" width="99" height="25" src="http://192.168.2.104/v1-htm01/192img4.gif" alt="tex2html_wrap_inline67" />  introduced between two synchronous nodes must be smaller or equal than the clock period so there is enough time for nodes to become stable. In figure 1, the round-ended boxes are asynchronous nodes whereas the square boxes are synchronous nodes. The delay introduced on the dashed path is 43ns and exceeds the given clock period of 30ns.</li>
    <li>There may be  <img align="MIDDLE" width="76" height="25" src="http://192.168.2.104/v1-htm01/192img5.gif" alt="tex2html_wrap_inline69" />  composed exclusively of asynchronous nodes. In the real circuit such cycles could oscillate. In figure 2, the dashed path constitutes a cycle of asynchronous nodes.</li>
</ul>
<p>Figure 3 shows a circuit with a synchronous design. It does not contain cycles composed of asynchronous nodes and the longest path between two  synchronous nodes is shorter than the clock period of 30ns.</p>
<p></p>
<p><a name="36">&nbsp;</a> <img align="BOTTOM" src="http://192.168.2.104/v1-htm01/192img6.gif" alt="figure31" /> <br />
<strong>Figure:</strong> The design contains a cycle (dashed line)</p>
<p></p>
<p></p>
<p><a name="43">&nbsp;</a> <img align="BOTTOM" src="http://192.168.2.104/v1-htm01/192img7.gif" alt="figure38" /> <br />
<strong>Figure:</strong> A synchronous design</p>
<p></p>
<p>Your are to write a program that decides for a given IC whether it has a synchronous design or not. You are given a network of synchronous and asynchronous nodes, a delay for each node, some inputs and outputs and the clock period.</p>
<p>You may safely assume that</p>
<p></p>
<ul>
    <li>the delays introduced between any input and any output of the same node are equal, i.e. equal to the delay given for that node,</li>
    <li>synchronous nodes have no delay at all,</li>
    <li>all connections between two nodes connect an output to an input.</li>
</ul>]]></description>
<input><![CDATA[<p>The input file contains several circuits. The first line gives the number of circuits in the file.</p>
<p></p>
<p>For each circuit in the file, the first line contains the clock period for the circuit, given as an integer number in nanoseconds. The next line gives the number of nodes. The following lines each contain a node, described by a letter and a integer number. The letter is '<tt>i</tt>' for an input, '<tt>o</tt>' for an output, '<tt>a</tt>' for an asynchronous node and '<tt>s</tt>' for a synchronous node. The number gives the delay introduced by the node as an integer number in nanoseconds (only meaningful for an asynchronous node). Nodes are implicitly numbered, starting at zero.</p>
<p>After the nodes, the number of connections for the circuit follows. Each following line contains a pair of integer numbers denoting a connection between the output and the input of two nodes. The connection links an output of the node given by the first number and an input of the node given by the second number.</p>
<p></p>
<p>The clock signal is not given in the input file. We assume that all synchronous nodes are properly connected to the clock signal.</p>]]></input> 
<output><![CDATA[<p>For each circuit in the input file, your output file should contain a line with one of the following messages:</p>
<p></p>
<ul>
    <li><tt>&quot;Synchronous design. Maximum delay: &lt;ss&gt;.&quot;</tt> if the circuit has a synchronous design.
    <p>&lt;<i>ss</i>&gt; should be replaced by the longest delay found on any path between two synchronous nodes.</p>
    </li>
    <li><tt>&quot;Circuit contains cycle.&quot;</tt> if the circuit contains a cycle composed exclusively of asynchronous nodes.</li>
    <li><tt>&quot;Clock period exceeded.&quot;</tt> if there is a path between two synchronous nodes that is longer than the given clock period and there are no cycles composed of asynchronous nodes.</li>
</ul>]]></output>
<sample_input><![CDATA[1
30
10
i 0
i 0
i 0
i 0
o 0
o 0
a 9
a 11
a 8
s 0
9
0 8
1 7
2 6
2 6
6 7
7 8
8 4
7 9
9 5]]></sample_input>
<sample_output><![CDATA[Synchronous design. Maximum delay: 28.]]></sample_output>
<test_input><![CDATA[4
30
10
i 0
i 0
i 0
i 0
o 0
o 0
a 9
a 11
a 8
s 0
9
0 8
1 7
2 6
3 6
6 7
7 8
8 4
7 9
9 5
30
6
i 0
i 0
a 30
a 20
s 0
o 0
7
0 2
1 2
0 3
1 3
2 4
3 5
4 1
29
6
i 0
i 0
a 30
a 20
s 0
o 0
7
0 2
1 2
0 3
1 3
2 4
3 5
4 1
100
4
i 0
a 20
a 20
o 0
4
0 1
1 2
2 1
2 3
]]></test_input>
<test_output><![CDATA[Synchronous design. Maximum delay: 28.
Synchronous design. Maximum delay: 30.
Clock period exceeded.
Circuit contains cycle.
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[www.csie.nctu.edu.tw]]></source>
</item>
<item>
<title><![CDATA[ Triangle]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<img><src><![CDATA[http://192.168.2.104/v1-htm01/194img1.gif]]></src><base64><![CDATA[R0lGODdhBgGsAPcAAAAAAAEBAQICAgMDAwQEBAUFBQYGBgcHBwgICAkJCQoKCgsLCwwMDA0NDQ4ODg8PDxAQEBERERISEhMTExQUFBUVFRYWFhcXFxgYGBkZGRoaGhsbGxwcHB0dHR4eHh8fHyAgICEhISIiIiMjIyQkJCUlJSYmJicnJygoKCkpKSoqKisrKywsLC0tLS4uLi8vLzAwMDExMTIyMjMzMzQ0NDU1NTY2Njc3Nzg4ODk5OTo6Ojs7Ozw8PD09PT4+Pj8/P0BAQEFBQUJCQkNDQ0REREVFRUZGRkdHR0hISElJSUpKSktLS0xMTE1NTU5OTk9PT1BQUFFRUVJSUlNTU1RUVFVVVVZWVldXV1hYWFlZWVpaWltbW1xcXF1dXV5eXl9fX2BgYGFhYWJiYmNjY2RkZGVlZWZmZmdnZ2hoaGlpaWpqamtra2xsbG1tbW5ubm9vb3BwcHFxcXJycnNzc3R0dHV1dXZ2dnd3d3h4eHl5eXp6ent7e3x8fH19fX5+fn9/f4CAgIGBgYKCgoODg4SEhIWFhYaGhoeHh4iIiImJiYqKiouLi4yMjI2NjY6Ojo+Pj5CQkJGRkZKSkpOTk5SUlJWVlZaWlpeXl5iYmJmZmZqampubm5ycnJ2dnZ6enp+fn6CgoKGhoaKioqOjo6SkpKWlpaampqenp6ioqKmpqaqqqqurq6ysrK2tra6urq+vr7CwsLGxsbKysrOzs7S0tLW1tba2tre3t7i4uLm5ubq6uru7u7y8vL29vb6+vr+/v8DAwMHBwcLCwsPDw8TExMXFxcbGxsfHx8jIyMnJycrKysvLy8zMzM3Nzc7Ozs/Pz9DQ0NHR0dLS0tPT09TU1NXV1dbW1tfX19jY2NnZ2dra2tvb29zc3N3d3d7e3t/f3+Dg4OHh4eLi4uPj4+Tk5OXl5ebm5ufn5+jo6Onp6erq6uvr6+zs7O3t7e7u7u/v7/Dw8PHx8fLy8vPz8/T09PX19fb29vf39/j4+Pn5+fr6+vv7+/z8/P39/f7+/v///ywAAAAABgGsAAAI/wABCBxIsKDBgwgTKlzIsKHDhxAjSpxIsaJFhdoyatzIsaPHjyBDihxJsqTJkyhTqlzJsqVHgS5jypxJs6bNmzhRwszJs6fPn0CDltwptKjRo0iTgiSqtKnTp1BbMo1KtarVqFOvat3KlWfWrmDDij35dazZs2fLol3L9qratnDjJn0rt67dnnTv6t0bMy/fv4CHAghMuLDOwYYTK36JeLFjxX71Nn4cOLLdwZMp87VcF3FmzXc5x538GbRc0XAzlzbdFjXb0qtZo3W9djVt2VhjSxapG3fX22N7ZxTu2y3x0UOLpz3emqzy4Mxf63weFjjY6BqtU8eLPS3L7tuBav/fCn5j+fBez19nPHykevQ2x7t92Z74e/gz5VuFnd3kffwu6UeVbf35JyCABv5FoDaYMUjSQAgedeBTuhFlX4ERBjWhU/9h2F6G4nWIVXwdiQjiUiZSSFNZKZ7I0YZzMQgcXS26OFyNSKkmWmQwgtijUbZBiGJ3OGb4o1D2JSSVjSsWWZST7jEp05HiqSilVFBWaeWVKlHpU5YJcnnYafR9tOBSyYkZZnMlhnQmmg+qKRhybd5IGmakyZidhf7J6R6YOfH3oYN2DrpTg4b26SeKqZVpXmNMeeYhn4ouWiKgN70JE6R5Ekroph4+iCllXuJ0JqR7mpcoqoM6Z2mqtcH/+Smnkq56Y6iVWloqiWY++uGmnc7663crjbpcrG7yVmyAXcK3a35RJtsss9M9K5a1fcUpq6t9RXcoddgueVmuxv5WrrjjatsqbuEuu9eFuLLW7rTv/rkuu+fSu5my85KXb0r//tRvawHnWpmNA6dpWMGzFUyjYwyb1W+tvULs47/wPhZxdRirq/HGXM0rHMg5AjjxvShrjN/ALBZHclUJV+wyejE7OvN2Nb8Y3ssU8uwpuD7PxXPQI7o8NIJEP/ly0gP6lnPKO+MLs4tMf0ly1fthbSrIWs+nWc5de/1x0VyGPeXGZmuVNpZQra02xBG7rbbcZDFMN3mJsfyqqoXp/713vJIFfHd1hJ38t86AiXw4e5t1vLjNl+U7OLKhSf64tJGXfDnmp507eaOdlfv5aHdjOzqZqRl7emepA7k5wAQ/+bq+Eo+6+m4NIzn7d2GX+rSztWv48+6wXwsmq8TT7q+WUKs68rYIcyzwpdI+Dz3V12X5JuJ4vujZoZRemfSRFTr67bDIIy+x62b+fiteyiL+M6Lv+9r82xIyahz80WKY50G+Ut+1AlgoB4GvPt/bU7C4tz+vKMxT/5Nf+rxTIFAh8H3d05MBJ1Wn+0moSN7yH8UkxarwDbBVd4JgfyYIq3upBmYgZMxnJjgVCyXwUxSc363ohyoWWnBdgmobjv+COEPAFW99KFQhDf2nwlAFSYiBMl+ZOmS2Tlnwhz1k4g2TyDmhmapXLfNg/5CYqhuGj4cVHCHfhmdEDdXoVJADTRCjyEEgNmVCsRGgGBdWwek5kY2AdCOvZLY9ObbQgWusj8yAlKLypex2s4mj/ZRWk95kUJLJm+MiQ1TJ+HUxeS7MGCeh5cnrgXKGx8GUfqz3yVNi8pXxoeKKQCk/YgmMihfJpS53ycte+hIiVqPlotwnzNdAspiMRKaaiKnM4DVTfMd85i2lJKRiMvM3bdzcNaVnzWhyJ5Cz2ybe9ng4ceLPnIXzZnrIuTd0SrOB76SaOuOZqXnSs5L2vGd+8qlDz27100j8/CfvBIq0gBIUYAY9aN0U6qyEMlRUD92ZQyPqpolStH0XfY47MzpNjjrNoh49ZEjl+MuSmvSkKE2pSksaEAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/194img2.gif]]></src><base64><![CDATA[R0lGODlhLwEQAIAAAAAAAP///yH5BAEAAAEALAAAAAAvARAAAALKjI+py+0Po5y02ouzASB0DYbiSJbmiabc8aXuC8fyDLdPuzo2zff+D6zsGLahwhhMKpfMWw6CTHQ4z0YUQT1Rt82uN5gL66Cb7A3K9Ry3bGS7+o3LUWY1XEpmXTfOsmf4xrYwNTVneFhSVSgVWMeCZdToqPa4J4SImamhaNkJmTdxl7FiqWlqyglKVORJ4Sb5+nc6S/vppzqIU1qKlXhbC6zZeKbTFsHLRxKGHNw8u8f8GOpMXS0TLcGMbc3dPRoj6i0+DrItZE5RAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/194img3.gif]]></src><base64><![CDATA[R0lGODlhSQEnAIAAAAAAAP///yH5BAEAAAEALAAAAABJAScAAAL+jI+py+0Po5y02otzBRzoD4biSJbmiZZcyrbuC8dyu872jef6btX8DwwKJR3P8ODxHQ3KpfOpMjaDncAUWLtCt1yi0fodZsPUcfeMhvjIQvNRm47L3csvXHeX67njPE7qdxO4RyiWlOQEmGhX2AhVVFUXKTnpaHmJmam5ydnp+QkaKjpKWmp6igQJWaZaifpK2Lr6I1sEextSq7urKsL7qzsCPDyLa3yMnLwYTLur/AwdLT1NXY3F9oathugyaO3pnRPOxEij/Y3+mJrOnhx23h5vC4ZE7+BKMr9mz3A47kXHCr8E+OItIocw4RU38DYo4hewHph/Dxi+e5gqUkOQg3jKrcGYsR7Ffh7tgJSYUFhJBAHNjOT4Yh7EdQTfCcw3aV9Kliw39shpc6dNnzDFaSw3UChRh3RMLrh4Ql/QpDWL1uE5c6dSFVh1UlXysl/XqXeWWpUR1OuUjybSIl3rlKtEsDTFnjVkK2+rmntV6l0hi69Mv1Wk9np6N/EFs7QUOwb3OPK9OGEls2PMQ0kBADs=]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/194img4.gif]]></src><base64><![CDATA[R0lGODlhQgEQAIAAAAAAAP///yH5BAEAAAEALAAAAABCARAAAAL+jI+py+0Po5y02nuBBrj7b2kBB5bmiaZqJ67uu7QjTNf2rcq4Q+5Nr/MJh8RasGjoIWcH5fIJfW2crBE1qdskptvjT+K1OrUI7lZ8jarXGZJ3Cn+Lgq05kFNXwpOPdNmtB4jVhCdYhhXGprjIICMXZ/Y3KMnkWNhEOJjIx5NHeZfpeJbJWGqqIFriScpqhah3eAW5R4lKlQV4FHjKe7oKAtrqyhppC+E3adxVW8yU3Au9lqc7S3Yo9rcbeh0TgTxsO7YL27oZfe5j5+xhyAw+x43q3Qe0zGm5rg2Ozl8EqWotm5Y4r8J8w9QpYMFcZAgSotUvokR/YJ4cnIgxo4sTi+s0evwIUlgpjiFLmvxBcomfAgA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/194img5.gif]]></src><base64><![CDATA[R0lGODlhUQERAIAAAAAAAP///yH5BAEAAAEALAAAAABRAREAAAL+jI+py+0Po5y0WoCBpVnv2H3iSJbmiaYqaGDr4blv7L32jef6XtG3P2vVeMSi8YiUyEghxdL2FGUQzaT1iiVGR9tAN/XlAIXZsvlscg25a6+m7fyomdRaGI3P62OnLf8Bx+LFZFeod4iY1dQReOEGU9XQmLDESAgJ80gZOAW5FumZKGomc1fHCCr0NikJUcp66baKqUn2WDlba1s62muEq4RquWnbA/j6Y6jZ+cRbq2Z3mmnqW90XDTV2LNxJO8Hd7TSErFtHTAvaPGjNnly8omzsQF0SpfxlP17YrN/uP0ODHrhwLVRtYEWPTaZ1zDjxMzfOnLd/FOvNgiXnHYcyYwtVRGQY71M0YB+LJayIch6qbCfjqCR4bVikYaemrJQVDlzKnTwZYOwJNKhQeUNVFAAAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/194img6.gif]]></src><base64><![CDATA[R0lGODlhbAEmAIAAAAAAAP///yH5BAEAAAEALAAAAABsASYAAAL+jI+py+0Po5y0SoCB3bxXHGgU6JUeKJrqyrauQ77yHKdRPNOpnff+38IBh6ODEMYjNpKMHVMJjSqP0moI8Wxmq1sj1goOYzMqDVWcIAdD6lt31X68r5k5+h4UnUcou5QEaKIXJ+fHAagHAzG4h+fIUmOoZdAI1mYmuWBTOdZzyaYo1/lIKlOjWZfKhFgK6pWkmto0upj5sXmVFlunsGnbCoxK+ZtmROyDw3lBW4jsuwhtHDx9wnicS4iXfD3MjOTsrdksTV1+C8o9CBwJ5zTBXUsu+t1tbn+hKpjtuJue7/aj37wl/+4ZPCiO2q8n8Ep0aYgwIhqIpM5QPCQxo8b+aMEWMpx2caNIZ7yGwXJFZCGqkmxOKoM0Muaffh9H8WDVMcvNRDZDyvwphiaVnfXqvbSyhShKV0eBOnUjNKrUhgyTyTM2NavUSUu04CqKVavYXU/LptSF6QvYiknRLnVnNq7BqAnVoaN0teI8uyjwrpULWCZPVjyXPqo0WF3hpoEblytJlmwpxGoix3KMOeW+jJsP+czzOTNCxiDt6sv5V/TPOaQ7htvQ+mxe1YIBxmTnMHS72bRLI75hWCLuaqV5955selahtKv93Yt9fArcruOgt7LuxR726EBO9RL6PbVweNs1c1eYXHmo4OPLlO+u+/zulm33vg+6g/jj/PIxkd9dT919QanlmTlf9XdYQeoRJGAYl3UQHyQKIhhRhHE1SGGGC2o4DocefhiFhY4UAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/194img7.gif]]></src><base64><![CDATA[R0lGODlhCgAIAIAAAAAAAP///yH5BAEAAAEALAAAAAAKAAgAAAIRjIGmGYzc2lMRSOrs0rC/bxUAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/194img8.gif]]></src><base64><![CDATA[R0lGODlhCgAZAIAAAAAAAP///yH5BAEAAAEALAAAAAAKABkAAAIjjA0QesvbXjoPUjcRSjJ2+m0iODogl1nNyqps1cbyTNf2TRcAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/194img9.gif]]></src><base64><![CDATA[R0lGODlhCQARAIAAAAAAAP///yH5BAEAAAEALAAAAAAJABEAAAIYTICmyNYHYFxH2WRdpnv2rXXeNYLmiaIFADs=]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/194img10.gif]]></src><base64><![CDATA[R0lGODlhCAAIAIAAAAAAAP///yH5BAEAAAEALAAAAAAIAAgAAAIODI6pYMwBH4xuthupxgUAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/194img10.gif]]></src><base64><![CDATA[R0lGODlhCAAIAIAAAAAAAP///yH5BAEAAAEALAAAAAAIAAgAAAIODI6pYMwBH4xuthupxgUAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/194img7.gif]]></src><base64><![CDATA[R0lGODlhCgAIAIAAAAAAAP///yH5BAEAAAEALAAAAAAKAAgAAAIRjIGmGYzc2lMRSOrs0rC/bxUAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/194img8.gif]]></src><base64><![CDATA[R0lGODlhCgAZAIAAAAAAAP///yH5BAEAAAEALAAAAAAKABkAAAIjjA0QesvbXjoPUjcRSjJ2+m0iODogl1nNyqps1cbyTNf2TRcAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/194img9.gif]]></src><base64><![CDATA[R0lGODlhCQARAIAAAAAAAP///yH5BAEAAAEALAAAAAAJABEAAAIYTICmyNYHYFxH2WRdpnv2rXXeNYLmiaIFADs=]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/194img7.gif]]></src><base64><![CDATA[R0lGODlhCgAIAIAAAAAAAP///yH5BAEAAAEALAAAAAAKAAgAAAIRjIGmGYzc2lMRSOrs0rC/bxUAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/194img8.gif]]></src><base64><![CDATA[R0lGODlhCgAZAIAAAAAAAP///yH5BAEAAAEALAAAAAAKABkAAAIjjA0QesvbXjoPUjcRSjJ2+m0iODogl1nNyqps1cbyTNf2TRcAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/194img9.gif]]></src><base64><![CDATA[R0lGODlhCQARAIAAAAAAAP///yH5BAEAAAEALAAAAAAJABEAAAIYTICmyNYHYFxH2WRdpnv2rXXeNYLmiaIFADs=]]></base64></img><description><![CDATA[<p>A triangle is a basic shape of planar geometry. It consists of three straight lines and three angles in between. Figure 1 shows how the sides and angles are usually labeled.</p>
<p></p>
<p><a name="27">&nbsp;</a> <img align="BOTTOM" src="http://192.168.2.104/v1-htm01/194img1.gif" alt="figure22" /> <br />
<strong>Figure:</strong> Triangle</p>
<p></p>
<p>A look into a book about geometry shows that many formulas for triangles exist:</p>
<p></p>
<p><img align="BOTTOM" width="303" height="16" src="http://192.168.2.104/v1-htm01/194img2.gif" alt="displaymath48" /></p>
<p></p>
<p></p>
<p><img align="BOTTOM" width="329" height="39" src="http://192.168.2.104/v1-htm01/194img3.gif" alt="displaymath50" /></p>
<p></p>
<p></p>
<p><img align="BOTTOM" width="322" height="16" src="http://192.168.2.104/v1-htm01/194img4.gif" alt="displaymath52" /></p>
<p></p>
<p></p>
<p><img align="BOTTOM" width="337" height="17" src="http://192.168.2.104/v1-htm01/194img5.gif" alt="displaymath54" /></p>
<p></p>
<p></p>
<p><img align="BOTTOM" width="364" height="38" src="http://192.168.2.104/v1-htm01/194img6.gif" alt="displaymath56" /></p>
<p></p>
<p>The values of <i>a</i>, <i>b</i>, <i>c</i>,  <img align="BOTTOM" width="10" height="8" src="http://192.168.2.104/v1-htm01/194img7.gif" alt="tex2html_wrap_inline64" /> ,  <img align="MIDDLE" width="10" height="25" src="http://192.168.2.104/v1-htm01/194img8.gif" alt="tex2html_wrap_inline66" /> , and  <img align="MIDDLE" width="9" height="17" src="http://192.168.2.104/v1-htm01/194img9.gif" alt="tex2html_wrap_inline68" />  form a set of six parameters that fully define a triangle. If a large enough subset of these parameters is given, the missing ones can be calculated by using the formulas above.</p>
<p></p>
<p>You are to write a program that calculates the missing parameters for a given subset of the six parameters of a triangle. For some sets of parameters, it is not possible to calculate the triangle because either too few is known about the triangle or the parameters would lead to an invalid triangle. The sides of a valid triangle are greater than 0 and the angles are greater than 0 and less than  <img align="BOTTOM" width="8" height="8" src="http://192.168.2.104/v1-htm01/194img10.gif" alt="tex2html_wrap_inline70" /> . Your program should detect this case and output: <tt>&quot;Invalid input.&quot;</tt> The same phrase should be output if more than the minimal set needed to compute the triangle is given but the parameters conflict with each other, e.g. all three angles are given but their sum is greater than  <img align="BOTTOM" width="8" height="8" src="http://192.168.2.104/v1-htm01/194img10.gif" alt="tex2html_wrap_inline70" /> .</p>
<p></p>
<p>Other sets of parameters can lead to more than one but still a finite number of valid solutions for the triangle. In such a case, your program should output: <tt>&quot;More than one solution.&quot;</tt></p>
<p>In all other cases, your program should compute the missing parameters and output all six parameters.</p>]]></description>
<input><![CDATA[<p>The first line of the input file contains a number indicating the number of parameter sets to follow. Each following line consists of six numbers, separated by a single blank character. The numbers are the values for the parameters <i>a</i>,  <img align="BOTTOM" width="10" height="8" src="http://192.168.2.104/v1-htm01/194img7.gif" alt="tex2html_wrap_inline64" /> , <i>b</i>,  <img align="MIDDLE" width="10" height="25" src="http://192.168.2.104/v1-htm01/194img8.gif" alt="tex2html_wrap_inline66" /> , <i>c</i>, and  <img align="MIDDLE" width="9" height="17" src="http://192.168.2.104/v1-htm01/194img9.gif" alt="tex2html_wrap_inline68" />  respectively. The parameters are labeled as shown in figure 1. A value of -1 indicates that the corresponding parameter is undefined and has to be calculated. All floating-point numbers include at least eight significant digits.</p>]]></input> 
<output><![CDATA[<p>Your program should output a line for each set of parameters found in the input file. If a unique solution for a valid triangle can be found for the given parameters, your program should output the six parameters <i>a</i>,  <img align="BOTTOM" width="10" height="8" src="http://192.168.2.104/v1-htm01/194img7.gif" alt="tex2html_wrap_inline64" /> , <i>b</i>,  <img align="MIDDLE" width="10" height="25" src="http://192.168.2.104/v1-htm01/194img8.gif" alt="tex2html_wrap_inline66" /> , <i>c</i>,  <img align="MIDDLE" width="9" height="17" src="http://192.168.2.104/v1-htm01/194img9.gif" alt="tex2html_wrap_inline68" /> , separated by a blank character. Otherwise the line should contain the phrase</p>
<p><tt>&quot;More than one solution.&quot;</tt> or</p>
<p><tt>&quot;Invalid input.&quot;</tt></p>
<p>as explained above.</p>
<p></p>
<p>The numbers in the output file should include at least six significant digits. Your calculations should be precise enough to get the six most significant digits correct (i.e. a relative error of 0.000001 is allowed).</p>]]></output>
<sample_input><![CDATA[4
47.9337906847 0.6543010109 78.4455517579 1.4813893731 66.5243757656 1.0059022695
62.72048064 2.26853639 -1.00000000 0.56794657 -1.00000000 -1.00000000
15.69326944 0.24714213 -1.00000000 1.80433105 66.04067877 -1.00000000
72.83685175 1.04409241 -1.00000000 -1.00000000 -1.00000000 -1.00000000
]]></sample_input>
<sample_output><![CDATA[47.933791 0.654301 78.445552 1.481389 66.524376 1.005902
62.720481 2.268536 44.026687 0.567947 24.587225 0.305110
Invalid input.
Invalid input.]]></sample_output>
<test_input><![CDATA[888
74.1264710932 0.8722244534 96.5584434174 1.6416024640 56.8548992144 0.6277657362
74.1264710932 22.4265376321 96.5584434174 1.6416024640 56.8548992144 0.6277657362
74.1264710932 0.8722244534 96.5584434174 58.7855631596 56.8548992144 0.6277657362
74.1264710932 0.8722244534 96.5584434174 1.6416024640 56.8548992144 81.4803493346
14.0742566962 1.2837057630 6.3094720163 -1.0000000000 14.4935854125 1.4134487169
61.1555373558 1.2837057630 6.3094720163 -1.0000000000 14.4935854125 1.4134487169
14.0742566962 35.8025789466 6.3094720163 -1.0000000000 14.4935854125 1.4134487169
14.0742566962 1.2837057630 35.4749206909 -1.0000000000 14.4935854125 1.4134487169
14.0742566962 1.2837057630 6.3094720163 -1.0000000000 35.3672047050 1.4134487169
14.0742566962 1.2837057630 6.3094720163 -1.0000000000 14.4935854125 88.6322115660
67.7065304923 0.8941581594 85.7465546582 1.4120368298 -1.0000000000 0.8353976643
67.7065304923 51.6882763162 85.7465546582 1.4120368298 -1.0000000000 0.8353976643
67.7065304923 0.8941581594 85.7465546582 77.5237082655 -1.0000000000 0.8353976643
67.7065304923 0.8941581594 85.7465546582 1.4120368298 -1.0000000000 71.0720490727
50.4689702615 0.5583845782 89.9571435912 -1.0000000000 -1.0000000000 0.6772546611
53.1123454846 0.5583845782 89.9571435912 -1.0000000000 -1.0000000000 0.6772546611
50.4689702615 28.6855728449 89.9571435912 -1.0000000000 -1.0000000000 0.6772546611
50.4689702615 0.5583845782 59.5015189909 -1.0000000000 -1.0000000000 0.6772546611
50.4689702615 0.5583845782 89.9571435912 -1.0000000000 -1.0000000000 67.8994973130
85.8685596809 -1.0000000000 87.5251891681 1.3072540221 50.4334972792 0.5899531031
80.0059677019 -1.0000000000 87.5251891681 1.3072540221 50.4334972792 0.5899531031
85.8685596809 -1.0000000000 38.4429478632 1.3072540221 50.4334972792 0.5899531031
85.8685596809 -1.0000000000 87.5251891681 19.1401740083 50.4334972792 0.5899531031
85.8685596809 -1.0000000000 87.5251891681 1.3072540221 61.5347938451 0.5899531031
85.8685596809 -1.0000000000 87.5251891681 1.3072540221 50.4334972792 72.6722925703
72.7732095796 -1.0000000000 75.2191238900 -1.0000000000 9.2101479760 0.1200870889
58.4527413365 -1.0000000000 75.2191238900 -1.0000000000 9.2101479760 0.1200870889
72.7732095796 -1.0000000000 83.8690802084 -1.0000000000 9.2101479760 0.1200870889
72.7732095796 -1.0000000000 75.2191238900 -1.0000000000 85.3429383128 0.1200870889
72.7732095796 -1.0000000000 75.2191238900 -1.0000000000 9.2101479760 99.0040523285
59.5465265975 -1.0000000000 99.2546516970 1.9436057250 -1.0000000000 0.6051382220
23.1626583867 -1.0000000000 99.2546516970 1.9436057250 -1.0000000000 0.6051382220
59.5465265975 -1.0000000000 39.0835805260 1.9436057250 -1.0000000000 0.6051382220
59.5465265975 -1.0000000000 99.2546516970 67.8740973854 -1.0000000000 0.6051382220
59.5465265975 -1.0000000000 99.2546516970 1.9436057250 -1.0000000000 18.7623963632
39.7215203846 -1.0000000000 64.4275655602 -1.0000000000 -1.0000000000 1.3679426356
56.5624996306 0.9415108143 -1.0000000000 1.0971189564 62.4464368701 1.1029628828
56.5624996306 37.4512673996 -1.0000000000 1.0971189564 62.4464368701 1.1029628828
56.5624996306 0.9415108143 -1.0000000000 25.3962483659 62.4464368701 1.1029628828
56.5624996306 0.9415108143 -1.0000000000 1.0971189564 62.4464368701 72.7231476563
44.0583578911 0.5630614329 -1.0000000000 -1.0000000000 63.6068919466 0.8798019472
53.5901736766 0.5630614329 -1.0000000000 -1.0000000000 63.6068919466 0.8798019472
44.0583578911 50.7194362565 -1.0000000000 -1.0000000000 63.6068919466 0.8798019472
44.0583578911 0.5630614329 -1.0000000000 -1.0000000000 54.7110829417 0.8798019472
44.0583578911 0.5630614329 -1.0000000000 -1.0000000000 63.6068919466 74.2475513493
43.7534003324 0.4412010035 -1.0000000000 0.6670476447 -1.0000000000 2.0333440054
43.7534003324 65.3086549628 -1.0000000000 0.6670476447 -1.0000000000 2.0333440054
43.7534003324 0.4412010035 -1.0000000000 56.8785178789 -1.0000000000 2.0333440054
43.7534003324 0.4412010035 -1.0000000000 0.6670476447 -1.0000000000 74.0235882214
10.8905165549 0.0835420637 -1.0000000000 -1.0000000000 -1.0000000000 2.6443473546
73.5537055341 -1.0000000000 -1.0000000000 1.4666126166 47.3910570824 0.6018342998
17.1647013060 -1.0000000000 -1.0000000000 1.4666126166 47.3910570824 0.6018342998
73.5537055341 -1.0000000000 -1.0000000000 17.3077073513 47.3910570824 0.6018342998
73.5537055341 -1.0000000000 -1.0000000000 1.4666126166 16.0045650407 0.6018342998
73.5537055341 -1.0000000000 -1.0000000000 1.4666126166 47.3910570824 85.2781954282
5.2623939430 -1.0000000000 -1.0000000000 -1.0000000000 22.7180687046 2.0294640772
37.2413279586 -1.0000000000 -1.0000000000 1.4632959164 -1.0000000000 1.2803657528
88.7891506748 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 0.3862144206
54.7022038223 0.6445009635 83.8869558942 1.1715096280 88.3253034193 -1.0000000000
40.1699317959 0.6445009635 83.8869558942 1.1715096280 88.3253034193 -1.0000000000
54.7022038223 34.1502186233 83.8869558942 1.1715096280 88.3253034193 -1.0000000000
54.7022038223 0.6445009635 0.2071127977 1.1715096280 88.3253034193 -1.0000000000
54.7022038223 0.6445009635 83.8869558942 35.0023200522 88.3253034193 -1.0000000000
54.7022038223 0.6445009635 83.8869558942 1.1715096280 16.2274338909 -1.0000000000
87.9235110872 2.4019524828 23.5348310835 -1.0000000000 69.0952444979 -1.0000000000
82.4912521655 2.4019524828 23.5348310835 -1.0000000000 69.0952444979 -1.0000000000
87.9235110872 46.2929935300 23.5348310835 -1.0000000000 69.0952444979 -1.0000000000
87.9235110872 2.4019524828 6.3822181510 -1.0000000000 69.0952444979 -1.0000000000
87.9235110872 2.4019524828 23.5348310835 -1.0000000000 3.6579514144 -1.0000000000
90.5058510610 1.3476763878 63.9334789296 0.7599582912 -1.0000000000 -1.0000000000
44.8258061513 1.3476763878 63.9334789296 0.7599582912 -1.0000000000 -1.0000000000
90.5058510610 37.2751125363 63.9334789296 0.7599582912 -1.0000000000 -1.0000000000
90.5058510610 1.3476763878 12.3428140640 0.7599582912 -1.0000000000 -1.0000000000
90.5058510610 1.3476763878 63.9334789296 70.2129103272 -1.0000000000 -1.0000000000
84.0729473351 1.7327594350 75.5063637249 -1.0000000000 -1.0000000000 -1.0000000000
28.2657551544 -1.0000000000 22.4363575379 0.3357070756 47.1006554006 -1.0000000000
27.0849031481 -1.0000000000 22.4363575379 0.3357070756 47.1006554006 -1.0000000000
28.2657551544 -1.0000000000 4.5258747444 0.3357070756 47.1006554006 -1.0000000000
28.2657551544 -1.0000000000 22.4363575379 80.7066290723 47.1006554006 -1.0000000000
28.2657551544 -1.0000000000 22.4363575379 0.3357070756 20.7283590296 -1.0000000000
14.1453615541 -1.0000000000 71.4392305072 -1.0000000000 77.9547903381 -1.0000000000
85.6322803642 -1.0000000000 61.3126104902 0.7056502726 -1.0000000000 -1.0000000000
15.4747906517 -1.0000000000 43.8546187360 -1.0000000000 -1.0000000000 -1.0000000000
87.4214268878 1.2249934418 -1.0000000000 1.7385492194 16.4574971814 -1.0000000000
96.3581251257 1.2249934418 -1.0000000000 1.7385492194 16.4574971814 -1.0000000000
87.4214268878 23.0154519134 -1.0000000000 1.7385492194 16.4574971814 -1.0000000000
87.4214268878 1.2249934418 -1.0000000000 30.6619545735 16.4574971814 -1.0000000000
87.4214268878 1.2249934418 -1.0000000000 1.7385492194 16.4169248037 -1.0000000000
54.3233387917 0.7667796321 -1.0000000000 -1.0000000000 38.3774097669 -1.0000000000
61.4100633268 0.8203612871 -1.0000000000 1.6895359994 -1.0000000000 -1.0000000000
63.4943942587 2.0382401076 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
75.5202364351 -1.0000000000 -1.0000000000 0.6741392134 76.6124653611 -1.0000000000
29.3376189106 -1.0000000000 -1.0000000000 -1.0000000000 32.0241584473 -1.0000000000
91.2506364383 -1.0000000000 -1.0000000000 0.7174599868 -1.0000000000 -1.0000000000
17.5915004303 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 2.0856640207 44.2965684231 0.7465058296 19.8632561029 0.3094228032
-1.0000000000 63.1100186287 44.2965684231 0.7465058296 19.8632561029 0.3094228032
-1.0000000000 2.0856640207 44.2965684231 59.3563826015 19.8632561029 0.3094228032
-1.0000000000 2.0856640207 44.2965684231 0.7465058296 19.8632561029 31.8441208494
-1.0000000000 0.9749671617 41.5637473391 -1.0000000000 30.9066865311 0.8127385509
-1.0000000000 83.6853282694 41.5637473391 -1.0000000000 30.9066865311 0.8127385509
-1.0000000000 0.9749671617 24.8894479405 -1.0000000000 30.9066865311 0.8127385509
-1.0000000000 0.9749671617 41.5637473391 -1.0000000000 52.1000078637 0.8127385509
-1.0000000000 0.9749671617 41.5637473391 -1.0000000000 30.9066865311 53.8679543290
-1.0000000000 0.9448389472 64.3961340195 1.3036219267 -1.0000000000 0.8931317797
-1.0000000000 99.8919602666 64.3961340195 1.3036219267 -1.0000000000 0.8931317797
-1.0000000000 0.9448389472 64.3961340195 7.2310735364 -1.0000000000 0.8931317797
-1.0000000000 0.9448389472 64.3961340195 1.3036219267 -1.0000000000 19.8557264591
-1.0000000000 1.8976462841 53.1876557069 -1.0000000000 -1.0000000000 0.7016505698
-1.0000000000 -1.0000000000 56.2469797636 0.6010748764 93.7700375164 1.9106577274
-1.0000000000 -1.0000000000 4.2822540156 0.6010748764 93.7700375164 1.9106577274
-1.0000000000 -1.0000000000 56.2469797636 40.0428808389 93.7700375164 1.9106577274
-1.0000000000 -1.0000000000 56.2469797636 0.6010748764 81.3461008637 1.9106577274
-1.0000000000 -1.0000000000 56.2469797636 0.6010748764 93.7700375164 95.3312138385
-1.0000000000 -1.0000000000 64.0399504063 -1.0000000000 66.6519427999 0.8011508705
-1.0000000000 -1.0000000000 31.3170776374 0.9880174654 -1.0000000000 1.2067284277
-1.0000000000 -1.0000000000 53.2333894169 -1.0000000000 -1.0000000000 0.2106556743
-1.0000000000 1.8877091912 -1.0000000000 0.4957098096 65.8763224304 0.7581736528
-1.0000000000 91.7783128952 -1.0000000000 0.4957098096 65.8763224304 0.7581736528
-1.0000000000 1.8877091912 -1.0000000000 26.5964466130 65.8763224304 0.7581736528
-1.0000000000 1.8877091912 -1.0000000000 0.4957098096 65.8763224304 32.3903785119
-1.0000000000 0.5243093256 -1.0000000000 -1.0000000000 55.5478326298 0.5449374724
-1.0000000000 0.3653717501 -1.0000000000 0.8038835086 -1.0000000000 1.9723373949
-1.0000000000 1.7823107107 -1.0000000000 -1.0000000000 -1.0000000000 1.1083866088
-1.0000000000 -1.0000000000 -1.0000000000 1.7321405303 31.5356554363 0.3290686282
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 90.5649244528 1.2574547954
-1.0000000000 -1.0000000000 -1.0000000000 0.1196223874 -1.0000000000 2.2911888431
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 1.1661713480
-1.0000000000 1.3058637622 94.5690163229 1.3386260043 46.3415495059 -1.0000000000
-1.0000000000 15.2397181233 94.5690163229 1.3386260043 46.3415495059 -1.0000000000
-1.0000000000 1.3058637622 84.4389577462 1.3386260043 46.3415495059 -1.0000000000
-1.0000000000 1.3058637622 94.5690163229 77.9378765810 46.3415495059 -1.0000000000
-1.0000000000 1.3058637622 94.5690163229 1.3386260043 79.5156523197 -1.0000000000
-1.0000000000 1.3899717399 66.2570382981 -1.0000000000 40.0484169582 -1.0000000000
-1.0000000000 0.4409432418 51.4134685338 0.4263404227 -1.0000000000 -1.0000000000
-1.0000000000 1.2353497913 34.3800878143 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 83.5823308379 1.9154412513 43.1083377496 -1.0000000000
-1.0000000000 -1.0000000000 59.6632817138 -1.0000000000 52.4440956524 -1.0000000000
-1.0000000000 -1.0000000000 69.3948468112 2.3816503004 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 59.1956446754 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 0.1914997154 -1.0000000000 1.3889015204 52.0465837539 -1.0000000000
-1.0000000000 0.9279174957 -1.0000000000 -1.0000000000 88.2388905023 -1.0000000000
-1.0000000000 2.4376997673 -1.0000000000 0.1389784073 -1.0000000000 -1.0000000000
-1.0000000000 0.2658956370 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 0.1227348359 38.7163793463 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 32.4267322066 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 1.3407974294 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
47.3901590463 0.8388116964 37.9898820696 0.6388841096 63.4334348237 1.6638968476
47.3901590463 80.9761882522 37.9898820696 0.6388841096 63.4334348237 1.6638968476
47.3901590463 0.8388116964 37.9898820696 95.5033620939 63.4334348237 1.6638968476
47.3901590463 0.8388116964 37.9898820696 0.6388841096 63.4334348237 66.8313179076
19.4580584614 0.1995060317 97.0858742695 -1.0000000000 98.0585246956 1.5208023697
30.1265383537 0.1995060317 97.0858742695 -1.0000000000 98.0585246956 1.5208023697
19.4580584614 41.6489353990 97.0858742695 -1.0000000000 98.0585246956 1.5208023697
19.4580584614 0.1995060317 11.9609268003 -1.0000000000 98.0585246956 1.5208023697
19.4580584614 0.1995060317 97.0858742695 -1.0000000000 40.8336357515 1.5208023697
19.4580584614 0.1995060317 97.0858742695 -1.0000000000 98.0585246956 16.3561070314
19.7124374607 0.3563049619 30.5735930246 2.5699634547 -1.0000000000 0.2153242371
19.7124374607 79.4010022140 30.5735930246 2.5699634547 -1.0000000000 0.2153242371
19.7124374607 0.3563049619 30.5735930246 7.7963773493 -1.0000000000 0.2153242371
19.7124374607 0.3563049619 30.5735930246 2.5699634547 -1.0000000000 16.4171243051
46.0908397689 0.8188008992 57.0023001598 -1.0000000000 -1.0000000000 1.1955694312
32.8417809551 0.8188008992 57.0023001598 -1.0000000000 -1.0000000000 1.1955694312
46.0908397689 62.9242496013 57.0023001598 -1.0000000000 -1.0000000000 1.1955694312
46.0908397689 0.8188008992 72.8992757891 -1.0000000000 -1.0000000000 1.1955694312
46.0908397689 0.8188008992 57.0023001598 -1.0000000000 -1.0000000000 97.5939909203
66.3541178378 -1.0000000000 83.1878526285 1.9233711425 32.2444941317 0.3723092050
62.6082723337 -1.0000000000 83.1878526285 1.9233711425 32.2444941317 0.3723092050
66.3541178378 -1.0000000000 90.8128814978 1.9233711425 32.2444941317 0.3723092050
66.3541178378 -1.0000000000 83.1878526285 58.1516438797 32.2444941317 0.3723092050
66.3541178378 -1.0000000000 83.1878526285 1.9233711425 2.2196193810 0.3723092050
66.3541178378 -1.0000000000 83.1878526285 1.9233711425 32.2444941317 86.3622995590
79.5092559784 -1.0000000000 55.5673585337 -1.0000000000 26.4437341039 0.1691148571
96.5174953212 -1.0000000000 55.5673585337 -1.0000000000 26.4437341039 0.1691148571
79.5092559784 -1.0000000000 50.0954265741 -1.0000000000 26.4437341039 0.1691148571
79.5092559784 -1.0000000000 55.5673585337 -1.0000000000 49.4998099003 0.1691148571
79.5092559784 -1.0000000000 55.5673585337 -1.0000000000 26.4437341039 10.5650137907
29.5450695196 -1.0000000000 79.5196656336 2.1800211475 -1.0000000000 0.6519476941
68.1314402203 -1.0000000000 79.5196656336 2.1800211475 -1.0000000000 0.6519476941
29.5450695196 -1.0000000000 76.2423906895 2.1800211475 -1.0000000000 0.6519476941
29.5450695196 -1.0000000000 79.5196656336 47.6496674316 -1.0000000000 0.6519476941
29.5450695196 -1.0000000000 79.5196656336 2.1800211475 -1.0000000000 8.0314401914
45.3637589830 -1.0000000000 11.8835144547 -1.0000000000 -1.0000000000 1.3002221696
51.6228430001 0.4208385081 -1.0000000000 2.4867273392 29.3032872406 0.2340268063
51.6228430001 96.2453198033 -1.0000000000 2.4867273392 29.3032872406 0.2340268063
51.6228430001 0.4208385081 -1.0000000000 55.1433866116 29.3032872406 0.2340268063
51.6228430001 0.4208385081 -1.0000000000 2.4867273392 29.3032872406 75.6570936065
48.9090425466 0.4933317839 -1.0000000000 -1.0000000000 93.9703303814 1.9986219224
53.2769168753 0.4933317839 -1.0000000000 -1.0000000000 93.9703303814 1.9986219224
48.9090425466 77.9634715394 -1.0000000000 -1.0000000000 93.9703303814 1.9986219224
48.9090425466 0.4933317839 -1.0000000000 -1.0000000000 66.8524597547 1.9986219224
48.9090425466 0.4933317839 -1.0000000000 -1.0000000000 93.9703303814 71.0468435240
85.1695890436 1.0729854042 -1.0000000000 1.0270143004 -1.0000000000 1.0415929489
85.1695890436 15.5488055115 -1.0000000000 1.0270143004 -1.0000000000 1.0415929489
85.1695890436 1.0729854042 -1.0000000000 88.9848985945 -1.0000000000 1.0415929489
85.1695890436 1.0729854042 -1.0000000000 1.0270143004 -1.0000000000 97.9766462925
30.6847657320 0.3820499593 -1.0000000000 -1.0000000000 -1.0000000000 2.4300239601
45.3056079364 -1.0000000000 -1.0000000000 1.8282500959 33.4025763328 0.5406292338
97.7993029890 -1.0000000000 -1.0000000000 1.8282500959 33.4025763328 0.5406292338
45.3056079364 -1.0000000000 -1.0000000000 9.4147852603 33.4025763328 0.5406292338
45.3056079364 -1.0000000000 -1.0000000000 1.8282500959 61.3165427741 0.5406292338
45.3056079364 -1.0000000000 -1.0000000000 1.8282500959 33.4025763328 15.8167424148
72.5734072721 -1.0000000000 -1.0000000000 -1.0000000000 64.5383481129 1.0944008951
47.5165434151 -1.0000000000 -1.0000000000 0.6312910643 -1.0000000000 1.7499904130
61.7592098097 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 1.0529853305
69.7466774364 0.9050020404 5.7873600858 0.0653015933 73.1727795472 -1.0000000000
39.5617846228 0.9050020404 5.7873600858 0.0653015933 73.1727795472 -1.0000000000
69.7466774364 77.4177276257 5.7873600858 0.0653015933 73.1727795472 -1.0000000000
69.7466774364 0.9050020404 61.6517693258 0.0653015933 73.1727795472 -1.0000000000
69.7466774364 0.9050020404 5.7873600858 89.7531894737 73.1727795472 -1.0000000000
69.7466774364 0.9050020404 5.7873600858 0.0653015933 16.0924770129 -1.0000000000
84.2287944947 1.3031675546 77.0553807024 -1.0000000000 60.0276352941 -1.0000000000
34.4455503758 1.3031675546 77.0553807024 -1.0000000000 60.0276352941 -1.0000000000
84.2287944947 53.5438548741 77.0553807024 -1.0000000000 60.0276352941 -1.0000000000
84.2287944947 1.3031675546 84.0279808023 -1.0000000000 60.0276352941 -1.0000000000
84.2287944947 1.3031675546 77.0553807024 -1.0000000000 96.6063881290 -1.0000000000
68.2945947035 0.7063363366 22.4118224893 0.2146394161 -1.0000000000 -1.0000000000
58.0430896523 0.7063363366 22.4118224893 0.2146394161 -1.0000000000 -1.0000000000
68.2945947035 97.5506433113 22.4118224893 0.2146394161 -1.0000000000 -1.0000000000
68.2945947035 0.7063363366 38.8979149748 0.2146394161 -1.0000000000 -1.0000000000
68.2945947035 0.7063363366 22.4118224893 50.1592331429 -1.0000000000 -1.0000000000
9.3844309530 0.2754800424 33.2242867478 -1.0000000000 -1.0000000000 -1.0000000000
77.5994305300 -1.0000000000 71.4200716600 1.1370088264 44.5719889601 -1.0000000000
23.9011142957 -1.0000000000 71.4200716600 1.1370088264 44.5719889601 -1.0000000000
77.5994305300 -1.0000000000 9.0865107109 1.1370088264 44.5719889601 -1.0000000000
77.5994305300 -1.0000000000 71.4200716600 70.7259626370 44.5719889601 -1.0000000000
77.5994305300 -1.0000000000 71.4200716600 1.1370088264 35.1746007497 -1.0000000000
35.3940406334 -1.0000000000 43.6923510192 -1.0000000000 22.2890270049 -1.0000000000
74.9635127688 -1.0000000000 28.0264837813 0.2340629025 -1.0000000000 -1.0000000000
30.8729420027 -1.0000000000 90.6188124827 -1.0000000000 -1.0000000000 -1.0000000000
52.4916016842 0.8837349032 -1.0000000000 0.7393311830 67.8036688952 -1.0000000000
30.5873887097 0.8837349032 -1.0000000000 0.7393311830 67.8036688952 -1.0000000000
52.4916016842 37.7072334695 -1.0000000000 0.7393311830 67.8036688952 -1.0000000000
52.4916016842 0.8837349032 -1.0000000000 11.8118044796 67.8036688952 -1.0000000000
52.4916016842 0.8837349032 -1.0000000000 0.7393311830 29.9922971476 -1.0000000000
97.4212088612 2.1798760908 -1.0000000000 -1.0000000000 74.2023686433 -1.0000000000
89.8281330119 1.4083702944 -1.0000000000 0.5638129434 -1.0000000000 -1.0000000000
88.5801975646 1.2322848040 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
79.7389006138 -1.0000000000 -1.0000000000 0.3911869735 91.0766922040 -1.0000000000
82.3163485172 -1.0000000000 -1.0000000000 -1.0000000000 28.7137039496 -1.0000000000
67.2172075880 -1.0000000000 -1.0000000000 0.9771036343 -1.0000000000 -1.0000000000
12.9456167957 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 1.5064923484 42.3936458934 0.4776223570 84.4603682032 1.1574779482
-1.0000000000 90.3337560806 42.3936458934 0.4776223570 84.4603682032 1.1574779482
-1.0000000000 1.5064923484 42.3936458934 2.5998979661 84.4603682032 1.1574779482
-1.0000000000 1.5064923484 42.3936458934 0.4776223570 84.4603682032 82.9097924691
-1.0000000000 0.3641075458 25.5990865046 -1.0000000000 46.7741448838 2.3979252517
-1.0000000000 66.1423233684 25.5990865046 -1.0000000000 46.7741448838 2.3979252517
-1.0000000000 0.3641075458 17.5076188164 -1.0000000000 46.7741448838 2.3979252517
-1.0000000000 0.3641075458 25.5990865046 -1.0000000000 20.8256050069 2.3979252517
-1.0000000000 0.3641075458 25.5990865046 -1.0000000000 46.7741448838 14.9962289053
-1.0000000000 0.7153623927 83.3779489378 1.1340652763 -1.0000000000 1.2921649845
-1.0000000000 2.6854212294 83.3779489378 1.1340652763 -1.0000000000 1.2921649845
-1.0000000000 0.7153623927 83.3779489378 63.3810112016 -1.0000000000 1.2921649845
-1.0000000000 0.7153623927 83.3779489378 1.1340652763 -1.0000000000 98.1023383669
-1.0000000000 0.2677182471 18.8354502257 -1.0000000000 -1.0000000000 2.5993406085
-1.0000000000 -1.0000000000 85.5540234437 0.9734277155 93.9349190564 1.1380415631
-1.0000000000 -1.0000000000 81.3294142700 0.9734277155 93.9349190564 1.1380415631
-1.0000000000 -1.0000000000 85.5540234437 81.8497225843 93.9349190564 1.1380415631
-1.0000000000 -1.0000000000 85.5540234437 0.9734277155 72.0590799039 1.1380415631
-1.0000000000 -1.0000000000 85.5540234437 0.9734277155 93.9349190564 82.7155028102
-1.0000000000 -1.0000000000 35.7092291157 -1.0000000000 71.8378135852 1.9400856938
-1.0000000000 -1.0000000000 1.9219214591 0.0197909415 -1.0000000000 1.4427084698
-1.0000000000 -1.0000000000 72.7177999551 -1.0000000000 -1.0000000000 1.1318819341
-1.0000000000 1.2630235539 -1.0000000000 0.4863213797 80.4577736186 1.3922477200
-1.0000000000 99.0656756508 -1.0000000000 0.4863213797 80.4577736186 1.3922477200
-1.0000000000 1.2630235539 -1.0000000000 75.4967807620 80.4577736186 1.3922477200
-1.0000000000 1.2630235539 -1.0000000000 0.4863213797 80.4577736186 25.9485915685
-1.0000000000 0.3742041454 -1.0000000000 -1.0000000000 92.9797067541 1.6044816660
-1.0000000000 0.7349156794 -1.0000000000 1.7405399691 -1.0000000000 0.6661370052
-1.0000000000 2.0386833538 -1.0000000000 -1.0000000000 -1.0000000000 0.9115082433
-1.0000000000 -1.0000000000 -1.0000000000 0.9393493957 85.6470241004 1.0754424985
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 77.8631002254 1.2363373399
-1.0000000000 -1.0000000000 -1.0000000000 0.6342342422 -1.0000000000 1.0700226131
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 0.9690489905
-1.0000000000 1.8006681076 66.7832109497 0.7708155730 51.7345003043 -1.0000000000
-1.0000000000 78.7853824906 66.7832109497 0.7708155730 51.7345003043 -1.0000000000
-1.0000000000 1.8006681076 56.8489152879 0.7708155730 51.7345003043 -1.0000000000
-1.0000000000 1.8006681076 66.7832109497 92.0201739688 51.7345003043 -1.0000000000
-1.0000000000 1.8006681076 66.7832109497 0.7708155730 31.6489226298 -1.0000000000
-1.0000000000 1.1410231852 86.8272117538 -1.0000000000 61.8653398427 -1.0000000000
-1.0000000000 1.1810861686 74.5109522485 1.2045616411 -1.0000000000 -1.0000000000
-1.0000000000 1.5518530559 15.6090217058 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 11.7539184103 2.1620807961 10.2425103475 -1.0000000000
-1.0000000000 -1.0000000000 83.5460777322 -1.0000000000 89.8950494566 -1.0000000000
-1.0000000000 -1.0000000000 22.9134609305 1.3801928046 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 55.6936093426 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 1.1383133747 -1.0000000000 0.7116084853 94.9097372681 -1.0000000000
-1.0000000000 0.9423772314 -1.0000000000 -1.0000000000 71.7741207378 -1.0000000000
-1.0000000000 0.6516073901 -1.0000000000 1.3807658851 -1.0000000000 -1.0000000000
-1.0000000000 0.6637015136 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 1.0612879742 85.2311820961 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 51.9453843504 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 1.1804014718 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
26.8760001461 0.3504758256 69.5659859170 1.0945355663 77.6585825302 1.6965812618
26.8760001461 81.1653198388 69.5659859170 1.0945355663 77.6585825302 1.6965812618
26.8760001461 0.3504758256 69.5659859170 12.5667830595 77.6585825302 1.6965812618
26.8760001461 0.3504758256 69.5659859170 1.0945355663 77.6585825302 11.4113798782
69.2142089393 0.9164885547 81.8230671573 -1.0000000000 73.7872572131 1.0082404340
26.8454294794 0.9164885547 81.8230671573 -1.0000000000 73.7872572131 1.0082404340
69.2142089393 77.3241654403 81.8230671573 -1.0000000000 73.7872572131 1.0082404340
69.2142089393 0.9164885547 83.4306266402 -1.0000000000 73.7872572131 1.0082404340
69.2142089393 0.9164885547 81.8230671573 -1.0000000000 75.2046436410 1.0082404340
69.2142089393 0.9164885547 81.8230671573 -1.0000000000 73.7872572131 81.9237665963
22.8208521982 0.4646805356 4.9176733752 0.0967199765 -1.0000000000 2.5801921415
22.8208521982 62.1703382890 4.9176733752 0.0967199765 -1.0000000000 2.5801921415
22.8208521982 0.4646805356 4.9176733752 0.0662844106 -1.0000000000 2.5801921415
22.8208521982 0.4646805356 4.9176733752 0.0967199765 -1.0000000000 73.8670879785
89.0269679784 2.3739695353 77.3280398856 -1.0000000000 -1.0000000000 0.1201497406
96.7263069549 2.3739695353 77.3280398856 -1.0000000000 -1.0000000000 0.1201497406
89.0269679784 29.7138006370 77.3280398856 -1.0000000000 -1.0000000000 0.1201497406
89.0269679784 2.3739695353 48.2615247546 -1.0000000000 -1.0000000000 0.1201497406
89.0269679784 2.3739695353 77.3280398856 -1.0000000000 -1.0000000000 13.6447263017
46.4730964176 -1.0000000000 81.7683078219 0.9535546456 99.3536695305 1.7061220998
1.1781058341 -1.0000000000 81.7683078219 0.9535546456 99.3536695305 1.7061220998
46.4730964176 -1.0000000000 26.5689585327 0.9535546456 99.3536695305 1.7061220998
46.4730964176 -1.0000000000 81.7683078219 59.5731624655 99.3536695305 1.7061220998
46.4730964176 -1.0000000000 81.7683078219 0.9535546456 77.2431629996 1.7061220998
46.4730964176 -1.0000000000 81.7683078219 0.9535546456 99.3536695305 92.0426574681
76.5142995535 -1.0000000000 46.0474327379 -1.0000000000 96.6622162222 1.7662866852
30.0078534192 -1.0000000000 46.0474327379 -1.0000000000 96.6622162222 1.7662866852
76.5142995535 -1.0000000000 40.8314261469 -1.0000000000 96.6622162222 1.7662866852
76.5142995535 -1.0000000000 46.0474327379 -1.0000000000 31.3369850342 1.7662866852
76.5142995535 -1.0000000000 46.0474327379 -1.0000000000 96.6622162222 98.5536100444
34.9973372654 -1.0000000000 28.0668003091 0.9235378594 -1.0000000000 0.5445090660
14.9306434018 -1.0000000000 28.0668003091 0.9235378594 -1.0000000000 0.5445090660
34.9973372654 -1.0000000000 54.7962269473 0.9235378594 -1.0000000000 0.5445090660
34.9973372654 -1.0000000000 28.0668003091 60.0652565030 -1.0000000000 0.5445090660
34.9973372654 -1.0000000000 28.0668003091 0.9235378594 -1.0000000000 54.3894347843
50.1583336167 -1.0000000000 45.8269734594 -1.0000000000 -1.0000000000 0.2028339982
69.2340385660 1.7535418270 -1.0000000000 1.1185874531 18.7431880597 0.2694633735
69.2340385660 90.2177646954 -1.0000000000 1.1185874531 18.7431880597 0.2694633735
69.2340385660 1.7535418270 -1.0000000000 3.8629402013 18.7431880597 0.2694633735
69.2340385660 1.7535418270 -1.0000000000 1.1185874531 18.7431880597 36.3479202250
66.3364369966 0.7387458919 -1.0000000000 -1.0000000000 54.4858342308 0.5860438483
15.4658359043 0.7387458919 -1.0000000000 -1.0000000000 54.4858342308 0.5860438483
66.3364369966 58.5320685051 -1.0000000000 -1.0000000000 54.4858342308 0.5860438483
66.3364369966 0.7387458919 -1.0000000000 -1.0000000000 37.9987011150 0.5860438483
66.3364369966 0.7387458919 -1.0000000000 -1.0000000000 54.4858342308 94.0532916994
38.2263083580 0.8397149923 -1.0000000000 1.3512106120 -1.0000000000 0.9506670494
38.2263083580 6.8021024352 -1.0000000000 1.3512106120 -1.0000000000 0.9506670494
38.2263083580 0.8397149923 -1.0000000000 67.9256043439 -1.0000000000 0.9506670494
38.2263083580 0.8397149923 -1.0000000000 1.3512106120 -1.0000000000 82.8576250695
50.8022547939 0.8805177450 -1.0000000000 -1.0000000000 -1.0000000000 1.1986577030
53.9615956817 -1.0000000000 -1.0000000000 1.4967808616 29.8655951785 0.5222087820
57.2183760873 -1.0000000000 -1.0000000000 1.4967808616 29.8655951785 0.5222087820
53.9615956817 -1.0000000000 -1.0000000000 53.3336484066 29.8655951785 0.5222087820
53.9615956817 -1.0000000000 -1.0000000000 1.4967808616 0.0003651007 0.5222087820
53.9615956817 -1.0000000000 -1.0000000000 1.4967808616 29.8655951785 19.4054540586
90.0500619140 -1.0000000000 -1.0000000000 -1.0000000000 47.0624768542 0.5311801732
34.4667072181 -1.0000000000 -1.0000000000 2.2249262859 -1.0000000000 0.5361986640
80.3935050856 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 1.0224791348
42.1678246636 0.2832438590 71.2939252587 2.6494582951 31.2895265027 -1.0000000000
47.7639705984 0.2832438590 71.2939252587 2.6494582951 31.2895265027 -1.0000000000
42.1678246636 21.9308183865 71.2939252587 2.6494582951 31.2895265027 -1.0000000000
42.1678246636 0.2832438590 18.2588914376 2.6494582951 31.2895265027 -1.0000000000
42.1678246636 0.2832438590 71.2939252587 18.7274704732 31.2895265027 -1.0000000000
42.1678246636 0.2832438590 71.2939252587 2.6494582951 91.8466704633 -1.0000000000
90.4101669139 1.6415483175 32.8442615910 -1.0000000000 81.9434592171 -1.0000000000
12.3416001972 1.6415483175 32.8442615910 -1.0000000000 81.9434592171 -1.0000000000
90.4101669139 49.7161568593 32.8442615910 -1.0000000000 81.9434592171 -1.0000000000
90.4101669139 1.6415483175 56.7341821963 -1.0000000000 81.9434592171 -1.0000000000
90.4101669139 1.6415483175 32.8442615910 -1.0000000000 50.5968665384 -1.0000000000
6.6743381347 0.2858632235 23.3024725947 1.3945676904 -1.0000000000 -1.0000000000
97.5078521083 0.2858632235 23.3024725947 1.3945676904 -1.0000000000 -1.0000000000
6.6743381347 35.7709124188 23.3024725947 1.3945676904 -1.0000000000 -1.0000000000
6.6743381347 0.2858632235 43.3215827494 1.3945676904 -1.0000000000 -1.0000000000
6.6743381347 0.2858632235 23.3024725947 24.1934578104 -1.0000000000 -1.0000000000
74.4721865605 1.8271482120 49.0185112023 -1.0000000000 -1.0000000000 -1.0000000000
20.2647185403 -1.0000000000 29.3261556789 0.9619358759 35.7498252436 -1.0000000000
22.1394206462 -1.0000000000 29.3261556789 0.9619358759 35.7498252436 -1.0000000000
20.2647185403 -1.0000000000 13.6368838075 0.9619358759 35.7498252436 -1.0000000000
20.2647185403 -1.0000000000 29.3261556789 22.8475537286 35.7498252436 -1.0000000000
20.2647185403 -1.0000000000 29.3261556789 0.9619358759 69.7383235218 -1.0000000000
59.1743548320 -1.0000000000 69.9563742531 -1.0000000000 64.7333988019 -1.0000000000
5.7262873019 -1.0000000000 75.1857398054 0.6055278837 -1.0000000000 -1.0000000000
63.0872835639 -1.0000000000 95.9205714563 -1.0000000000 -1.0000000000 -1.0000000000
19.9262460382 0.1981721825 -1.0000000000 1.0095768674 94.6142772647 -1.0000000000
56.7001620728 0.1981721825 -1.0000000000 1.0095768674 94.6142772647 -1.0000000000
19.9262460382 71.0344740602 -1.0000000000 1.0095768674 94.6142772647 -1.0000000000
19.9262460382 0.1981721825 -1.0000000000 89.6014408492 94.6142772647 -1.0000000000
19.9262460382 0.1981721825 -1.0000000000 1.0095768674 25.8341799890 -1.0000000000
33.1612909447 0.9477862096 -1.0000000000 -1.0000000000 34.1140627536 -1.0000000000
99.6802702048 2.7054390926 -1.0000000000 0.2809480073 -1.0000000000 -1.0000000000
52.8069816581 0.7518269874 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
61.6082857354 -1.0000000000 -1.0000000000 0.7884116973 74.9338949964 -1.0000000000
30.5915019606 -1.0000000000 -1.0000000000 -1.0000000000 87.5443872264 -1.0000000000
69.7677312682 -1.0000000000 -1.0000000000 1.4136125872 -1.0000000000 -1.0000000000
23.2422030324 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 0.7063610009 99.8610039157 1.4842120002 81.5933309672 0.9510196524
-1.0000000000 37.8908027650 99.8610039157 1.4842120002 81.5933309672 0.9510196524
-1.0000000000 0.7063610009 99.8610039157 62.0050083829 81.5933309672 0.9510196524
-1.0000000000 0.7063610009 99.8610039157 1.4842120002 81.5933309672 15.3590467341
-1.0000000000 0.8512131191 80.3997393669 -1.0000000000 84.5212128923 1.2002626758
-1.0000000000 21.2742136843 80.3997393669 -1.0000000000 84.5212128923 1.2002626758
-1.0000000000 0.8512131191 12.8635424303 -1.0000000000 84.5212128923 1.2002626758
-1.0000000000 0.8512131191 80.3997393669 -1.0000000000 45.3335371179 1.2002626758
-1.0000000000 0.8512131191 80.3997393669 -1.0000000000 84.5212128923 88.3022487982
-1.0000000000 0.5208819925 77.9170075348 1.0533367983 -1.0000000000 1.5673738629
-1.0000000000 11.4150512827 77.9170075348 1.0533367983 -1.0000000000 1.5673738629
-1.0000000000 0.5208819925 77.9170075348 37.0677589770 -1.0000000000 1.5673738629
-1.0000000000 0.5208819925 77.9170075348 1.0533367983 -1.0000000000 96.6047684602
-1.0000000000 1.0457433775 89.5736615266 -1.0000000000 -1.0000000000 0.5758033134
-1.0000000000 -1.0000000000 50.6495346476 0.6296222159 55.3862104521 0.6995937586
-1.0000000000 -1.0000000000 12.7093700772 0.6296222159 55.3862104521 0.6995937586
-1.0000000000 -1.0000000000 50.6495346476 47.7761374872 55.3862104521 0.6995937586
-1.0000000000 -1.0000000000 50.6495346476 0.6296222159 16.6403062851 0.6995937586
-1.0000000000 -1.0000000000 50.6495346476 0.6296222159 55.3862104521 84.7741918421
-1.0000000000 -1.0000000000 24.3694406480 -1.0000000000 14.8202092782 0.6513883906
-1.0000000000 -1.0000000000 54.3040268257 1.9105270071 -1.0000000000 1.0795296438
-1.0000000000 -1.0000000000 44.8576062389 -1.0000000000 -1.0000000000 0.9061040156
-1.0000000000 2.0662168973 -1.0000000000 0.3946998363 61.3637433135 0.6806759200
-1.0000000000 44.3623323789 -1.0000000000 0.3946998363 61.3637433135 0.6806759200
-1.0000000000 2.0662168973 -1.0000000000 81.7991838879 61.3637433135 0.6806759200
-1.0000000000 2.0662168973 -1.0000000000 0.3946998363 61.3637433135 91.9929102579
-1.0000000000 0.6216417971 -1.0000000000 -1.0000000000 80.1629836495 1.9846731441
-1.0000000000 0.3400313237 -1.0000000000 0.1822822190 -1.0000000000 2.6192791109
-1.0000000000 1.7653804886 -1.0000000000 -1.0000000000 -1.0000000000 0.5358059013
-1.0000000000 -1.0000000000 -1.0000000000 1.9085905417 36.3431469054 0.3691006199
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 64.9746423710 0.7727530050
-1.0000000000 -1.0000000000 -1.0000000000 0.3155764336 -1.0000000000 2.6208652710
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 0.9003690840
-1.0000000000 0.5781518793 86.1046441531 1.9063912831 55.6984426430 -1.0000000000
-1.0000000000 50.3167789524 86.1046441531 1.9063912831 55.6984426430 -1.0000000000
-1.0000000000 0.5781518793 51.7137537346 1.9063912831 55.6984426430 -1.0000000000
-1.0000000000 0.5781518793 86.1046441531 19.8173128325 55.6984426430 -1.0000000000
-1.0000000000 0.5781518793 86.1046441531 1.9063912831 13.4172763687 -1.0000000000
-1.0000000000 0.7390173037 90.0640729340 -1.0000000000 32.8596406212 -1.0000000000
-1.0000000000 0.0424783724 90.5021408180 2.8871498271 -1.0000000000 -1.0000000000
-1.0000000000 1.0718526536 63.8741963501 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 65.7366549146 0.7931767808 81.9982244201 -1.0000000000
-1.0000000000 -1.0000000000 38.9826787914 -1.0000000000 72.6249952606 -1.0000000000
-1.0000000000 -1.0000000000 65.4196674730 1.7477127832 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 71.5398275876 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 1.2247223575 -1.0000000000 1.6314699182 24.5752855589 -1.0000000000
-1.0000000000 0.7607515533 -1.0000000000 -1.0000000000 95.6367495045 -1.0000000000
-1.0000000000 0.5833525703 -1.0000000000 1.8778229646 -1.0000000000 -1.0000000000
-1.0000000000 0.5620110288 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 1.1809263660 49.4701308431 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 98.2087233185 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 0.2984286972 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
86.8388281042 1.7461479118 22.0604780441 0.2528286788 80.2295644251 1.1426160631
86.8388281042 50.4079988116 22.0604780441 0.2528286788 80.2295644251 1.1426160631
86.8388281042 1.7461479118 22.0604780441 92.6818628850 80.2295644251 1.1426160631
86.8388281042 1.7461479118 22.0604780441 0.2528286788 80.2295644251 47.4657237215
55.1020097083 0.5671513988 24.8838637620 -1.0000000000 74.4436672570 2.3293840576
11.4714579489 0.5671513988 24.8838637620 -1.0000000000 74.4436672570 2.3293840576
55.1020097083 89.4355971942 24.8838637620 -1.0000000000 74.4436672570 2.3293840576
55.1020097083 0.5671513988 5.1299379119 -1.0000000000 74.4436672570 2.3293840576
55.1020097083 0.5671513988 24.8838637620 -1.0000000000 35.7221950349 2.3293840576
55.1020097083 0.5671513988 24.8838637620 -1.0000000000 74.4436672570 2.5010275700
53.1110111905 2.5792046184 26.5980161736 0.2703105918 -1.0000000000 0.2920774434
53.1110111905 32.9691684194 26.5980161736 0.2703105918 -1.0000000000 0.2920774434
53.1110111905 2.5792046184 26.5980161736 54.3548289162 -1.0000000000 0.2920774434
53.1110111905 2.5792046184 26.5980161736 0.2703105918 -1.0000000000 90.1753415736
21.1599616502 0.1643230627 45.5373128762 -1.0000000000 -1.0000000000 0.1954290927
20.2611994163 0.1643230627 45.5373128762 -1.0000000000 -1.0000000000 0.1954290927
21.1599616502 37.0219924825 45.5373128762 -1.0000000000 -1.0000000000 0.1954290927
21.1599616502 0.1643230627 79.9262825110 -1.0000000000 -1.0000000000 0.1954290927
21.1599616502 0.1643230627 45.5373128762 -1.0000000000 -1.0000000000 5.1952634673
76.9872041013 -1.0000000000 88.1205493400 1.5455894813 44.8585393879 0.5339030543
58.7963893277 -1.0000000000 88.1205493400 1.5455894813 44.8585393879 0.5339030543
76.9872041013 -1.0000000000 17.9373176043 1.5455894813 44.8585393879 0.5339030543
76.9872041013 -1.0000000000 88.1205493400 68.8413930318 44.8585393879 0.5339030543
76.9872041013 -1.0000000000 88.1205493400 1.5455894813 21.8861039782 0.5339030543
76.9872041013 -1.0000000000 88.1205493400 1.5455894813 44.8585393879 34.0653440657
53.1312526731 -1.0000000000 85.2833951333 -1.0000000000 37.9268131533 0.2999712749
32.2081792755 -1.0000000000 85.2833951333 -1.0000000000 37.9268131533 0.2999712749
53.1312526731 -1.0000000000 83.0085293986 -1.0000000000 37.9268131533 0.2999712749
53.1312526731 -1.0000000000 85.2833951333 -1.0000000000 95.9981969016 0.2999712749
53.1312526731 -1.0000000000 85.2833951333 -1.0000000000 37.9268131533 17.3427635413
31.5518008985 -1.0000000000 69.0144946472 1.2359193027 -1.0000000000 1.4592073747
41.8554190499 -1.0000000000 69.0144946472 1.2359193027 -1.0000000000 1.4592073747
31.5518008985 -1.0000000000 1.7026394442 1.2359193027 -1.0000000000 1.4592073747
31.5518008985 -1.0000000000 69.0144946472 57.4989636378 -1.0000000000 1.4592073747
31.5518008985 -1.0000000000 69.0144946472 1.2359193027 -1.0000000000 24.0277017052
90.6538105546 -1.0000000000 93.1040107006 -1.0000000000 -1.0000000000 0.8061703310
80.1565952250 2.1725477584 -1.0000000000 0.4875494841 45.0307913990 0.4814954111
80.1565952250 34.5295035197 -1.0000000000 0.4875494841 45.0307913990 0.4814954111
80.1565952250 2.1725477584 -1.0000000000 69.0708414257 45.0307913990 0.4814954111
80.1565952250 2.1725477584 -1.0000000000 0.4875494841 45.0307913990 56.3551593901
95.8170661437 2.5990288347 -1.0000000000 -1.0000000000 40.0590090707 0.2175802989
50.4700519655 2.5990288347 -1.0000000000 -1.0000000000 40.0590090707 0.2175802989
95.8170661437 8.1109263464 -1.0000000000 -1.0000000000 40.0590090707 0.2175802989
95.8170661437 2.5990288347 -1.0000000000 -1.0000000000 14.1464227678 0.2175802989
95.8170661437 2.5990288347 -1.0000000000 -1.0000000000 40.0590090707 71.6836324771
52.4544897536 0.8780694343 -1.0000000000 1.2147102095 -1.0000000000 1.0488130098
52.4544897536 20.2939402902 -1.0000000000 1.2147102095 -1.0000000000 1.0488130098
52.4544897536 0.8780694343 -1.0000000000 99.7779403323 -1.0000000000 1.0488130098
52.4544897536 0.8780694343 -1.0000000000 1.2147102095 -1.0000000000 75.1077697498
82.6142347640 1.6433040495 -1.0000000000 -1.0000000000 -1.0000000000 0.5910599937
64.2492850096 -1.0000000000 -1.0000000000 0.5159654356 50.0267845628 0.8720817820
24.5929949935 -1.0000000000 -1.0000000000 0.5159654356 50.0267845628 0.8720817820
64.2492850096 -1.0000000000 -1.0000000000 98.4594468398 50.0267845628 0.8720817820
64.2492850096 -1.0000000000 -1.0000000000 0.5159654356 30.6986278245 0.8720817820
64.2492850096 -1.0000000000 -1.0000000000 0.5159654356 50.0267845628 12.1412038559
59.1291542436 -1.0000000000 -1.0000000000 -1.0000000000 12.1421106469 0.1767781806
99.1926505141 -1.0000000000 -1.0000000000 1.1352195448 -1.0000000000 0.7285707431
49.8624421983 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 1.8240909843
65.9134012039 0.8932631940 75.2285307290 1.0956589337 77.3115162833 -1.0000000000
49.6804409732 0.8932631940 75.2285307290 1.0956589337 77.3115162833 -1.0000000000
65.9134012039 28.1496721215 75.2285307290 1.0956589337 77.3115162833 -1.0000000000
65.9134012039 0.8932631940 32.2281940605 1.0956589337 77.3115162833 -1.0000000000
65.9134012039 0.8932631940 75.2285307290 95.0773128231 77.3115162833 -1.0000000000
65.9134012039 0.8932631940 75.2285307290 1.0956589337 17.7337596025 -1.0000000000
82.7817428871 1.1740293335 88.2002188837 -1.0000000000 49.4219794585 -1.0000000000
51.5774785821 1.1740293335 88.2002188837 -1.0000000000 49.4219794585 -1.0000000000
82.7817428871 20.1667711412 88.2002188837 -1.0000000000 49.4219794585 -1.0000000000
82.7817428871 1.1740293335 58.1761346878 -1.0000000000 49.4219794585 -1.0000000000
82.7817428871 1.1740293335 88.2002188837 -1.0000000000 71.0997574242 -1.0000000000
56.0789279943 2.0454726650 20.2053042637 0.3262219599 -1.0000000000 -1.0000000000
44.4002121388 2.0454726650 20.2053042637 0.3262219599 -1.0000000000 -1.0000000000
56.0789279943 19.3733842436 20.2053042637 0.3262219599 -1.0000000000 -1.0000000000
56.0789279943 2.0454726650 68.6620039534 0.3262219599 -1.0000000000 -1.0000000000
56.0789279943 2.0454726650 20.2053042637 9.0631892496 -1.0000000000 -1.0000000000
94.1902033565 2.0145562372 16.0582341034 -1.0000000000 -1.0000000000 -1.0000000000
32.0092124154 -1.0000000000 79.4391976183 1.9380958929 62.1134693792 -1.0000000000
1.7252681455 -1.0000000000 79.4391976183 1.9380958929 62.1134693792 -1.0000000000
32.0092124154 -1.0000000000 82.4042817248 1.9380958929 62.1134693792 -1.0000000000
32.0092124154 -1.0000000000 79.4391976183 27.1474192907 62.1134693792 -1.0000000000
32.0092124154 -1.0000000000 79.4391976183 1.9380958929 77.5296770105 -1.0000000000
93.0555965738 -1.0000000000 58.9848504143 -1.0000000000 68.5165452136 -1.0000000000
50.6382312407 -1.0000000000 94.2800094750 1.6269200105 -1.0000000000 -1.0000000000
60.6618372477 -1.0000000000 63.7757042803 -1.0000000000 -1.0000000000 -1.0000000000
64.8551573816 0.8833407401 -1.0000000000 1.5191721746 56.5261219995 -1.0000000000
32.1357553981 0.8833407401 -1.0000000000 1.5191721746 56.5261219995 -1.0000000000
64.8551573816 47.8499301199 -1.0000000000 1.5191721746 56.5261219995 -1.0000000000
64.8551573816 0.8833407401 -1.0000000000 77.6799981097 56.5261219995 -1.0000000000
64.8551573816 0.8833407401 -1.0000000000 1.5191721746 20.5970033301 -1.0000000000
39.6902099232 0.8698074470 -1.0000000000 -1.0000000000 31.1778965811 -1.0000000000
27.4746146508 0.1771819675 -1.0000000000 0.2573780795 -1.0000000000 -1.0000000000
58.4549058622 1.3554652500 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
56.0234587615 -1.0000000000 -1.0000000000 0.3581363727 36.2070697642 -1.0000000000
97.2187755932 -1.0000000000 -1.0000000000 -1.0000000000 40.6980620208 -1.0000000000
43.2019608473 -1.0000000000 -1.0000000000 1.0771128720 -1.0000000000 -1.0000000000
92.6091177748 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 1.2315071206 96.8047610484 1.2815381340 59.3854589630 0.6285473990
-1.0000000000 37.8447089838 96.8047610484 1.2815381340 59.3854589630 0.6285473990
-1.0000000000 1.2315071206 96.8047610484 82.7762070473 59.3854589630 0.6285473990
-1.0000000000 1.2315071206 96.8047610484 1.2815381340 59.3854589630 17.1164636756
-1.0000000000 1.9625587157 63.2201091664 -1.0000000000 56.9669520754 0.5547313911
-1.0000000000 1.2927116993 63.2201091664 -1.0000000000 56.9669520754 0.5547313911
-1.0000000000 1.9625587157 74.1938439138 -1.0000000000 56.9669520754 0.5547313911
-1.0000000000 1.9625587157 63.2201091664 -1.0000000000 85.1774896558 0.5547313911
-1.0000000000 1.9625587157 63.2201091664 -1.0000000000 56.9669520754 98.9484691880
-1.0000000000 1.4753045991 78.4956595982 1.2274457106 -1.0000000000 0.4388423440
-1.0000000000 12.9452837344 78.4956595982 1.2274457106 -1.0000000000 0.4388423440
-1.0000000000 1.4753045991 78.4956595982 91.2798761639 -1.0000000000 0.4388423440
-1.0000000000 1.4753045991 78.4956595982 1.2274457106 -1.0000000000 65.0786551923
-1.0000000000 0.2534619737 32.2611149700 -1.0000000000 -1.0000000000 2.3131236068
-1.0000000000 -1.0000000000 62.2293972443 1.3175890907 48.9737558133 0.8662316014
-1.0000000000 -1.0000000000 93.7489166253 1.3175890907 48.9737558133 0.8662316014
-1.0000000000 -1.0000000000 62.2293972443 13.5687581530 48.9737558133 0.8662316014
-1.0000000000 -1.0000000000 62.2293972443 1.3175890907 51.0982022813 0.8662316014
-1.0000000000 -1.0000000000 62.2293972443 1.3175890907 48.9737558133 7.9578465013
-1.0000000000 -1.0000000000 21.8239479069 -1.0000000000 36.7868555026 0.9250225817
-1.0000000000 -1.0000000000 80.5833343685 0.8815825910 -1.0000000000 1.1923405923
-1.0000000000 -1.0000000000 84.2142949661 -1.0000000000 -1.0000000000 1.0763334543
-1.0000000000 2.4672711077 -1.0000000000 0.0599295812 69.2427005809 0.6143919647
-1.0000000000 38.6964224000 -1.0000000000 0.0599295812 69.2427005809 0.6143919647
-1.0000000000 2.4672711077 -1.0000000000 92.4353627036 69.2427005809 0.6143919647
-1.0000000000 2.4672711077 -1.0000000000 0.0599295812 69.2427005809 72.8520447935
-1.0000000000 1.4931281145 -1.0000000000 -1.0000000000 56.1572520672 0.9989769753
-1.0000000000 0.7459423397 -1.0000000000 0.8147882973 -1.0000000000 1.5808620166
-1.0000000000 2.2761835245 -1.0000000000 -1.0000000000 -1.0000000000 0.4143435656
-1.0000000000 -1.0000000000 -1.0000000000 0.6126302353 96.7015649537 1.8356092935
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 68.6451141327 0.8694058807
-1.0000000000 -1.0000000000 -1.0000000000 0.6935848385 -1.0000000000 1.3106417894
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 1.4004394787
-1.0000000000 1.4358293902 20.2581238152 0.3305176251 61.2327254253 -1.0000000000
-1.0000000000 28.5961266115 20.2581238152 0.3305176251 61.2327254253 -1.0000000000
-1.0000000000 1.4358293902 84.3233304373 0.3305176251 61.2327254253 -1.0000000000
-1.0000000000 1.4358293902 20.2581238152 74.9712508553 61.2327254253 -1.0000000000
-1.0000000000 1.4358293902 20.2581238152 0.3305176251 89.4863181616 -1.0000000000
-1.0000000000 2.7567754811 32.9228495238 -1.0000000000 21.9211000011 -1.0000000000
-1.0000000000 1.0557569688 49.6897566302 0.9422670695 -1.0000000000 -1.0000000000
-1.0000000000 0.5560786894 92.0827347245 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 59.6548809508 0.9235986877 74.7762840835 -1.0000000000
-1.0000000000 -1.0000000000 61.6853201272 -1.0000000000 29.8001078424 -1.0000000000
-1.0000000000 -1.0000000000 30.9187171591 0.4494842965 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 81.0041868215 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 0.5280551671 -1.0000000000 1.5004444092 61.7079776081 -1.0000000000
-1.0000000000 2.3119308641 -1.0000000000 -1.0000000000 74.0604262334 -1.0000000000
-1.0000000000 0.3655660384 -1.0000000000 1.9136578398 -1.0000000000 -1.0000000000
-1.0000000000 1.6037989860 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 0.7301592220 50.1194991929 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 79.2621266502 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 0.9758358401 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
34.6675801462 0.4876553345 39.1023260271 2.5847665646 5.1137362874 0.0691707545
34.6675801462 54.4139034256 39.1023260271 2.5847665646 5.1137362874 0.0691707545
34.6675801462 0.4876553345 39.1023260271 15.9987305075 5.1137362874 0.0691707545
34.6675801462 0.4876553345 39.1023260271 2.5847665646 5.1137362874 61.8287214500
47.1921210509 0.6236062930 77.3934181572 -1.0000000000 49.2434095283 0.6552400394
21.1479682774 0.6236062930 77.3934181572 -1.0000000000 49.2434095283 0.6552400394
47.1921210509 72.9159454317 77.3934181572 -1.0000000000 49.2434095283 0.6552400394
47.1921210509 0.6236062930 31.4024558849 -1.0000000000 49.2434095283 0.6552400394
47.1921210509 0.6236062930 77.3934181572 -1.0000000000 21.6446135004 0.6552400394
47.1921210509 0.6236062930 77.3934181572 -1.0000000000 49.2434095283 5.8070147063
56.2938726684 0.7482687607 68.3782943259 0.9727266727 -1.0000000000 1.4205972202
56.2938726684 98.6889857638 68.3782943259 0.9727266727 -1.0000000000 1.4205972202
56.2938726684 0.7482687607 68.3782943259 11.2776908870 -1.0000000000 1.4205972202
56.2938726684 0.7482687607 68.3782943259 0.9727266727 -1.0000000000 18.2652992349
54.5615973829 0.7116520174 81.1293864756 -1.0000000000 -1.0000000000 1.1001683263
65.2619501035 0.7116520174 81.1293864756 -1.0000000000 -1.0000000000 1.1001683263
54.5615973829 4.0280839247 81.1293864756 -1.0000000000 -1.0000000000 1.1001683263
54.5615973829 0.7116520174 11.9678074590 -1.0000000000 -1.0000000000 1.1001683263
54.5615973829 0.7116520174 81.1293864756 -1.0000000000 -1.0000000000 96.7460933656
85.5623837847 -1.0000000000 93.8445532721 2.3544323777 11.2529856753 0.0850415616
64.3866754889 -1.0000000000 93.8445532721 2.3544323777 11.2529856753 0.0850415616
85.5623837847 -1.0000000000 18.8543749242 2.3544323777 11.2529856753 0.0850415616
85.5623837847 -1.0000000000 93.8445532721 86.6178144687 11.2529856753 0.0850415616
85.5623837847 -1.0000000000 93.8445532721 2.3544323777 15.6628494755 0.0850415616
85.5623837847 -1.0000000000 93.8445532721 2.3544323777 11.2529856753 93.8873029355
77.9183625056 -1.0000000000 24.3894892420 -1.0000000000 86.8651376169 1.8042948842
86.9603014955 -1.0000000000 24.3894892420 -1.0000000000 86.8651376169 1.8042948842
77.9183625056 -1.0000000000 90.0623123475 -1.0000000000 86.8651376169 1.8042948842
77.9183625056 -1.0000000000 24.3894892420 -1.0000000000 6.3322687384 1.8042948842
77.9183625056 -1.0000000000 24.3894892420 -1.0000000000 86.8651376169 15.1414507022
94.8873512843 -1.0000000000 83.9537361712 1.0329776330 -1.0000000000 0.2950519227
43.9532015222 -1.0000000000 83.9537361712 1.0329776330 -1.0000000000 0.2950519227
94.8873512843 -1.0000000000 93.4942698544 1.0329776330 -1.0000000000 0.2950519227
94.8873512843 -1.0000000000 83.9537361712 61.5444332496 -1.0000000000 0.2950519227
94.8873512843 -1.0000000000 83.9537361712 1.0329776330 -1.0000000000 26.9780447764
87.0231349591 -1.0000000000 52.0888275852 -1.0000000000 -1.0000000000 0.9097444476
88.4147656724 1.7932470952 -1.0000000000 0.1465216520 84.5475931899 1.2018239063
88.4147656724 20.1648984166 -1.0000000000 0.1465216520 84.5475931899 1.2018239063
88.4147656724 1.7932470952 -1.0000000000 45.0471531275 84.5475931899 1.2018239063
88.4147656724 1.7932470952 -1.0000000000 0.1465216520 84.5475931899 89.3671978072
77.3460293860 1.0753369844 -1.0000000000 -1.0000000000 67.0899484677 0.8680894032
8.5192085303 1.0753369844 -1.0000000000 -1.0000000000 67.0899484677 0.8680894032
77.3460293860 54.1817729385 -1.0000000000 -1.0000000000 67.0899484677 0.8680894032
77.3460293860 1.0753369844 -1.0000000000 -1.0000000000 15.1397988076 0.8680894032
77.3460293860 1.0753369844 -1.0000000000 -1.0000000000 67.0899484677 12.2755524501
78.8570651764 2.0397534413 -1.0000000000 0.1775046532 -1.0000000000 0.9243345591
78.8570651764 69.5179327929 -1.0000000000 0.1775046532 -1.0000000000 0.9243345591
78.8570651764 2.0397534413 -1.0000000000 87.9149004845 -1.0000000000 0.9243345591
78.8570651764 2.0397534413 -1.0000000000 0.1775046532 -1.0000000000 88.7553571559
59.5220271275 0.7876463792 -1.0000000000 -1.0000000000 -1.0000000000 2.2096297375
15.7297778418 -1.0000000000 -1.0000000000 1.2182509676 89.7422736137 1.7500047959
22.6388039384 -1.0000000000 -1.0000000000 1.2182509676 89.7422736137 1.7500047959
15.7297778418 -1.0000000000 -1.0000000000 2.0618188393 89.7422736137 1.7500047959
15.7297778418 -1.0000000000 -1.0000000000 1.2182509676 51.5474839735 1.7500047959
15.7297778418 -1.0000000000 -1.0000000000 1.2182509676 89.7422736137 74.7614000815
50.2763473992 -1.0000000000 -1.0000000000 -1.0000000000 16.6333465524 0.1606819235
76.9603811191 -1.0000000000 -1.0000000000 1.9877418194 -1.0000000000 0.1678444124
41.7801188865 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 0.8059344236
70.7339387840 0.7867496112 60.1287203242 0.6458798122 98.9459649881 -1.0000000000
37.8127762678 0.7867496112 60.1287203242 0.6458798122 98.9459649881 -1.0000000000
70.7339387840 42.3883536093 60.1287203242 0.6458798122 98.9459649881 -1.0000000000
70.7339387840 0.7867496112 43.1919843766 0.6458798122 98.9459649881 -1.0000000000
70.7339387840 0.7867496112 60.1287203242 77.4386139955 98.9459649881 -1.0000000000
70.7339387840 0.7867496112 60.1287203242 0.6458798122 41.1035437330 -1.0000000000
53.9985211502 1.5018816762 21.7432925912 -1.0000000000 50.9473341830 -1.0000000000
78.7477948114 1.5018816762 21.7432925912 -1.0000000000 50.9473341830 -1.0000000000
53.9985211502 29.3948585094 21.7432925912 -1.0000000000 50.9473341830 -1.0000000000
53.9985211502 1.5018816762 96.8277604387 -1.0000000000 50.9473341830 -1.0000000000
53.9985211502 1.5018816762 21.7432925912 -1.0000000000 16.7621450566 -1.0000000000
34.5213930677 0.3750900945 94.2279611988 1.5661038068 -1.0000000000 -1.0000000000
18.9344080784 0.3750900945 94.2279611988 1.5661038068 -1.0000000000 -1.0000000000
34.5213930677 2.4962664515 94.2279611988 1.5661038068 -1.0000000000 -1.0000000000
34.5213930677 0.3750900945 25.0330917013 1.5661038068 -1.0000000000 -1.0000000000
34.5213930677 0.3750900945 94.2279611988 58.9862511158 -1.0000000000 -1.0000000000
51.6056325055 0.4462130636 49.7427553790 -1.0000000000 -1.0000000000 -1.0000000000
85.0919442257 -1.0000000000 26.3950332054 0.3142087677 78.6748159249 -1.0000000000
19.7719213114 -1.0000000000 26.3950332054 0.3142087677 78.6748159249 -1.0000000000
85.0919442257 -1.0000000000 78.3027532240 0.3142087677 78.6748159249 -1.0000000000
85.0919442257 -1.0000000000 26.3950332054 37.8296919808 78.6748159249 -1.0000000000
85.0919442257 -1.0000000000 26.3950332054 0.3142087677 45.9342956581 -1.0000000000
65.1367486798 -1.0000000000 91.4447060123 -1.0000000000 44.8336018902 -1.0000000000
98.0531763424 -1.0000000000 65.4004020759 0.6572806576 -1.0000000000 -1.0000000000
66.8508788313 -1.0000000000 24.3100427637 -1.0000000000 -1.0000000000 -1.0000000000
99.6388482227 1.7938970836 -1.0000000000 0.7493170713 57.5533032005 -1.0000000000
34.4540780857 1.7938970836 -1.0000000000 0.7493170713 57.5533032005 -1.0000000000
99.6388482227 39.6645900970 -1.0000000000 0.7493170713 57.5533032005 -1.0000000000
99.6388482227 1.7938970836 -1.0000000000 27.3075036679 57.5533032005 -1.0000000000
99.6388482227 1.7938970836 -1.0000000000 0.7493170713 36.4796690597 -1.0000000000
74.3078683188 1.5001620070 -1.0000000000 -1.0000000000 71.7529316697 -1.0000000000
89.0810920199 2.1937621279 -1.0000000000 0.2580566836 -1.0000000000 -1.0000000000
50.4409715990 0.6159461232 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
33.4019079749 -1.0000000000 -1.0000000000 1.4881085769 63.3335698075 -1.0000000000
76.3838676892 -1.0000000000 -1.0000000000 -1.0000000000 23.1294361759 -1.0000000000
74.0024241143 -1.0000000000 -1.0000000000 0.7636061482 -1.0000000000 -1.0000000000
97.7077416860 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 0.6095960502 72.8859843528 1.8291992104 48.7280027845 0.7027973930
-1.0000000000 5.3592337457 72.8859843528 1.8291992104 48.7280027845 0.7027973930
-1.0000000000 0.6095960502 72.8859843528 26.5925119075 48.7280027845 0.7027973930
-1.0000000000 0.6095960502 72.8859843528 1.8291992104 48.7280027845 14.8544181923
-1.0000000000 0.5612992276 28.6668670207 -1.0000000000 97.5516135292 2.3750073784
-1.0000000000 51.9357943090 28.6668670207 -1.0000000000 97.5516135292 2.3750073784
-1.0000000000 0.5612992276 52.6033039741 -1.0000000000 97.5516135292 2.3750073784
-1.0000000000 0.5612992276 28.6668670207 -1.0000000000 86.0766205297 2.3750073784
-1.0000000000 0.5612992276 28.6668670207 -1.0000000000 97.5516135292 4.2184968099
-1.0000000000 1.1818676983 41.9412443595 0.9045511622 -1.0000000000 1.0551737931
-1.0000000000 91.0641488517 41.9412443595 0.9045511622 -1.0000000000 1.0551737931
-1.0000000000 1.1818676983 41.9412443595 16.5299938928 -1.0000000000 1.0551737931
-1.0000000000 1.1818676983 41.9412443595 0.9045511622 -1.0000000000 0.3245845173
-1.0000000000 0.7851439453 75.0406326613 -1.0000000000 -1.0000000000 0.3351097645
-1.0000000000 -1.0000000000 49.7409120860 0.3709383497 50.1674061836 0.3742754408
-1.0000000000 -1.0000000000 9.3329811813 0.3709383497 50.1674061836 0.3742754408
-1.0000000000 -1.0000000000 49.7409120860 43.0374321138 50.1674061836 0.3742754408
-1.0000000000 -1.0000000000 49.7409120860 0.3709383497 18.6972908927 0.3742754408
-1.0000000000 -1.0000000000 49.7409120860 0.3709383497 50.1674061836 59.9270146498
-1.0000000000 -1.0000000000 32.7556694325 -1.0000000000 82.9164766067 1.1503464451
-1.0000000000 -1.0000000000 46.9897886513 1.3783303794 -1.0000000000 0.7215677973
-1.0000000000 -1.0000000000 78.5629333200 -1.0000000000 -1.0000000000 1.4519240668
-1.0000000000 0.1321598141 -1.0000000000 2.7104464991 44.1493403418 0.2989863404
-1.0000000000 49.3379375541 -1.0000000000 2.7104464991 44.1493403418 0.2989863404
-1.0000000000 0.1321598141 -1.0000000000 23.9833831331 44.1493403418 0.2989863404
-1.0000000000 0.1321598141 -1.0000000000 2.7104464991 44.1493403418 88.5122337837
-1.0000000000 0.8471237477 -1.0000000000 -1.0000000000 19.5655959950 0.9308213582
-1.0000000000 0.2206290092 -1.0000000000 2.0106496664 -1.0000000000 0.9103139780
-1.0000000000 1.3178459513 -1.0000000000 -1.0000000000 -1.0000000000 0.5262205119
-1.0000000000 -1.0000000000 -1.0000000000 1.2607677245 65.6305400631 0.7983108460
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 24.4082272921 0.3750553229
-1.0000000000 -1.0000000000 -1.0000000000 1.3829202684 -1.0000000000 0.2987303889
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 0.9875126512
-1.0000000000 2.1309754203 56.0487490657 0.5360772485 50.1408526495 -1.0000000000
-1.0000000000 91.7279533962 56.0487490657 0.5360772485 50.1408526495 -1.0000000000
-1.0000000000 2.1309754203 72.4288453575 0.5360772485 50.1408526495 -1.0000000000
-1.0000000000 2.1309754203 56.0487490657 43.5146250119 50.1408526495 -1.0000000000
-1.0000000000 2.1309754203 56.0487490657 0.5360772485 94.3304212244 -1.0000000000
-1.0000000000 0.6239063922 45.3096603682 -1.0000000000 69.3442901392 -1.0000000000
-1.0000000000 1.1983226855 64.5564326139 0.9748355152 -1.0000000000 -1.0000000000
-1.0000000000 1.3682122936 71.7077677777 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 48.2624547370 0.5938222640 75.9117157890 -1.0000000000
-1.0000000000 -1.0000000000 88.2709293024 -1.0000000000 84.2266324836 -1.0000000000
-1.0000000000 -1.0000000000 71.1010033304 0.6239483855 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 73.3220640211 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 0.4158676697 -1.0000000000 2.2406860106 52.3051970835 -1.0000000000
-1.0000000000 0.9564447356 -1.0000000000 -1.0000000000 40.1200020354 -1.0000000000
-1.0000000000 1.8617333644 -1.0000000000 0.8715358548 -1.0000000000 -1.0000000000
-1.0000000000 0.9306084734 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 0.7961915114 43.1190367845 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 58.7013482981 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 0.4960068466 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
20.2162758202 0.5747401557 14.4831609483 0.4000375790 30.7763306674 2.1668149190
20.2162758202 7.4469494967 14.4831609483 0.4000375790 30.7763306674 2.1668149190
20.2162758202 0.5747401557 14.4831609483 86.0549425806 30.7763306674 2.1668149190
20.2162758202 0.5747401557 14.4831609483 0.4000375790 30.7763306674 88.2142136046
4.9082532175 0.1024485754 9.3486833069 -1.0000000000 14.1138999299 2.8430994609
88.2484563278 0.1024485754 9.3486833069 -1.0000000000 14.1138999299 2.8430994609
4.9082532175 46.8396895929 9.3486833069 -1.0000000000 14.1138999299 2.8430994609
4.9082532175 0.1024485754 45.2341843604 -1.0000000000 14.1138999299 2.8430994609
4.9082532175 0.1024485754 9.3486833069 -1.0000000000 59.0861386714 2.8430994609
4.9082532175 0.1024485754 9.3486833069 -1.0000000000 14.1138999299 65.3099908403
61.2246073360 0.6674222376 43.8216558213 0.4589695284 -1.0000000000 2.0152008876
61.2246073360 19.8840023001 43.8216558213 0.4589695284 -1.0000000000 2.0152008876
61.2246073360 0.6674222376 43.8216558213 26.1372397691 -1.0000000000 2.0152008876
61.2246073360 0.6674222376 43.8216558213 0.4589695284 -1.0000000000 51.0860322259
30.9577058193 0.2503943066 39.3743946226 -1.0000000000 -1.0000000000 2.5705801608
86.9984805076 0.2503943066 39.3743946226 -1.0000000000 -1.0000000000 2.5705801608
30.9577058193 60.3608326494 39.3743946226 -1.0000000000 -1.0000000000 2.5705801608
30.9577058193 0.2503943066 21.6147016915 -1.0000000000 -1.0000000000 2.5705801608
30.9577058193 0.2503943066 39.3743946226 -1.0000000000 -1.0000000000 17.3740132767
30.4084678357 -1.0000000000 82.6839859551 1.5116014143 78.7093320080 1.2540769040
2.4640155763 -1.0000000000 82.6839859551 1.5116014143 78.7093320080 1.2540769040
30.4084678357 -1.0000000000 4.3136283696 1.5116014143 78.7093320080 1.2540769040
30.4084678357 -1.0000000000 82.6839859551 13.7532887252 78.7093320080 1.2540769040
30.4084678357 -1.0000000000 82.6839859551 1.5116014143 39.9373123346 1.2540769040
30.4084678357 -1.0000000000 82.6839859551 1.5116014143 78.7093320080 51.0691389591
99.2818149121 -1.0000000000 35.6661794550 -1.0000000000 63.7794696610 0.0767931049
55.5374823966 -1.0000000000 35.6661794550 -1.0000000000 63.7794696610 0.0767931049
99.2818149121 -1.0000000000 10.4086582842 -1.0000000000 63.7794696610 0.0767931049
99.2818149121 -1.0000000000 35.6661794550 -1.0000000000 66.5521754854 0.0767931049
99.2818149121 -1.0000000000 35.6661794550 -1.0000000000 63.7794696610 5.8477319135
58.4399138202 -1.0000000000 26.2035447632 0.3678433344 -1.0000000000 1.8431148212
54.0000544801 -1.0000000000 26.2035447632 0.3678433344 -1.0000000000 1.8431148212
58.4399138202 -1.0000000000 18.7825894142 0.3678433344 -1.0000000000 1.8431148212
58.4399138202 -1.0000000000 26.2035447632 55.1097026229 -1.0000000000 1.8431148212
58.4399138202 -1.0000000000 26.2035447632 0.3678433344 -1.0000000000 1.4483278768
51.8818232932 -1.0000000000 88.2551998873 -1.0000000000 -1.0000000000 0.6260132752
40.2214137934 0.8727455417 -1.0000000000 1.3321259183 42.2964677205 0.9367211936
40.2214137934 33.1189383283 -1.0000000000 1.3321259183 42.2964677205 0.9367211936
40.2214137934 0.8727455417 -1.0000000000 30.4544030962 42.2964677205 0.9367211936
40.2214137934 0.8727455417 -1.0000000000 1.3321259183 42.2964677205 68.7594863148
9.1565271588 0.1016281617 -1.0000000000 -1.0000000000 88.9490989774 1.7410240858
6.4709108054 0.1016281617 -1.0000000000 -1.0000000000 88.9490989774 1.7410240858
9.1565271588 20.8556903318 -1.0000000000 -1.0000000000 88.9490989774 1.7410240858
9.1565271588 0.1016281617 -1.0000000000 -1.0000000000 45.9300535042 1.7410240858
9.1565271588 0.1016281617 -1.0000000000 -1.0000000000 88.9490989774 1.6609509945
85.2614976580 1.5537849839 -1.0000000000 0.7317034012 -1.0000000000 0.8561042685
85.2614976580 30.4491690232 -1.0000000000 0.7317034012 -1.0000000000 0.8561042685
85.2614976580 1.5537849839 -1.0000000000 1.4718927075 -1.0000000000 0.8561042685
85.2614976580 1.5537849839 -1.0000000000 0.7317034012 -1.0000000000 87.5438135898
98.4546546133 1.6422256162 -1.0000000000 -1.0000000000 -1.0000000000 0.8871690655
46.1589372027 -1.0000000000 -1.0000000000 1.9857092781 13.3879500249 0.2333176680
52.7733145274 -1.0000000000 -1.0000000000 1.9857092781 13.3879500249 0.2333176680
46.1589372027 -1.0000000000 -1.0000000000 82.1126783773 13.3879500249 0.2333176680
46.1589372027 -1.0000000000 -1.0000000000 1.9857092781 49.8876122615 0.2333176680
46.1589372027 -1.0000000000 -1.0000000000 1.9857092781 13.3879500249 75.2138967092
51.2076043434 -1.0000000000 -1.0000000000 -1.0000000000 63.2794726829 1.8671315247
56.0367290555 -1.0000000000 -1.0000000000 1.0291089687 -1.0000000000 1.5044313910
28.8270898939 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 1.5138086325
79.1968061241 2.0015990186 42.3756666382 0.5077120445 51.5107631291 -1.0000000000
60.0234737977 2.0015990186 42.3756666382 0.5077120445 51.5107631291 -1.0000000000
79.1968061241 30.1034050310 42.3756666382 0.5077120445 51.5107631291 -1.0000000000
79.1968061241 2.0015990186 48.5060762108 0.5077120445 51.5107631291 -1.0000000000
79.1968061241 2.0015990186 42.3756666382 24.1248130981 51.5107631291 -1.0000000000
79.1968061241 2.0015990186 42.3756666382 0.5077120445 13.9201177796 -1.0000000000
96.9892997237 1.5338781722 57.6103708666 -1.0000000000 80.1807956290 -1.0000000000
30.1355323122 1.5338781722 57.6103708666 -1.0000000000 80.1807956290 -1.0000000000
96.9892997237 53.0758141759 57.6103708666 -1.0000000000 80.1807956290 -1.0000000000
96.9892997237 1.5338781722 38.4923745857 -1.0000000000 80.1807956290 -1.0000000000
96.9892997237 1.5338781722 57.6103708666 -1.0000000000 20.5305205357 -1.0000000000
63.3795235093 0.5711423934 93.3823717886 2.2201054017 -1.0000000000 -1.0000000000
81.7465271416 0.5711423934 93.3823717886 2.2201054017 -1.0000000000 -1.0000000000
63.3795235093 72.8208708724 93.3823717886 2.2201054017 -1.0000000000 -1.0000000000
63.3795235093 0.5711423934 3.7288687857 2.2201054017 -1.0000000000 -1.0000000000
63.3795235093 0.5711423934 93.3823717886 75.5722337648 -1.0000000000 -1.0000000000
6.0290332070 0.0779937368 66.9468636277 -1.0000000000 -1.0000000000 -1.0000000000
39.1862444305 -1.0000000000 39.1720002862 0.9510497676 45.4964717024 -1.0000000000
12.1666930096 -1.0000000000 39.1720002862 0.9510497676 45.4964717024 -1.0000000000
39.1862444305 -1.0000000000 24.8191594366 0.9510497676 45.4964717024 -1.0000000000
39.1862444305 -1.0000000000 39.1720002862 77.3037182159 45.4964717024 -1.0000000000
39.1862444305 -1.0000000000 39.1720002862 0.9510497676 67.5900193974 -1.0000000000
65.6111128854 -1.0000000000 73.7635104839 -1.0000000000 94.2756773499 -1.0000000000
89.6939008402 -1.0000000000 82.5699975945 0.9972544501 -1.0000000000 -1.0000000000
86.4524140572 -1.0000000000 68.6588485331 -1.0000000000 -1.0000000000 -1.0000000000
84.1039999906 1.9428092301 -1.0000000000 0.4456052006 61.7475186695 -1.0000000000
21.0213940936 1.9428092301 -1.0000000000 0.4456052006 61.7475186695 -1.0000000000
84.1039999906 6.2523982030 -1.0000000000 0.4456052006 61.7475186695 -1.0000000000
84.1039999906 1.9428092301 -1.0000000000 53.8052235035 61.7475186695 -1.0000000000
84.1039999906 1.9428092301 -1.0000000000 0.4456052006 15.0742871625 -1.0000000000
61.2667299948 1.2578349594 -1.0000000000 -1.0000000000 36.5841000704 -1.0000000000
97.5515747838 1.7830369237 -1.0000000000 0.6234673825 -1.0000000000 -1.0000000000
18.4339265035 0.2691181273 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
89.2121783645 -1.0000000000 -1.0000000000 1.2424165952 77.1027815815 -1.0000000000
44.3933575588 -1.0000000000 -1.0000000000 -1.0000000000 41.9890758154 -1.0000000000
39.5601012476 -1.0000000000 -1.0000000000 0.5346072412 -1.0000000000 -1.0000000000
36.1082130594 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 0.6751142201 96.1985679093 1.9322078666 52.3686877284 0.5342705669
-1.0000000000 63.7995417257 96.1985679093 1.9322078666 52.3686877284 0.5342705669
-1.0000000000 0.6751142201 96.1985679093 18.7356630728 52.3686877284 0.5342705669
-1.0000000000 0.6751142201 96.1985679093 1.9322078666 52.3686877284 1.3294040435
-1.0000000000 1.5096502613 40.3043898271 -1.0000000000 23.6136703024 0.5451870382
-1.0000000000 40.8029100101 40.3043898271 -1.0000000000 23.6136703024 0.5451870382
-1.0000000000 1.5096502613 44.9392945475 -1.0000000000 23.6136703024 0.5451870382
-1.0000000000 1.5096502613 40.3043898271 -1.0000000000 78.8782411120 0.5451870382
-1.0000000000 1.5096502613 40.3043898271 -1.0000000000 23.6136703024 57.8919080516
-1.0000000000 0.9249600142 22.9126109536 0.2558574795 -1.0000000000 1.9607751599
-1.0000000000 26.2997806595 22.9126109536 0.2558574795 -1.0000000000 1.9607751599
-1.0000000000 0.9249600142 22.9126109536 93.5174042015 -1.0000000000 1.9607751599
-1.0000000000 0.9249600142 22.9126109536 0.2558574795 -1.0000000000 23.3948776343
-1.0000000000 0.8657536926 74.1700674737 -1.0000000000 -1.0000000000 0.6940316398
-1.0000000000 -1.0000000000 90.6930405352 1.6941396707 26.7614591049 0.2971910693
-1.0000000000 -1.0000000000 34.3920756920 1.6941396707 26.7614591049 0.2971910693
-1.0000000000 -1.0000000000 90.6930405352 17.1231381268 26.7614591049 0.2971910693
-1.0000000000 -1.0000000000 90.6930405352 1.6941396707 50.9642745775 0.2971910693
-1.0000000000 -1.0000000000 90.6930405352 1.6941396707 26.7614591049 56.2851142557
-1.0000000000 -1.0000000000 57.8566282374 -1.0000000000 62.7410937451 1.2007469869
-1.0000000000 -1.0000000000 25.8970484725 0.2750543041 -1.0000000000 0.5556185319
-1.0000000000 -1.0000000000 79.8112461623 -1.0000000000 -1.0000000000 2.2657146224
-1.0000000000 0.7418521021 -1.0000000000 0.1811509764 69.8417637311 2.2185895751
-1.0000000000 56.2929895344 -1.0000000000 0.1811509764 69.8417637311 2.2185895751
-1.0000000000 0.7418521021 -1.0000000000 70.6652712529 69.8417637311 2.2185895751
-1.0000000000 0.7418521021 -1.0000000000 0.1811509764 69.8417637311 23.0194017072
-1.0000000000 0.5184627763 -1.0000000000 -1.0000000000 8.0342667416 0.0606211016
-1.0000000000 0.6626028260 -1.0000000000 0.3088986795 -1.0000000000 2.1700911480
-1.0000000000 0.5995401259 -1.0000000000 -1.0000000000 -1.0000000000 0.8022763212
-1.0000000000 -1.0000000000 -1.0000000000 1.2651811842 85.9899770963 1.2456552390
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 32.2502146641 0.3830945018
-1.0000000000 -1.0000000000 -1.0000000000 1.0731327124 -1.0000000000 0.4398413922
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 1.3984547299
-1.0000000000 1.5021901697 74.3427828460 1.1305931978 40.0315787359 -1.0000000000
-1.0000000000 79.1475045790 74.3427828460 1.1305931978 40.0315787359 -1.0000000000
-1.0000000000 1.5021901697 98.7635515345 1.1305931978 40.0315787359 -1.0000000000
-1.0000000000 1.5021901697 74.3427828460 58.8917226242 40.0315787359 -1.0000000000
-1.0000000000 1.5021901697 74.3427828460 1.1305931978 66.8960493362 -1.0000000000
-1.0000000000 2.4884953189 39.4700386273 -1.0000000000 22.3599154102 -1.0000000000
-1.0000000000 1.4292240896 43.5737185214 0.6900646273 -1.0000000000 -1.0000000000
-1.0000000000 0.5324049273 62.3442838272 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 63.1864830164 0.7995919705 87.0556460617 -1.0000000000
-1.0000000000 -1.0000000000 20.8340311034 -1.0000000000 54.4176451493 -1.0000000000
-1.0000000000 -1.0000000000 41.4286557836 0.6454875658 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 62.9309138073 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 0.9361840149 -1.0000000000 0.9443340596 55.2933331100 -1.0000000000
-1.0000000000 0.4550501386 -1.0000000000 -1.0000000000 76.2983230973 -1.0000000000
-1.0000000000 1.2459388896 -1.0000000000 1.6966162933 -1.0000000000 -1.0000000000
-1.0000000000 1.3207606422 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 1.3613745615 40.1874725577 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 49.8529931679 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 1.4678028661 -1.0000000000 -1.0000000000
-1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000 -1.0000000000
]]></test_input>
<test_output><![CDATA[74.1264710932 0.8722244534 96.5584434174 1.6416024640 56.8548992144 0.6277657362
Invalid input.
Invalid input.
Invalid input.
14.0742566962 1.2837057630 6.3094720163 0.4444381738 14.4935854125 1.4134487169
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
67.7065304923 0.8941581594 85.7465546582 1.4120368298 64.3963410651 0.8353976643
Invalid input.
Invalid input.
Invalid input.
50.4689702615 0.5583845782 89.9571435912 1.9059534143 59.6936129228 0.6772546611
Invalid input.
Invalid input.
Invalid input.
Invalid input.
85.8685596809 1.2443855283 87.5251891681 1.3072540221 50.4334972792 0.5899531031
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
72.7732095796 1.2424568203 75.2191238900 1.7790487444 9.2101479760 0.1200870889
Invalid input.
Invalid input.
Invalid input.
Invalid input.
59.5465265975 0.5928487065 99.2546516970 1.9436057250 60.6282569215 0.6051382220
Invalid input.
Invalid input.
Invalid input.
Invalid input.
39.7215203846 0.6036679500 64.4275655602 1.1699820680 68.5386462884 1.3679426356
56.5624996306 0.9415108143 62.2609919627 1.0971189564 62.4464368701 1.1029628828
Invalid input.
Invalid input.
Invalid input.
44.0583578911 0.5630614329 81.8661329309 1.6987292734 63.6068919466 0.8798019472
Invalid input.
Invalid input.
Invalid input.
Invalid input.
43.7534003324 0.4412010035 63.3893354052 0.6670476447 91.6940679501 2.0333440054
Invalid input.
Invalid input.
Invalid input.
10.8905165549 0.0835420637 52.4659767354 0.4137032353 62.2547710002 2.6443473546
73.5537055341 1.0731457372 83.2529188879 1.4666126166 47.3910570824 0.6018342998
Invalid input.
Invalid input.
Invalid input.
Invalid input.
5.2623939430 0.2092206931 19.8927117222 0.9029078833 22.7180687046 2.0294640772
37.2413279586 0.3979309844 95.5489521852 1.4632959164 92.0789610545 1.2803657528
Invalid input.
54.7022038223 0.6445009635 83.8869558942 1.1715096280 88.3253034193 1.3255820621
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
87.9235110872 2.4019524828 23.5348310835 0.1814115625 69.0952444979 0.5582286083
Invalid input.
Invalid input.
Invalid input.
Invalid input.
90.5058510610 1.3476763878 63.9334789296 0.7599582912 79.7512722198 1.0339579746
Invalid input.
Invalid input.
Invalid input.
Invalid input.
84.0729473351 1.7327594350 75.5063637249 1.0894048416 26.7510158269 0.3194283770
28.2657551544 0.4279767601 22.4363575379 0.3357070756 47.1006554006 2.3779088179
Invalid input.
Invalid input.
Invalid input.
Invalid input.
14.1453615541 0.1684438793 71.4392305072 1.0097254590 77.9547903381 1.9634233152
More than one solution.
Invalid input.
87.4214268878 1.2249934418 91.6176794699 1.7385492194 16.4574971814 0.1780499923
Invalid input.
Invalid input.
Invalid input.
Invalid input.
54.3233387917 0.7667796321 74.9875004458 1.8625423532 38.3774097669 0.5122706683
61.4100633268 0.8203612871 83.3720309530 1.6895359994 49.5814526645 0.6316953671
Invalid input.
75.5202364351 1.2132428177 50.3243443611 0.6741392134 76.6124653611 1.2542106225
Invalid input.
Invalid input.
Invalid input.
56.7738459203 2.0856640207 44.2965684231 0.7465058296 19.8632561029 0.3094228032
Invalid input.
Invalid input.
Invalid input.
35.2270938527 0.9749671617 41.5637473391 1.3538869410 30.9066865311 0.8127385509
Invalid input.
Invalid input.
Invalid input.
Invalid input.
54.1064513533 0.9448389472 64.3961340195 1.3036219267 52.0124719826 0.8931317797
Invalid input.
Invalid input.
Invalid input.
97.6001720198 1.8976462841 53.1876557069 0.5422957997 66.5205910121 0.7016505698
58.5845038625 0.6298600497 56.2469797636 0.6010748764 93.7700375164 1.9106577274
Invalid input.
Invalid input.
Invalid input.
Invalid input.
92.8065810160 1.5789335362 64.0399504063 0.7615082469 66.6519427999 0.8011508705
30.4409106682 0.9468467605 31.3170776374 0.9880174654 35.0498892316 1.2067284277
Invalid input.
91.0356786318 1.8877091912 45.5710254583 0.4957098096 65.8763224304 0.7581736528
Invalid input.
Invalid input.
Invalid input.
53.6458118616 0.5243093256 93.9618239069 2.0723458556 55.5478326298 0.5449374724
Invalid input.
Invalid input.
86.0832502747 1.0803834950 96.3173264228 1.7321405303 31.5356554363 0.3290686282
Invalid input.
Invalid input.
Invalid input.
93.7858570890 1.3058637622 94.5690163229 1.3386260043 46.3415495059 0.4971028870
Invalid input.
Invalid input.
Invalid input.
Invalid input.
70.9891512748 1.3899717399 66.2570382981 1.1633175899 40.0484169582 0.5883033239
53.0609070757 0.4409432418 51.4134685338 0.4263404227 94.8069166125 2.2743089891
Invalid input.
58.5092953468 0.7192964423 83.5823308379 1.9154412513 43.1083377496 0.5068549599
Invalid input.
Invalid input.
Invalid input.
9.9065565748 0.1914997154 51.1903169168 1.3889015204 52.0465837539 1.5611914177
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
47.3901590463 0.8388116964 37.9898820696 0.6388841096 63.4334348237 1.6638968476
Invalid input.
Invalid input.
Invalid input.
19.4580584614 0.1995060317 97.0858742695 1.4212842522 98.0585246956 1.5208023697
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
19.7124374607 0.3563049619 30.5735930246 2.5699634547 12.0747620422 0.2153242371
Invalid input.
Invalid input.
Invalid input.
46.0908397689 0.8188008992 57.0023001598 1.1272223232 58.7189455946 1.1955694312
Invalid input.
Invalid input.
Invalid input.
Invalid input.
66.3541178378 0.8459123062 83.1878526285 1.9233711425 32.2444941317 0.3723092050
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
79.5092559784 2.6109786877 55.5673585337 0.3614991089 26.4437341039 0.1691148571
Invalid input.
Invalid input.
Invalid input.
Invalid input.
29.5450695196 0.3096238120 79.5196656336 2.1800211475 58.8317356424 0.6519476941
Invalid input.
Invalid input.
Invalid input.
Invalid input.
45.3637589830 1.5763215083 11.8835144547 0.2650489757 43.7139834239 1.3002221696
51.6228430001 0.4208385081 76.9621081760 2.4867273392 29.3032872406 0.2340268063
Invalid input.
Invalid input.
Invalid input.
48.9090425466 0.4933317839 62.4732656269 0.6496389473 93.9703303814 1.9986219224
Invalid input.
Invalid input.
Invalid input.
Invalid input.
85.1695890436 1.0729854042 82.9525137255 1.0270143004 83.6748156036 1.0415929489
Invalid input.
Invalid input.
Invalid input.
30.6847657320 0.3820499593 26.6324812171 0.3295187342 53.7462105583 2.4300239601
45.3056079364 0.7727133238 62.7612342662 1.8282500959 33.4025763328 0.5406292338
Invalid input.
Invalid input.
Invalid input.
Invalid input.
More than one solution.
47.5165434151 0.7603111763 40.6933072357 0.6312910643 67.8457493625 1.7499904130
Invalid input.
69.7466774364 0.9050020404 5.7873600858 0.0653015933 73.1727795472 2.1712890199
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
84.2287944947 1.3031675546 77.0553807024 1.0806557695 60.0276352941 0.7577693295
Invalid input.
Invalid input.
Invalid input.
Invalid input.
68.2945947035 0.7063363366 22.4118224893 0.2146394161 83.7771356428 2.2206169008
Invalid input.
Invalid input.
Invalid input.
Invalid input.
More than one solution.
77.5994305300 1.4025986057 71.4200716600 1.1370088264 44.5719889601 0.6019852214
Invalid input.
Invalid input.
Invalid input.
Invalid input.
35.3940406334 0.9372365519 43.6923510192 1.6720485689 22.2890270049 0.5323075328
More than one solution.
Invalid input.
52.4916016842 0.8837349032 45.7481765251 0.7393311830 67.8036688952 1.5185265674
Invalid input.
Invalid input.
Invalid input.
Invalid input.
97.4212088612 2.1798760908 33.6207519620 0.2869707644 74.2023686433 0.6747457984
89.8281330119 1.4083702944 48.6455895833 0.5638129434 83.7914691995 1.1694094157
Invalid input.
79.7389006138 1.0519436425 35.0111949804 0.3911869735 91.0766922040 1.6984620375
Invalid input.
Invalid input.
Invalid input.
92.0358671533 1.5064923484 42.3936458934 0.4776223570 84.4603682032 1.1574779482
Invalid input.
Invalid input.
Invalid input.
24.6044363377 0.3641075458 25.5990865046 0.3795598562 46.7741448838 2.3979252517
Invalid input.
Invalid input.
Invalid input.
Invalid input.
60.3514861638 0.7153623927 83.3779489378 1.1340652763 88.4657596271 1.2921649845
Invalid input.
Invalid input.
Invalid input.
18.3792162518 0.2677182471 18.8354502257 0.2745337979 35.8554206649 2.5993406085
88.7145206389 1.0301233749 85.5540234437 0.9734277155 93.9349190564 1.1380415631
Invalid input.
Invalid input.
Invalid input.
Invalid input.
50.7632866241 0.7194868610 35.7092291157 0.4820200988 71.8378135852 1.9400856938
96.5485568248 1.6790932423 1.9219214591 0.0197909415 96.3219177508 1.4427084698
Invalid input.
77.9157807219 1.2630235539 38.2115769160 0.4863213797 80.4577736186 1.3922477200
Invalid input.
Invalid input.
Invalid input.
34.0063372676 0.3742041454 85.4001035875 1.1629068422 92.9797067541 1.6044816660
Invalid input.
Invalid input.
87.9095916218 1.1268007594 78.5769764727 0.9393493957 85.6470241004 1.0754424985
Invalid input.
Invalid input.
Invalid input.
93.3322880710 1.8006681076 66.7832109497 0.7708155730 51.7345003043 0.5701089730
Invalid input.
Invalid input.
Invalid input.
Invalid input.
83.0058925703 1.1410231852 86.8272117538 1.2561647338 61.8653398427 0.7444047346
73.8196070007 1.1810861686 74.5109522485 1.2045616411 54.7432012816 0.7559448439
Invalid input.
2.4049413463 0.1706981982 11.7539184103 2.1620807961 10.2425103475 0.8088136593
Invalid input.
Invalid input.
Invalid input.
89.6405795546 1.1383133747 64.4765157890 0.7116084853 94.9097372681 1.2916707935
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
26.8760001461 0.3504758256 69.5659859170 1.0945355663 77.6585825302 1.6965812618
Invalid input.
Invalid input.
Invalid input.
69.2142089393 0.9164885547 81.8230671573 1.2168636648 73.7872572131 1.0082404340
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
22.8208521982 0.4646805356 4.9176733752 0.0967199765 27.1104204295 2.5801921415
Invalid input.
Invalid input.
Invalid input.
89.0269679784 2.3739695353 77.3280398856 0.6474733777 15.3664122688 0.1201497406
Invalid input.
Invalid input.
Invalid input.
Invalid input.
46.4730964176 0.4819159082 81.7683078219 0.9535546456 99.3536695305 1.7061220998
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
76.5142995535 0.8890705411 46.0474327379 0.4862354273 96.6622162222 1.7662866852
Invalid input.
Invalid input.
Invalid input.
Invalid input.
34.9973372654 1.6735457282 28.0668003091 0.9235378594 18.2246766558 0.5445090660
Invalid input.
Invalid input.
Invalid input.
Invalid input.
50.1583336167 1.8867486841 45.8269734594 1.0520099713 10.6303924348 0.2028339982
69.2340385660 1.7535418270 63.3294513408 1.1185874531 18.7431880597 0.2694633735
Invalid input.
Invalid input.
Invalid input.
66.3364369966 0.7387458919 95.5493406635 1.8168029133 54.4858342308 0.5860438483
Invalid input.
Invalid input.
Invalid input.
Invalid input.
38.2263083580 0.8397149923 50.1152077691 1.3512106120 41.7873299985 0.9506670494
Invalid input.
Invalid input.
Invalid input.
50.8022547939 0.8805177450 57.5532785189 1.0624172055 61.3757727307 1.1986577030
53.9615956817 1.1226030099 59.7114680252 1.4967808616 29.8655951785 0.5222087820
Invalid input.
Invalid input.
Invalid input.
Invalid input.
More than one solution.
34.4667072181 0.3804677037 73.6546554210 2.2249262859 47.4157647157 0.5361986640
Invalid input.
42.1678246636 0.2832438590 71.2939252587 2.6494582951 31.2895265027 0.2088904995
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
90.4101669139 1.6415483175 32.8442615910 0.3708113292 81.9434592171 1.1292330069
Invalid input.
Invalid input.
Invalid input.
Invalid input.
6.6743381347 0.2858632235 23.3024725947 1.3945676904 23.5269562705 1.4611617397
Invalid input.
Invalid input.
Invalid input.
Invalid input.
74.4721865605 1.8271482120 49.0185112023 0.6902148537 44.9973831917 0.6242295879
20.2647185403 0.6026615634 29.3261556789 0.9619358759 35.7498252436 1.5769952143
Invalid input.
Invalid input.
Invalid input.
Invalid input.
59.1743548320 0.9066405304 69.9563742531 1.1969088756 64.7333988019 1.0380432476
5.7262873019 0.0433646413 75.1857398054 0.6055278837 79.8232211869 2.4927001286
Invalid input.
19.9262460382 0.1981721825 85.6861946590 1.0095768674 94.6142772647 1.9338436037
Invalid input.
Invalid input.
Invalid input.
Invalid input.
More than one solution.
99.6802702048 2.7054390926 65.4221845259 0.2809480073 36.4745311983 0.1552055537
Invalid input.
61.6082857354 0.9461474642 53.8663891459 0.7884116973 74.9338949964 1.4070334920
Invalid input.
Invalid input.
Invalid input.
65.0604820239 0.7063610009 99.8610039157 1.4842120002 81.5933309672 0.9510196524
Invalid input.
Invalid input.
Invalid input.
68.1948508597 0.8512131191 80.3997393669 1.0901168586 84.5212128923 1.2002626758
Invalid input.
Invalid input.
Invalid input.
Invalid input.
44.6162555612 0.5208819925 77.9170075348 1.0533367983 89.6541962286 1.5673738629
Invalid input.
Invalid input.
Invalid input.
77.6077783906 1.0457433775 89.5736615266 1.5200459627 48.8365205949 0.5758033134
83.5180587657 1.8123766791 50.6495346476 0.6296222159 55.3862104521 0.6995937586
Invalid input.
Invalid input.
Invalid input.
Invalid input.
More than one solution.
8.6944960000 0.1515360027 54.3040268257 1.9105270071 50.7844284713 1.0795296438
Invalid input.
85.7847233320 2.0662168973 37.4949578494 0.3946998363 61.3637433135 0.6806759200
Invalid input.
Invalid input.
Invalid input.
50.9896963926 0.6216417971 44.6602569054 0.5352777124 80.1629836495 1.9846731441
Invalid input.
Invalid input.
76.5977381102 0.8639014920 95.0430429967 1.9085905417 36.3431469054 0.3691006199
Invalid input.
Invalid input.
Invalid input.
49.8342440344 0.5781518793 86.1046441531 1.9063912831 55.6984426430 0.6570494912
Invalid input.
Invalid input.
Invalid input.
Invalid input.
69.4004156219 0.7390173037 90.0640729340 2.0779883014 32.8596406212 0.3245870485
15.2687037685 0.0424783724 90.5021408180 2.8871498271 75.6433936672 0.2119644541
Invalid input.
More than one solution.
Invalid input.
Invalid input.
Invalid input.
82.1131015030 1.2247223575 87.1276579900 1.6314699182 24.5752855589 0.2854003779
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
86.8388281042 1.7461479118 22.0604780441 0.2528286788 80.2295644251 1.1426160631
Invalid input.
Invalid input.
Invalid input.
55.1020097083 0.5671513988 24.8838637620 0.2450571971 74.4436672570 2.3293840576
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
53.1110111905 2.5792046184 26.5980161736 0.2703105918 28.6809428647 0.2920774434
Invalid input.
Invalid input.
Invalid input.
21.1599616502 0.1643230627 45.5373128762 2.7818404981 25.1185064589 0.1954290927
Invalid input.
Invalid input.
Invalid input.
Invalid input.
76.9872041013 1.0621001180 88.1205493400 1.5455894813 44.8585393879 0.5339030543
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
53.1312526731 0.4267918266 85.2833951333 2.4148295521 37.9268131533 0.2999712749
Invalid input.
Invalid input.
Invalid input.
Invalid input.
31.5518008985 0.4464659761 69.0144946472 1.2359193027 72.6191959335 1.4592073747
Invalid input.
Invalid input.
Invalid input.
Invalid input.
90.6538105546 1.1364531183 93.1040107006 1.1989692043 72.1157236993 0.8061703310
80.1565952250 2.1725477584 45.5517101393 0.4875494841 45.0307913990 0.4814954111
Invalid input.
Invalid input.
Invalid input.
95.8170661437 2.5990288347 59.2519097718 0.3249835200 40.0590090707 0.2175802989
Invalid input.
Invalid input.
Invalid input.
Invalid input.
52.4544897536 0.8780694343 63.8901425903 1.2147102095 59.0887514700 1.0488130098
Invalid input.
Invalid input.
Invalid input.
82.6142347640 1.6433040495 65.2549356056 0.9072286103 46.1573602842 0.5910599937
64.2492850096 1.7535454359 32.2357766066 0.5159654356 50.0267845628 0.8720817820
Invalid input.
Invalid input.
Invalid input.
Invalid input.
More than one solution.
99.1926505141 1.2778023657 93.9338548623 1.1352195448 68.9826571182 0.7285707431
Invalid input.
65.9134012039 0.8932631940 75.2285307290 1.0956589337 77.3115162833 1.1526705259
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
82.7817428871 1.1740293335 88.2002188837 1.3844368780 49.4219794585 0.5831264421
Invalid input.
Invalid input.
Invalid input.
Invalid input.
56.0789279943 2.0454726650 20.2053042637 0.3262219599 43.8864698632 0.7698980287
Invalid input.
Invalid input.
Invalid input.
Invalid input.
94.1902033565 2.0145562372 16.0582341034 0.1545895433 86.1725538208 0.9724468731
32.0092124154 0.3855446684 79.4391976183 1.9380958929 62.1134693792 0.8179520923
Invalid input.
Invalid input.
Invalid input.
Invalid input.
93.0555965738 1.6309119469 58.9848504143 0.6850629411 68.5165452136 0.8256177656
50.6382312407 0.5659986118 94.2800094750 1.6269200105 76.7368603033 0.9486740313
Invalid input.
64.8551573816 0.8833407401 83.8036552747 1.5191721746 56.5261219995 0.7390797389
Invalid input.
Invalid input.
Invalid input.
Invalid input.
39.6902099232 0.8698074470 51.8519596366 1.6279007300 31.1778965811 0.6438844766
27.4746146508 0.1771819675 39.6782826784 0.2573780795 65.6267113486 2.7070326066
Invalid input.
56.0234587615 2.2624282620 25.4969029124 0.3581363727 36.2070697642 0.5210280189
Invalid input.
Invalid input.
Invalid input.
95.2428584366 1.2315071206 96.8047610484 1.2815381340 59.3854589630 0.6285473990
Invalid input.
Invalid input.
Invalid input.
99.9610778403 1.9625587157 63.2201091664 0.6243025468 56.9669520754 0.5547313911
Invalid input.
Invalid input.
Invalid input.
Invalid input.
82.9815091502 1.4753045991 78.4956595982 1.2274457106 35.4195286695 0.4388423440
Invalid input.
Invalid input.
Invalid input.
14.8751172617 0.2534619737 32.2611149700 0.5750070731 43.7134026157 2.3131236068
52.5745470756 0.9577719614 62.2293972443 1.3175890907 48.9737558133 0.8662316014
Invalid input.
Invalid input.
Invalid input.
Invalid input.
45.5298515026 1.7229771495 21.8239479069 0.4935929224 36.7868555026 0.9250225817
91.4774516363 1.0676694703 80.5833343685 0.8815825910 97.0279550432 1.1923405923
Invalid input.
74.9969775108 2.4672711077 7.1942366420 0.0599295812 69.2427005809 0.6143919647
Invalid input.
Invalid input.
Invalid input.
66.5795835601 1.4931281145 40.3876479757 0.6494875638 56.1572520672 0.9989769753
Invalid input.
Invalid input.
64.0360770787 0.6933531248 57.6137960145 0.6126302353 96.7015649537 1.8356092935
Invalid input.
Invalid input.
Invalid input.
61.8547629117 1.4358293902 20.2581238152 0.3305176251 61.2327254253 1.3752456382
Invalid input.
Invalid input.
Invalid input.
Invalid input.
53.8729802386 2.7567754811 32.9228495238 0.2314695231 21.9211000011 0.1533476494
53.4603021302 1.0557569688 49.6897566302 0.9422670695 55.9079292474 1.1435686153
Invalid input.
More than one solution.
Invalid input.
Invalid input.
Invalid input.
34.6593266343 0.5280551671 68.6182212971 1.5004444092 61.7079776081 1.1130930773
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
34.6675801462 0.4876553345 39.1023260271 2.5847665646 5.1137362874 0.0691707545
Invalid input.
Invalid input.
Invalid input.
47.1921210509 0.6236062930 77.3934181572 1.8627463211 49.2434095283 0.6552400394
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
56.2938726684 0.7482687607 68.3782943259 0.9727266727 81.8084195394 1.4205972202
Invalid input.
Invalid input.
Invalid input.
54.5615973829 0.7116520174 81.1293864756 1.3297723100 74.4616851644 1.1001683263
Invalid input.
Invalid input.
Invalid input.
Invalid input.
85.5623837847 0.7021187143 93.8445532721 2.3544323777 11.2529856753 0.0850415616
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
77.9183625056 1.0606267544 24.3894892420 0.2766710150 86.8651376169 1.8042948842
Invalid input.
Invalid input.
Invalid input.
Invalid input.
94.8873512843 1.8135630980 83.9537361712 1.0329776330 28.4257893303 0.2950519227
Invalid input.
Invalid input.
Invalid input.
Invalid input.
87.0231349591 1.5902840263 52.0888275852 0.6415641797 68.7044847276 0.9097444476
88.4147656724 1.7932470952 13.2344757406 0.1465216520 84.5475931899 1.2018239063
Invalid input.
Invalid input.
Invalid input.
77.3460293860 1.0753369844 81.8845961308 1.1981662660 67.0899484677 0.8680894032
Invalid input.
Invalid input.
Invalid input.
Invalid input.
78.8570651764 2.0397534413 15.6092828646 0.1775046532 70.5633005741 0.9243345591
Invalid input.
Invalid input.
Invalid input.
59.5220271275 0.7876463792 12.0788625332 0.1443165369 67.4250836511 2.2096297375
15.7297778418 0.1733368901 85.5936170348 1.2182509676 89.7422736137 1.7500047959
Invalid input.
Invalid input.
Invalid input.
Invalid input.
More than one solution.
76.9603811191 0.9860064217 84.3905370066 1.9877418194 15.4190111765 0.1678444124
Invalid input.
70.7339387840 0.7867496112 60.1287203242 0.6458798122 98.9459649881 1.7089632302
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
53.9985211502 1.5018816762 21.7432925912 0.4133820590 50.9473341830 1.2263289184
Invalid input.
Invalid input.
Invalid input.
Invalid input.
34.5213930677 0.3750900945 94.2279611988 1.5661038068 87.8387180254 1.2003987522
Invalid input.
Invalid input.
Invalid input.
Invalid input.
51.6056325055 0.4462130636 49.7427553790 0.4290137843 91.8012801529 2.2663658056
85.0919442257 1.6561861928 26.3950332054 0.3142087677 78.6748159249 1.1711976931
Invalid input.
Invalid input.
Invalid input.
Invalid input.
65.1367486798 0.7264698969 91.4447060123 1.9402866583 44.8336018902 0.4748360984
More than one solution.
Invalid input.
99.6388482227 1.7938970836 69.5926756188 0.7493170713 57.5533032005 0.5983784987
Invalid input.
Invalid input.
Invalid input.
Invalid input.
74.3078683188 1.5001620070 25.0344906331 0.3427327927 71.7529316697 1.2986978539
89.0810920199 2.1937621279 27.9919136782 0.2580566836 69.7996345526 0.6897738420
Invalid input.
33.4019079749 0.5024838320 69.1186042388 1.4881085769 63.3335698075 1.1510002447
Invalid input.
Invalid input.
Invalid input.
43.1629104366 0.6095960502 72.8859843528 1.8291992104 48.7280027845 0.7027973930
Invalid input.
Invalid input.
Invalid input.
74.8550205713 0.5612992276 28.6668670207 0.2052860476 97.5516135292 2.3750073784
Invalid input.
Invalid input.
Invalid input.
Invalid input.
49.3659036183 1.1818676983 41.9412443595 0.9045511622 46.4140343887 1.0551737931
Invalid input.
Invalid input.
Invalid input.
58.9286869313 0.7851439453 75.0406326613 2.0213389438 27.4144913151 0.3351097645
93.0528873773 2.3963788631 49.7409120860 0.3709383497 50.1674061836 0.3742754408
Invalid input.
Invalid input.
Invalid input.
Invalid input.
90.7066066353 1.6222944343 32.7556694325 0.3689517742 82.9164766067 1.1503464451
41.3275318218 1.0416944769 46.9897886513 1.3783303794 31.6236071783 0.7215677973
Invalid input.
19.7513673509 0.1321598141 62.6394491422 2.7104464991 44.1493403418 0.2989863404
Invalid input.
Invalid input.
Invalid input.
18.2793311178 0.8471237477 23.8711550796 1.3636475477 19.5655959950 0.9308213582
Invalid input.
Invalid input.
80.9309076583 1.0825140830 87.2710057584 1.2607677245 65.6305400631 0.7983108460
Invalid input.
Invalid input.
Invalid input.
92.9625699315 2.1309754203 56.0487490657 0.5360772485 50.1408526495 0.4745399848
Invalid input.
Invalid input.
Invalid input.
Invalid input.
41.9707110622 0.6239063922 45.3096603682 0.6824374539 69.3442901392 1.8352488075
72.6547869215 1.1983226855 64.5564326139 0.9748355152 64.2748498845 0.9684344528
Invalid input.
More than one solution.
Invalid input.
Invalid input.
Invalid input.
45.3207007536 0.4158676697 87.9402883973 2.2406860106 52.3051970835 0.4850389733
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
20.2162758202 0.5747401557 14.4831609483 0.4000375790 30.7763306674 2.1668149190
Invalid input.
Invalid input.
Invalid input.
4.9082532175 0.1024485754 9.3486833069 0.1960446173 14.1138999299 2.8430994609
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
61.2246073360 0.6674222376 43.8216558213 0.4589695284 89.3068387394 2.0152008876
Invalid input.
Invalid input.
Invalid input.
30.9577058193 0.2503943066 39.3743946226 0.3206181862 67.5266211453 2.5705801608
Invalid input.
Invalid input.
Invalid input.
Invalid input.
30.4084678357 0.3759143353 82.6839859551 1.5116014143 78.7093320080 1.2540769040
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
99.2818149121 3.0218850256 35.6661794550 0.0429145230 63.7794696610 0.0767931049
Invalid input.
Invalid input.
Invalid input.
Invalid input.
58.4399138202 0.9306344980 26.2035447632 0.3678433344 70.1826178635 1.8431148212
Invalid input.
Invalid input.
Invalid input.
Invalid input.
51.8818232932 0.5818458107 88.2551998873 1.9337335677 55.3136070047 0.6260132752
40.2214137934 0.8727455417 51.0135033819 1.3321259183 42.2964677205 0.9367211936
Invalid input.
Invalid input.
Invalid input.
9.1565271588 0.1016281617 86.9389702989 1.2989404061 88.9490989774 1.7410240858
Invalid input.
Invalid input.
Invalid input.
Invalid input.
85.2614976580 1.5537849839 56.9746899757 0.7317034012 64.4069101725 0.8561042685
Invalid input.
Invalid input.
Invalid input.
98.4546546133 1.6422256162 56.7233476458 0.6121979719 76.5257349369 0.8871690655
46.1589372027 0.9225657075 52.9915809662 1.9857092781 13.3879500249 0.2333176680
Invalid input.
Invalid input.
Invalid input.
Invalid input.
51.2076043434 0.8850671540 25.1174402157 0.3893939748 63.2794726829 1.8671315247
56.0367290555 0.6080522939 84.0487193622 1.0291089687 97.8755731841 1.5044313910
Invalid input.
79.1968061241 2.0015990186 42.3756666382 0.5077120445 51.5107631291 0.6322815905
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
96.9892997237 1.5338781722 57.6103708666 0.6355026787 80.1807956290 0.9722118026
Invalid input.
Invalid input.
Invalid input.
Invalid input.
63.3795235093 0.5711423934 93.3823717886 2.2201054017 40.2395349908 0.3503448585
Invalid input.
Invalid input.
Invalid input.
Invalid input.
More than one solution.
39.1862444305 0.9515595745 39.1720002862 0.9510497676 45.4964717024 1.2389833114
Invalid input.
Invalid input.
Invalid input.
Invalid input.
65.6111128854 0.7659335741 73.7635104839 0.8936179113 94.2756773499 1.4820411682
More than one solution.
Invalid input.
84.1039999906 1.9428092301 38.9107562754 0.4456052006 61.7475186695 0.7531782229
Invalid input.
Invalid input.
Invalid input.
Invalid input.
61.2667299948 1.2578349594 61.6824702925 1.2795339660 36.5841000704 0.6042237282
97.5515747838 1.7830369237 58.2631922125 0.6234673825 66.9249288973 0.7350883474
Invalid input.
89.2121783645 1.0509669562 97.2978947847 1.2424165952 77.1027815815 0.8482091022
Invalid input.
Invalid input.
Invalid input.
64.2750610282 0.6751142201 96.1985679093 1.9322078666 52.3686877284 0.5342705669
Invalid input.
Invalid input.
Invalid input.
45.4503259502 1.5096502613 40.3043898271 1.0867553541 23.6136703024 0.5451870382
Invalid input.
Invalid input.
Invalid input.
Invalid input.
72.3024027776 0.9249600142 22.9126109536 0.2558574795 83.7390505138 1.9607751599
Invalid input.
Invalid input.
Invalid input.
56.4901553861 0.8657536926 74.1700674737 1.5818073212 47.4451209568 0.6940316398
83.4248283376 1.1502619136 90.6930405352 1.6941396707 26.7614591049 0.2971910693
Invalid input.
Invalid input.
Invalid input.
Invalid input.
52.9696444661 0.9061084928 57.8566282374 1.0347371739 62.7410937451 1.2007469869
70.4052128881 2.3109198175 25.8970484725 0.2750543041 50.2942843697 0.5556185319
Invalid input.
59.1771671322 0.7418521021 15.7794663751 0.1811509764 69.8417637311 2.2185895751
Invalid input.
Invalid input.
Invalid input.
65.7161342044 0.5184627763 72.5738397116 2.5625087757 8.0342667416 0.0606211016
Invalid input.
Invalid input.
53.5170653284 0.6307562304 86.5395603423 1.2651811842 85.9899770963 1.2456552390
Invalid input.
Invalid input.
Invalid input.
81.9838092746 1.5021901697 74.3427828460 1.1305931978 40.0315787359 0.5088092860
Invalid input.
Invalid input.
Invalid input.
Invalid input.
58.8191867018 2.4884953189 39.4700386273 0.4199962879 22.3599154102 0.2331010468
67.7641520497 1.4292240896 43.5737185214 0.6900646273 58.4082872487 1.0223039366
Invalid input.
More than one solution.
Invalid input.
Invalid input.
Invalid input.
46.7523612231 0.9361840149 47.0313236097 0.9443340596 55.2933331100 1.2610745791
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
Invalid input.
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[www.csie.nctu.edu.tw]]></source>
</item>
<item>
<title><![CDATA[Spreadsheet]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<img><src><![CDATA[http://192.168.2.104/v1-htm01/196img1.gif]]></src><base64><![CDATA[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]]></base64></img><description><![CDATA[<p>In 1979, Dan Bricklin and Bob Frankston wrote VisiCalc, the first spreadsheet application. It became a huge success and, at that time, was the killer application for the Apple II computers. Today, spreadsheets are found on most desktop computers.</p>
<p></p>
<p>The idea behind spreadsheets is very simple, though powerful. A spreadsheet consists of a table where each cell contains either a number or a formula. A formula can compute an expression that depends on the values of other cells. Text and graphics can be added for presentation purposes.</p>
<p></p>
<p>You are to write a very simple spreadsheet application. Your program should accept several spreadsheets. Each cell of the spreadsheet contains either a numeric value (integers only) or a formula, which only support sums. After having computed the values of all formulas, your program should output the resulting spreadsheet where all formulas have been replaced by their value.</p>
<p></p>
<a name="28">&nbsp;</a> <img align="BOTTOM" width="298" height="157" src="http://192.168.2.104/v1-htm01/196img1.gif" alt="figure22" /> <br />
<strong>Figure:</strong>
<p>Naming of the top left cells</p>]]></description>
<input><![CDATA[<p>The first line of the input file contains the number of spreadsheets to follow. A spreadsheet starts with a line consisting of two integer numbers, separated by a space, giving the number of columns and rows. The following lines of the spreadsheet each contain a row. A row consists of the cells of that row, separated by a single space.</p>
<p></p>
<p>A cell consists either of a numeric integer value or of a formula. A formula starts with an equal sign (<tt>=</tt>). After that, one or more cell names follow, separated by plus signs (<tt>+</tt>). The value of such a formula is the sum of all values found in the referenced cells. These cells may again contain a formula. There are no spaces within a formula.</p>
<p>You may safely assume that there are no cyclic dependencies between cells. So each spreadsheet can be fully computed.</p>
<p></p>
<p>The name of a cell consists of one to three letters for the column followed by a number between 1 and 999 (including) for the row. The letters for the column form the following series: A, B, C, ..., Z, AA, AB, AC, ..., AZ, BA, ..., BZ, CA, ..., ZZ, AAA, AAB, ..., AAZ, ABA, ..., ABZ, ACA, ..., ZZZ. These letters correspond to the number from 1 to 18278. The top left cell has the name <tt>A1</tt>. See figure 1.</p>]]></input> 
<output><![CDATA[<p>The output of your program should have the same format as the input, except that the number of spreadsheets and the number of columns and rows are not repeated. Furthermore, all formulas should be replaced by their value.</p>]]></output>
<sample_input><![CDATA[1
4 3
10 34 37 =A1+B1+C1
40 17 34 =A2+B2+C2
=A1+A2 =B1+B2 =C1+C2 =D1+D2]]></sample_input>
<sample_output><![CDATA[10 34 37 81
40 17 34 91
50 51 71 172]]></sample_output>
<test_input><![CDATA[10 10
48 39 30 =A1+A2+A3 99 33 39 =A5+A6+A7 =A4+A8 =A9
75 77 39 =B1+B2+B3 33 42 45 =B5+B6+B7 =B4+B8 =B9
34 22 99 =C1+C2+C3 44 23 34 =C5+C6+C7 =C4+C8 =C9
27 45 28 =D1+D2+D3 64 22 34 =D5+D6+D7 =D4+D8 =D9
67 23 84 =E1+E2+E3 99 17 54 =E5+E6+E7 =E4+E8 =E9
94 95 98 =F1+F2+F3 37 95 34 =F5+F6+F7 =F4+F8 =F9
33 49 99 =G1+G2+G3 37 48 34 =G5+G6+G7 =G4+G8 =G9
=A1+A2+A3+A4 =B1+B2+B3+B4 =C1+C2+C3+C4 =D1+D2+D3+D4 =E1+E2+E3+E4 =F1+F2+F3+F4 =G1+G2+G3+G4 =H1+H2+H3+H4 =I1+I2+I3+I4 =J1+J2+J3+J4
=A5+A6+A7 =B5+B6+B7 =C5+C6+C7 =D5+D6+D7 =E5+E6+E7 =F5+F6+F7 =G5+G6+G7 =H5+H6+H7 =I5+I6+I7 =J5+J6+J7
=A8+A9 =B8+B9 =C8+C9 =D8+D9 =E8+E9 =F8+F9 =G8+G9 =H8+H9 =I8+I9 =J8+J9
]]></test_input>
<test_output><![CDATA[39 30 138 99 33 39 167 241 281 75
77 39 168 33 42 45 281 26573 18014 34
22 99 -30181 44 23 34 20499 416 173 27
45 28 176 64 22 34 173 184 160 67
23 84 98 99 17 54 160 174 122 94
95 98 118 37 95 34 122 20560 1735 33
49 99 7104 37 48 34 3839 -15779 -18352 183
196 -248 240 120 152 20628 0 20716 203 167
281 -16 173 160 122 11 -14709 3177 310 477
20618 413 280 274 18101 -26032 2 513 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
644 644 644 644 644 644 644 644 644 644
-31095 -618 -31760 -29858 5712 -15353 -3723 29888 -2888 1478
10374 1930 138 -4981 -242 30144 5 -31091 -1863 -24286
-29425 -3514 18059 -30138 20550 -15779 324 32384 -32501 -18352
-18420 30463 -29946 18101 20502 1150 -30465 3701 -6064 18024
32387 18059 -29948 23902 20480 29999 -24344 -6064 -18402 706
-24599 21760 3645 30463 20480 -16333 13173 -31091 18096 1142
-220 3189 12003 706 13545 22252 2795 -6064 1 -30099
-14584 20735 -27901 1142 20734 -32735 12092 -29360 3839 15367
-229 20492 -27858 706 -176 14849 31894 -16373 -6773 -29558
1228 -15712 -27876 1654 11 -4093 31878 440 -29972 8864
16646 4 -27886 -25600 24808 -16374 -6057 8 3560 15040
16646 22844 -2560 -4981 -4093 1161 -30465 22016 -4981 29696
255 13058 -5122 1654 1977 2 884 -226 15488 -31605
-31096 -4981 16360 18076 29703 22358 5636 5306 -32749 -2094
29696 -15712 4843 7916 11842 24260 11 -26032 -6064 29966
-217 13507 -154 -26108 11776 3068 -15779 1396 -6089 29968
-29775 18059 -6141 4 23552 8564 -21268 27782 24287 -19438
-72 20731 1630 7686 20630 -153 2166 -1607 7916 1163
27710 -32000 1118 18074 -32362 24260 23686 27782 -18352 12149
-6140 3839 2242 7916 -18346 2420 18061 29888 -18352 -31553
-27160 1595 22018 20632 1222 18175 1654 -29720 -15779 8876
8447 -28266 -5370 1218 -2 61 20735 27782 30463 7876
-31094 7806 1690 32395 463 -906 20714 -2064 -28251 21643
-31033 32657 1418 11124 -18024 -30210 -29189 29951 -28172 -4601
-216 -24320 18101 -32763 1851 -30170 -6064 18061 2 24174
-217 1663 17978 -5342 17899 30144 -1559 18061 -17432 -32276
-29867 -24125 7403 -8309 42 9980 -1466 -17338 -28251 -29436
-66 20349 1139 18059 92 1662 884 -17338 -6136 22090
3177 -28268 15488 -9611 -26992 30463 18056 885 184 180
3160 3721 -16011 1730 30204 -30209 1909 20668 -28164 -18944
-31304 -27642 -6773 22104 -32508 1150 -32705 20625 8858 30146
5304 6526 -31764 13308 -18346 30463 18058 9721 748 -2234
5608 32145 -29952 24203 1222 -30210 21894 -2064 -19350 -20922
-15779 -25951 -29888 8 -5367 -930 -5376 8390 1 -29312
4332 -26461 24555 7 -23317 -6773 4469 -18352 -6139 -239
-6064 -27634 -930 24203 -906 -32276 -14593 -18352 22092 19033
1606 -29948 -30457 4 -8565 31926 -166 -29418 -14966 22016
-31984 -15471 -5122 7 2255 24203 22662 -16373 -15990 -23609
-4026 -14586 1118 1653 65 13288 -16768 8398 -8701 884
-165 -26975 -159 24260 -32512 24203 -24962 -31935 692 7973
-26032 -24314 -7215 -14604 18061 15391 -31091 -28260 -19456 -5885
5636 16003 991 0 -7960 14335 -6064 -5128 8906 -210
-6656 -28146 1929 -418 18061 -18456 30185 -32768 21760 1182
20492 -14397 18059 29888 -12056 -31091 -710 -12671 17547 1183
20514 1735 995 -30024 29696 -31091 -29955 -15640 18313 1183
20501 -4981 -29700 -16373 24519 1000 -32528 -18402 20480 1183
-19404 3013 -29786 29696 21760 -5122 -2549 18096 18693 -24429
16384 -14616 -29701 -18352 -29946 2164 -20400 1 -26032 -24429
11008 2583 -5903 1093 162 1536 1150 -30444 32640 -1116
10720 2768 429 9730 1978 -29867 7942 2933 -14594 21443
7819 -30220 17059 -15614 16568 10754 -2550 17545 -32317 4301
14605 1397 -32444 -17891 -22528 21118 -5211 18315 22760 20819
-29934 1318 9857 1 -15609 -2045 -5126 32 20665 -29936
-23572 1650 -30170 -104 -29891 7680 -32518 7819 -3241 26
8681 5608 5864 1093 29696 17546 7927 -381 343 -12149
-32000 29188 -15779 -6115 -15522 -18998 260 29698 22294 23386
-16244 -30460 60 1 -9421 244 -11894 -8645 -24 4301
30208 706 -30460 -29426 -29933 1822 -24340 718 -30457 2676
0 9448 -13030 8376 -1311 -1 -29955 542 885 2828
6 -15868 -18485 4103 -32600 -16085 -4375 -29950 -32419 2164
16009 29696 -11811 -12945 9258 29888 11270 -32317 32640 1543
-31094 30000 9856 512 22273 882 46 -30488 18 1540
1676 4 9856 22358 26369 15524 20511 22410 11 -15624
-16757 -16809 -12032 1024 -250 30402 -30120 30603 18 -29685
11525 12916 9856 -5679 -29863 -29942 -29440 -30206 11 1
29440 17801 -30426 22467 24351 -11838 -1533 -29377 7817 1030
-5888 5694 -23935 9789 -6137 21118 11008 21000 7817 -5949
-21114 -3957 -2275 -32481 12001 630 -30208 -14709 5727 -16373
582 -30464 1117 1677 -15525 -798 1814 30719 22097 -24317
-23806 48 1991 -31349 20510 30719 -176 -744 11235 30696
36 -30464 -14593 12348 3032 4072 2423 -30726 582 -16373
9891 1128 -19440 -6015 1734 -3900 46 -3241 -2554 15832
157 3655 9332 1808 -29952 747 -30128 1009 -11136 26
-23808 28904 -32384 7875 20636 -4981 -15222 13800 9790 34
-21106 -6144 -6113 28 3838 18058 18314 21955 622 2164
1505 288 1909 12472 28 18056 -16086 2135 22878 5611
1699 2165 -14843 1808 0 -30200 -14334 11008 19532 1735
-14583 2283 -32509 -30181 20819 -30119 5634 10278 1566 161
-28573 2429 80 15104 7935 2126 -250 -28936 33 -1962
-16333 10216 2 -16069 23133 -16374 582 20266 2686 -7192
-16130 -7158 129 -24947 1735 180 -31035 40 512 29952
4679 763 29184 1419 30 1735 -456 -32750 -29728 -5376
1607 1259 -7422 28420 24159 -32756 46 8263 7822 885
-30260 11752 -7808 29696 29696 1025 30467 11915 11 1542
1095 29188 -32768 1138 26344 -20209 12264 -29871 17476 -15624
23110 7656 -32768 140 542 -10101 -29440 -6057 -14857 -17658
-30464 22358 -5376 21117 1771 18058 20486 -2045 2 5198
176 -15144 -6144 3819 20931 2174 582 544 -9542 -30003
176 -32438 -15616 16389 -6136 -22549 21072 7943 -2255 -498
-15485 -32440 -20256 -31352 -18375 -15864 -5939 33 -12052 8819
-9588 9857 -4866 -32592 948 582 -15616 9930 -1165 6770
-23612 -30426 372 -19272 41 1863 993 19176 -14857 4722
29189 1417 29696 29698 761 -15618 -15611 -7440 1221 12
-6870 -5375 9738 -30464 16000 1623 12478 -27160 -18 -4550
21992 -32512 -5344 517 8710 30603 18315 8319 5611 3
-30170 22022 29952 4096 8710 -7471 -5356 -6142 29384 -30127
10678 180 -18425 2933 -19402 -13670 322 -18285 0 -1418
24260 401 13294 15371 2202 698 -18418 12348 159 9684
18314 -5885 8099 13136 30463 -32674 10292 -30423 20525 -31764
1597 29952 -6679 21033 22153 30463 -16823 -806 512 1085
24260 317 -16333 566 -24575 -5888 10880 24159 4777 -10101
16256 5181 22153 22153 -26032 -4802 30463 -29867 -1 23820
-218 -13847 885 -26109 14079 -248 -23773 -246 47 780
-13158 -15895 -67 -26032 31642 14746 -5650 440 1 20560
-18357 -3863 1 27508 18057 -205 15398 1738 -106 -30211
1118 7401 -30423 -426 -16638 -16637 -26032 22036 17 -962
13887 -5911 24 -5885 -8806 29696 -3607 -9588 0 20480
24516 15616 21230 29955 18057 2166 -25921 29635 0 -5820
-18389 -29947 8099 5749 -25969 -176 9966 -312 9471 -5850
9732 148 -27159 30752 -26032 22461 2537 4865 -52 -18352
-6138 1094 -16333 3054 7935 2166 21620 -433 562 440
4724 1023 22153 -16333 18119 8099 9791 520 1498 -426
9740 20672 885 22153 27155 -864 24516 13613 4777 2238
-14789 -4010 -67 885 -25866 18036 -15313 8241 11064 0
0 0 0 0 0 0 0 8240 0 0
0 0 0 0 0 0 0 11530 0 0
0 0 0 0 0 0 0 12845 0 0
0 0 0 0 0 0 0 14640 0 0
0 0 0 0 0 0 0 11552 0 0
0 0 0 0 0 0 0 12589 0 0
0 0 0 0 0 0 0 8246 0 0
0 0 0 0 0 0 0 14132 0 0
0 0 0 0 0 0 0 3376 0 0
0 0 0 0 0 0 0 13361 0 0
0 0 0 0 0 0 0 14645 0 0
0 0 0 0 0 0 0 11552 0 0
0 0 0 0 0 0 0 8240 0 0
0 0 0 0 0 0 0 8240 0 0
0 0 0 0 0 0 0 6526 0 0
0 0 0 0 0 0 0 512 0 0
0 0 0 0 0 0 0 162 0 0
0 0 0 0 0 0 0 6588 0 0
0 0 0 0 0 0 0 -264 0 0
0 0 0 0 0 0 0 4777 0 0
0 0 0 0 0 0 0 -82 0 0
0 0 0 0 0 0 0 1 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 8757 0 0
0 0 0 0 0 0 0 -164 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 52 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 4777 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[www.csie.nctu.edu.tw]]></source>
</item>
<item>
<title><![CDATA[Peter's Calculator]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<description><![CDATA[<p>Unfortunately, Peter's Calculator broke down last week. Now Peter is left with his computer, which has no calculator application, and paper and pencil, which is too tiresome for an engineer. As one of Peter's friends, you are asked to write him a calculator application. After talking to him, you figure out the following:</p>
<ul>
    <li>Peter does only integer arithmetic. The operations he needs are addition, subtraction and multiplication.</li>
    <li>He would like to use an arbitrary number of variables whose names are not longer than 50 characters.</li>
    <li>His main way of doing calculations are to type in a few formulas and to assign them to variables. Some formulas are complicated expressions, which can refer to yet undefined variables, while other formulas consist of a single number. Then Peter asks for the value of some variables, i.e. he evaluates the formulas.</li>
    <li>Peters wants to redefine some variables and then to reevaluate formulas that depend on these variables.</li>
</ul>
<p>The input strictly adheres to the following syntax (given in EBNF):</p>
<p></p>
<pre>
file = line { line } &lt;EOF&gt;.
line = [ assignment | print | reset ] &lt;CR&gt;.
assignment = var &quot;:=&quot; expression.
print = &quot;PRINT&quot; var.
reset = &quot;RESET&quot;.
expression = term { addop term }.
term = factor { mulop factor }.
factor = &quot;(&quot; expression &quot;)&quot; | var | number.
addop = &quot;+&quot; | &quot;-&quot;.
mulop = &quot;*&quot;.</pre>
<p>In the Extended Backus-Naur Formalism (EBNF), <tt>A = B C</tt> declares that the grammatical construct <tt>A </tt> consists of a <tt>B </tt> followed by a <tt>C </tt>. <tt>A = B | C </tt> means that <tt>A </tt> consists of a <tt>B </tt> or, alternatively, of a <tt>C </tt>. <tt>A = [ B ] </tt> defines construct <tt>A </tt> to be either a <tt>B </tt> or nothing and <tt>A =  B  </tt> tells you that <tt>A </tt> consists of the concatenation of any number of <tt>B</tt>'s (including none).</p>
<p></p>
<p>The production <tt>var </tt> stands for the name of a variable, which starts with a letter followed by up to 49 letters or digits. Letters may be uppercase or lowercase. The production <tt>number </tt> stands for a integer number. The precise syntax for these productions are given below. The case of letters is important for both variables and statements.</p>
<p></p>
<pre>
var = letter { letter | digit }.
number = [ &quot;-&quot; ] digit { digit }.
letter = &quot;A&quot; | &quot;B&quot; | ... | &quot;Z&quot; | &quot;a&quot; | &quot;b&quot; | ... | &quot;z&quot;.
digit = &quot;0&quot; | &quot;1&quot; | ... | &quot;8&quot; | &quot;9&quot;.</pre>
<p></p>
<p>Between the parts of a grammatical construct but not within the names of variables or integer numbers, any number of spaces may appear. <code>&lt;EOF&gt;</code> stands for the end of the input file and <code>&lt;CR&gt;</code> stands for the new-line character. All lines in the input file are shorter than 200 characters.</p>
<p></p>
<p>The value of a variable is said to be undefined:</p>
<ul>
    <li>if it has not yet been defined or it refers to a variable, which has not yet been defined;</li>
    <li>if the definition of the variable contains a cycle.</li>
</ul>
<p>Your are to write a program that implements Peter's calculator. It should store all variable definitions and for each &quot;<tt>PRINT</tt>&quot; statement evaluate the specified variable based on the latest variable definitions. If your program encounters a &quot;<tt>RESET</tt>&quot; statement, it should delete all stored variables so that all variables become undefined.</p>]]></description>
<input><![CDATA[<p>The input file contains calculations adhering to the syntax given above. Each line contains either an assignment to a variable, a &quot;<tt>PRINT</tt>&quot; statement, a &quot;<tt>RESET</tt>&quot; statement or nothing.</p>]]></input> 
<output><![CDATA[<p>For each <tt>&quot;PRINT&quot;</tt> statement found in the input file, your program should output a line containing the numerical value of the specified variable or the word <tt>&quot;UNDEF&quot;</tt> if the variable is undefined.</p>]]></output>
<sample_input><![CDATA[a := b + c
b := 3
c := 5
PRINT d
PRINT a
b := 8
PRINT a
RESET
PRINT a]]></sample_input>
<sample_output><![CDATA[UNDEF
8
13
UNDEF]]></sample_output>
<test_input><![CDATA[ hugo3 := sammy + ZuRiCH 
 sammy := 3 
 ZuRiCH := 5 
 PRINT d 
 PRINT hugo3 
 sammy := 8 
 PRINT hugo3 
 RESET 
 PRINT hugo3 

RESET
hugo3:=sammy+ZuRiCH
sammy:=3
ZuRiCH:=5
PRINT d
PRINT hugo3
sammy:=8
PRINT hugo3
RESET
PRINT hugo3

RESET
hugo3:=hugo3
PRINT hugo3

RESET
hugo3 := 1 + ( 2 + ( 3 + ( 4 + 5 * 6 ) * 7 ) * 8 )
PRINT hugo3
sammy := 1931 - 1000 - 900 - 30
PRINT sammy
ZuRiCH := sammy - hugo3
PRINT ZuRiCH
sammy := 1930
PRINT ZuRiCH

RESET
hugo3:=1+(2+(3+(4+5*6)*7)*8)
PRINT hugo3
sammy:=1931-1000-900-30
PRINT sammy
ZuRiCH:=sammy-hugo3
PRINT ZuRiCH
sammy:=1930
PRINT ZuRiCH

RESET

sepp:=karin + frosch
frosch := sepp - karin
karin := frosch - sepp
PRINT sepp
PRINT frosch
PRINT karin
frosch :=34
sepp:=-34
PRINT karin

RESET
octern := 35--5
PRINT octern
ttT:=40+-5
PRINT ttT
]]></test_input>
<test_output><![CDATA[UNDEF
8
13
UNDEF
UNDEF
8
13
UNDEF
UNDEF
1931
1
-1930
-1
1931
1
-1930
-1
UNDEF
UNDEF
UNDEF
68
40
35
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[www.csie.nctu.edu.tw]]></source>
</item>
<item>
<title><![CDATA[Partial differential equations]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<img><src><![CDATA[http://192.168.2.104/v1-htm01/199img1.gif]]></src><base64><![CDATA[R0lGODlhaAAbAIAAAAAAAP///yH5BAEAAAEALAAAAABoABsAAALBjI+py+0PEYiS2otzxWDqD4KdNobm6ZSZirYty3kj3HiLarsGviVzrpgFfpAOcDeURYxM5i2JPBwnRIZxR7XRokEoa9sMT705oCwrLWunx+JZ0ia9pVY2nP6a67B8fNeNNpQmh6XnI+YUdKblAyXYl5a4VhfHaGhi6VeoBLnZhFS5lfRJ5SI2GCn5iFqnI7r3etiYsnpSuve0tBrrmIfb6tbzO8yxEkeMXFOczNzs/AwdLT1NXW19jZ2tvc3d7Y1dAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img2.gif]]></src><base64><![CDATA[R0lGODlhDQARAIAAAAAAAP///yH5BAEAAAEALAAAAAANABEAAAIgTACXxqffFoJ0tnojXA9ZPnmikXAZaZ7lyVjsC8fyTBcAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img3.gif]]></src><base64><![CDATA[R0lGODlhHgASAIAAAAAAAP///yH5BAEAAAEALAAAAAAeABIAAAI/TACXxu3PElKwwjWn0dbyuIDPd3QNSZVaiLYYgomOu8HwVtY2h47szgt5crKTsEIz3kw+prP4jEqn1Kr1Oi0AADs=]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img4.gif]]></src><base64><![CDATA[R0lGODlhZAAaAIAAAAAAAP///yH5BAEAAAEALAAAAABkABoAAAKfDB6py+0Po5zUoYqz3vryD4bUAYjmeSIeqpZo2FqX25C2/ZTxy+l+7VotbkSaIvhLCHk5ZdKgOxpTUyhjuZQWs06ghwuq5qrgj7jrFG9xV6tBCoyn3LSdijqDX8nnDbv+RIL395Z2o2dSpFTINAJIhNgYKQkRNcRHOcSYKSOnVZbYx1kpOmraUXqqusra6voKGys7S1tre4ubq7vL21AAADs=]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img5.gif]]></src><base64><![CDATA[]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img2.gif]]></src><base64><![CDATA[R0lGODlhDQARAIAAAAAAAP///yH5BAEAAAEALAAAAAANABEAAAIgTACXxqffFoJ0tnojXA9ZPnmikXAZaZ7lyVjsC8fyTBcAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img6.gif]]></src><base64><![CDATA[R0lGODlh9AEoAIAAAAAAAP///yH5BAEAAAEALAAAAAD0ASgAAAL+jI+pBrAPo5y02ouz3rz7D4biSJYm1zDOtp5H68byTNf2jec6lTJo3OjthsSi8YhMJoOv3wymjEqn1KoVKcRAT9ur9wsOi73M7KVbQo/X7Lb7zWqZzzQ1/I7P663ZucUuArg3SFhoaNInCKH4wXj4CBkp+QLjV+HYgTm5ydm5JmR5WedJWmr6KaeZoKrBevoKG4vowJQpE1Qb4fq4K+tLJtEbkGu79Et5nIy3BRWKIzzifCqtXE0FSqxyBB1CXcQdZy0O5scM7nGOno5I5D3+vlO+4N4oh7DupGUPNAEajQ8vILoHXejZ6lGJIK6FAFXRWgHwXrBhEP8JvLiN4Lz+iKsoemyykSGuNBkeftQWbWKKRJk4YnzZT6MCdyJrMkR2clggmzYl3uOJk2U/NTznIKzUzNxGmEyfyVzl8idKHxlLQmRFc+hUhTMLRm0KlurMpXWu7usKlARWs1t1MRJ09GrXuXTD2mU3j+yTJme/teLbdtHbmD7kQq0r9a7ilHkR/9EkEqQRgyoW6kx1M/BTwZZpUcqcE+fi0eqgjhR9yfBAtWayJQaBDXTWcJUta/5K+iI9h33zwVatWXIjnVp5/EjqOHTu5XR4QPY3PNBr5dNbOndt8fBPYriZB/QGjXLjbqk+T9wEvrt3eHBdlSlvMB02ZM7UT1Zkf/07QGtxRZvc7UJsYulHYIGlBaUNgKhZF1R+Bj6oG1LaNRecPh1VCGGGGm7V2l+sTSjehiKSNl9hFf2xYCv7CDhiixmWSBFCFIZ4IVVHEedijgSulIhtolymjm0s6kikd9gVQ12RSi6pgz0OMgklk+VFSaWIBQAAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img7.gif]]></src><base64><![CDATA[R0lGODlh+gEqAIAAAAAAAP///yH5BAEAAAEALAAAAAD6ASoAAAL+jI9pwKAPo5y02ouz3rz7D4biSJbmaTGJE6joC8fyTNf2jee367YLqwG+hLqi8YhMKpfKHrH1TA0bzKr1is1qkdTFKiqNgbfksvmMNjsd40lb9E7L5/S6fUN1evGy+P0PGCiItXbQ0JPh96E42Oj4CEmCiAjC2GEZmam5yQmFQLnY1zlKWpo5iekmasra6ppWKLn6SltrywUEGip22+v7C6PSJTt1SJEKHJa83KQaMVyCjCJdA12ny5xd/SWEPXvkjfsDGK5tbhKLmkMtyf5dfuHuAX9ev9j9mSvPJ54VW2mEnr2Bibrpyzct16ckT/QEPDhuT7xjCkcIJIjx2Bf+QwZPsGGB78GhkRcnLuTBBCVKDG8+SgxRMqNMBW3UofM0CQJJktFW4OyoQ48woM9UDUV4ad9Me2Mo7XwKlSfHiC8rRd1piCZIohK8XX1GhAfXH1G1UvWENK3apWw1imyo1CzaqkHlxjxr1S6mOGLdwH3bNrDbjXLRba2otSwxpF0E3gWbNWJjvhTJ4p07tbDgzT4J+8h80wvigDSzbk0RN+RnH6eddTV9GZSux5zrNVwI+jJY2VJX97GGGcpI1hx7005sjKwxNoN3L1/9NLf02ptRDQfd1+3FuMVLB3eszzj3gs3JK08enC51wdvT+mldYXzs+fF9Q67b8pJ93pqz13NWtMZolSnTzn1r6fQeejYcF99f+UAjn3+30FMTgJbIB5xu9mVEYYQS2sIXXC5NpQ4jGI5Iok5sUfihhPm5h89Re5hoGEi4edhijrXZ9JmM19UXDXw/6khkkfGMlR4/GrI0nZFOPunXgUohaV6SUF6J5Vw5raRfgZZlCSaW/whn4zxNmidMmGo+OVRYvXEA0TzhrUlnkRmGxlydeu6Z0pl8/gnoLHkGSmih0/hpaKJEFgAAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img8.gif]]></src><base64><![CDATA[R0lGODlhWQAbAIAAAAAAAP///yH5BAEAAAEALAAAAABZABsAAALJhBGpy83nYjxI2kargnfjfhmPCAbaRiZiOnHLWY4vwjoUlubw9MW2pgPtXMHO0IbEoZZGHPAp7MlmP6Zpl5xBVViph6eSFK/R0ZbcfIhpXbS7BtZa4dnv2jKme7lnvfrf0vZ2huc0J2iXKOOXhxhmdsglthdZJXnJaLikM5SheGlFtfnUecMHCZiW+ul2uorn9+LjGEJLi2I762MZMms6KRQbLHybIRzjsot7a3Ss/AwdLT1NXW19jZ2tvc3d7f0NHi4+Tl5uPl4AADs=]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img9.gif]]></src><base64><![CDATA[R0lGODlh4QAfAIAAAAAAAP///yH5BAEAAAEALAAAAADhAB8AAAL+jI+py+0Po5y02osbALn7D4biKG7kiabquprsC8dysHGpO+f6juGnzwsKhwbgyEhMKlvIkNHUzEFtPyqVh7uWONFMLUvjanXiMOSLRpZpwvVYkUYzasV5nE6xTQ9dlH5tBneHh4CX9cb0V4Q4SFiouNDYZyeY8MTY6HDpBBm4GIkYNgj66flhFWoxWhexecSCqvE2ORFLcvjixjfmehpoK5gJt1tKXOlEHCXJizormWdo/Hh8Gl3sy2qqfe1hxd3hAgWbVtcs991DzpZacc61qI6eTvfOucvOdH++XdVfejftVqcllGjVk4bwBptqpg7yo9UKkEOCwfBtA7LPj8VLVqICJhQFUVNHeRTrbSRFUZXBk/NS1tLjhaXLdjJn5hNnM6fOHVNq7vwJNKjQoUSLGj2KNKnSpUybOn0KNarUqVSrWr2KNatWrQUAADs=]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img10.gif]]></src><base64><![CDATA[R0lGODlhKQAZAIAAAAAAAP///yH5BAEAAAEALAAAAAApABkAAAJSjI+py+AMgwMxPUnrmlqi21lgk2HmqXEQyF1jWkaT+lbqmrEhFpOH2yMFNzGgRxjSlShDQ032YT1Rndlth81qtzKrlQsOi8fksvmMTqvX7Pa2AAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img11.gif]]></src><base64><![CDATA[R0lGODlhxgAcAIAAAAAAAP///yH5BAEAAAEALAAAAADGABwAAAL+jI+pyx3gomRw2ouzqtpwD4Ri2F1fqZHoyk7nCDcqMj9ne9S4pe9+2bPRbrmPLthC/ijEpTMSPDaFxYRydX0OtVwoUeqYgZ1fSHYhDjen6S6aY2Rap9T6GQQbUTbCe45KFxUFyJIXw6cS91blhacHomYogmYFKUZnU1HzsrZHssn2JtljVkoj+lg3B7n4s3ZzlqjIiCG7tYdj+7fxKqd6utQJRNtaq4n5pOtRXCk3SfnANPpVmUgsw0iKzIvHyo0q2focPScMW9o5XliuSTy4vMwpiht97LkDR65flC51OLTNGMBHZgDyembqVjlpegoiCijBkLtU/HzJUJckIKlziwrh4WMDEYWfTNSgeMTHY9+5X/J8ONzkZpeLk96w/Sq07chDIy+CwfkZs2YYoSGTDVu46hoZpVyKfgtq02jPLp/2BXUKDKrWjlDtbf0KNqzYsWTLmj2LNq3atWzbun0LN67cuXTr2r2LN6/evXz7+jVQAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img12.gif]]></src><base64><![CDATA[R0lGODlhFwARAIAAAAAAAP///yH5BAEAAAEALAAAAAAXABEAAAI3DBCJye1m1noUnthuRVqr+XASWDnduUkM923WAbOkgpVeOGdQTZe8d/OtVjmbTBhqIZfMpjNQAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img13.gif]]></src><base64><![CDATA[]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img12.gif]]></src><base64><![CDATA[R0lGODlhFwARAIAAAAAAAP///yH5BAEAAAEALAAAAAAXABEAAAI3DBCJye1m1noUnthuRVqr+XASWDnduUkM923WAbOkgpVeOGdQTZe8d/OtVjmbTBhqIZfMpjNQAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img14.gif]]></src><base64><![CDATA[R0lGODlhPAAcAIAAAAAAAP///yH5BAEAAAEALAAAAAA8ABwAAAKVjI8Iye3PFkxy2qvqBBp7yFnhR4JdM5ZqtKTaGYQp5m6y9EZxCzu80TtwfrMO7gcM7o4UCrLoO81QTIVzl7SiVpUpC7sUNkddJVBY/nZj4gwZDdedxUbe0PW6v8vSO71uQ2P0MFV4YUbXlgGmFRcokjNWOEij0gdThNi4AsK2yQm6GDpKWmp6ipqqusra6voKGysLWgAAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img15.gif]]></src><base64><![CDATA[R0lGODlh9AFUAIAAAAAAAP///yH5BAEAAAEALAAAAAD0AVQAAAL+jI+py93gogxw2otdvTv7D4biSJbmiabqKnUkACMxi8Fz6930zvf+DwwKfbpRTFccGpIMZsuljEqn1Ko16vzctlBlVtadfK/ksvmMno5rG2Q4uKa8n+m6/Y7PP9qyxXGuwAVWBTHW9acBqLfI2OiIUljRARUpx9E2qRhow2mTg/gQaJkV92h6ippKMTqZIFm5NCd4UArW2Zkx8+Xyahk7qBosPNyo2+pHKYsJLGVMy9uUzExMXW1N5UzbpLX8jO392+cnpnltfo4eYszXpwu+9+7LdsuZG9ut3S4ZL5/u/w+QgzZ2z9yF63fQzbd+RXh5WnUwYsCJFCfSi3dxFSb+aQ3L0ag3jeGtJRD5VTyJ0mK5hsgo1elogWXKmTT/rSzpEWGZJDfx1fwJdFgcJDVegpQYTVzQpUxP5cxH7tFTnU2rWn25YyqZp1qvev0KNqzYsWTLmj2LNq3atWzbun0LdyGLrla4xr3blu62kFge4silF6/glLUiHDXpZaXWwoMbEw48zhXkEkO7MnaMWaWKQ5ONaLqMOLPodFuUDgLNmRBV0952dR4NGw+sY/rkDUX2id5lT7tEgRIZO/i5SkTF/b69Kbdurr3kFM93PJPw6daykcQNIrWa5s1LSqZDPbww695ZrxaVXA247mGk8RUPv9grgiQNnneFfd5ye87+v18fuI9EoMVHoGr1QXVPgIWEVh5SQnQXkUMGLfhegQUC8hpguEQ4UkI8beggHH794lNGCA1oIWYSVthMT+ZpgBVOLiKY4oXdKLRTTLRFhQaIDSbFYI3T4WhbhpQtVpR8WgiZIpFEXoGkjlJ9wqSFb8BkhpH4mWJXlRcCyaKXYo5pno/3kYlmlcqEmWabTW7J4Rla0lgMf24G5xBGc4qw4pFQjggjYHfi6R9wW0mHYqHYKMbNoLDhiGVd0oUoqKQ8UumoaB+6dCgzibL5Q2Xq7JlpU4w+SF+elNqWSF1nuvdjkKW+hRwcvuxYZCj25aefiZfAsheA//E662CKfLr+5G/lzdKSgKC2tB8bq/b53KrF0mpYXxEW6pqzshLB3YjuVXvmteYCSS6zkd2H7AvrJYQeu6Se6+U6NKobL76oLcfYfNzmC6G19A78H4XLLsNEqt61awSHuOI0kKIETywZiDDZW3FpT/aVsE/OuRMpxSKDZwuc6WGURmkhbjzvyGh+lhxPzyaGIKLQzOyyyGu4BCi5WR6mMcs5D51t0SWfzPAQG51cLtEud2ZwrHpcuazTVmfVcqdXb811115/DXbYYp9LatZZ2Tk2xZz6KWkpUyWddpMbZQg3n6dWGjfZh0Bi9qWtNpq33uuaUHd2n9FVeOCNqTzsi0j//Y0hj8PEoziZszl+7K2Q99rhPOzityvTlavJCuZPBDyphtFeMm3F2+I8enjktcejTAL3QN7C6aXbd+xqzR5soPIaaGjjMm7uu5AYxwqzhxLryC9/fokLMFKJJ4/tgcYPm3DNC/ceSq4PExR109gP2XlH9QD6MR8bJ1Zc6gnuE/L5L98E5utyWtye/FLbXy8xxGxt5lOPaZR1MADeaWe+CRn4uOGk/vDjgQp0S+ZchzQKEq4gTLteBR0DNd05RVcm++DWPPgzE56lAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img16.gif]]></src><base64><![CDATA[R0lGODlhEgAZAIAAAAAAAP///yH5BAEAAAEALAAAAAASABkAAAIzTICZxm3YoGOSgmldnftc7GWgp3yPeY5dF2ks9ZyoRpbYMrrvHedw6AsKh8Si8YhMKhsFADs=]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img8.gif]]></src><base64><![CDATA[R0lGODlhWQAbAIAAAAAAAP///yH5BAEAAAEALAAAAABZABsAAALJhBGpy83nYjxI2kargnfjfhmPCAbaRiZiOnHLWY4vwjoUlubw9MW2pgPtXMHO0IbEoZZGHPAp7MlmP6Zpl5xBVViph6eSFK/R0ZbcfIhpXbS7BtZa4dnv2jKme7lnvfrf0vZ2huc0J2iXKOOXhxhmdsglthdZJXnJaLikM5SheGlFtfnUecMHCZiW+ul2uorn9+LjGEJLi2I762MZMms6KRQbLHybIRzjsot7a3Ss/AwdLT1NXW19jZ2tvc3d7f0NHi4+Tl5uPl4AADs=]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img17.gif]]></src><base64><![CDATA[R0lGODlh9AEqAIAAAAAAAP///yH5BAEAAAEALAAAAAD0ASoAAAL+jI+pywgPmpy0Omiz3rz7D4biSJbmiabg4xis2r2uG8H2jef6zvf+n3gJaUCFsIasFZfMpvMJjdpkSqKTGqxKt9yu9wsuYWYHGXMcqJrD7Lb7DYce09y5No7P6/f8BmZI9/SHRNZneIiYKKd0hLZEleSoOElZaRlitiaodnfp+QkaWsZZRyp6ipp6mNnZxKoKGysLBtlVO4ubq/tzu9W7CxwsPMIiGVWsSXvSOty8OsFMnCxlfOwY7THtvJ3Xacrtiqa9gg1u7pWsNQ5X3p2lsn4ub72wFu/WHmefH8M//8/rjrF7ActQ8CeG0TIICo1EiIdlFMCJvuoFulAnDSH+aD4ebnTIMCQ0dUY0mvRz8hvFlWdKXpRYEdnBjianhbwZTWAQIuPGvGIJtIi6jzDJ4TyK9Ge6pAKZOr2WZKFLhxbmFA2KdQfJQlfpnZSAkITVhFN3Vr1KMKtaEZxuYixFA1tYaXHrMfWjswUgsGjnrv2bgVlTWwbl8ipsQtPQvekMvgUMOTHKd4nzMbQrkq8GgpezZBY7eNTngZ27Rj79QXHpr2yjcmSdLbBrzWmJ2d2M1yzq3an5+WUQkfZvxxWCT67d22Zgqvt4O49dfLhn4gelbzY+Msfqx6/12nsOfsM962DbIZdaXcc6yyCphn9fPP1Cjxhrkb9O/yup+7Z3JcP/3x1w6LFGHyD8yZdSgo4dCGCDw/wUiEyf3aDUWBM6iKFaEJrWA4RjZQhiZBtyBYSHHIaIYlC/5MfgdWidmGKME63ok1CMqEGdjDpShMxi2/HQo2fn7UjkLtVQ01OLRS65pExMPgklJhopGWWVIB5pZZZ5FAAAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img18.gif]]></src><base64><![CDATA[R0lGODlhPAIkAIAAAAAAAP///yH5BAEAAAEALAAAAAA8AiQAAAL+jH+Ay+0Po5y02ouz3rz7D4biSJbmOQGqgrbuC8fyTNf2jeeJzvf+DwwKh0Qcq4hMKpfMpvMZOUKn1Kr1is0ipNqu9wsOizfcsfmMTquR5bX7DY/LOe25/Y7Pn+v6vv8PWMQXSFhoeEiysiIxiOj4CPnV2GhBGXnZYWmjiAkndQSqGSXaWUpBOsNpmqaypWrQSocKM3tTuyl5+6K7ChW70/CrIezDm8pkHLQoRNw7RszXXMnwmzzMCGqLDVxDWc0WwPXd/eosVhbNKx7O8mkdHhUf6/7wzu2gMO8K4i3fvo+Pxr8d+hLUOago4aRQ9cxVQZdPnLoFEdkBHBUPwiT+i8KkwUqhaWOrjhKpbczYcCS9gBcN8hv4UWXLLfgUJtQ4k6bDKehcGrQJdNlHiu1qedQYtNk8e7DSJTXZFCPRDEmVFiUDsd5TivcsehXIdOeQQSTpQP16dGpNRtvQIjwVsm21rGqDWfJ2Nardszmp2vQ5d++IwILFPimpNzHVs8vS9o2JUmvTvNTgtWUrtTHdx/D6ZV4aEDFnMmo1B7Nscmthj/kMH65bljRXyK3ZKXxcESfK1rW5Lr2tWLdw3qiB+qzsGHVD2soJFgX+NcQ65j2TX9DXJnd012NnK3Zc7vhkVb9viufLEqn5o+VfWW9ud30o6GmT45Uv2bb57Znq3ANnHRZhq73H3Sb0CKUXgkNZdQp8hUXn2WKUOfigcBj0FhyEn6RA2oSbnScDbxsORpOHlRU4lkTZ5TRhV/mNYlqGJ/p1nHX7LUdjXeNRZiNWNX6oX1hwJUYgNrG55R2KzAwJYpNFXiPjCQyxcVeTKEw5mg5YehCed9AoSUSPP62VngkjUWgmcUnYp2YMZ2YnpHRtfgDenEOBuaRUUUGDYZKJRCkloL4Iaiah3fHnQot4rhmZbXdaFueikk5qDmg7UopppprqhOimnn4KpoCgjkqqa3NFWmqqqq4BGqqrvgprLmPGSmutfRQAADs=]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img19.gif]]></src><base64><![CDATA[R0lGODlhFQAaAIAAAAAAAP///yH5BAEAAAEALAAAAAAVABoAAAI+jA0Jx926nDxx2mQvzBLzznggUgWiU50flZZhKaqUySI0aqavts3RueiRakMZbrjCBFe2HPMJjUqn1KrVUgAAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img20.gif]]></src><base64><![CDATA[R0lGODlhMQAcAIAAAAAAAP///yH5BAEAAAEALAAAAAAxABwAAAJ9jGGpy+2MVHy0UjCx3Vwi3YWWBoqmg01eUHKl2qQQ+8EXfVSydNRJCwEBYbug8RIZLorLE+tnWyqF0FG1FyTuMtzYj6dtpcY5rm2cwXmADyVK23xuPl+pmre6I/HgIZEfcsam5+akI1dnKDKo2Oj4CBkpOUlZaXmJman5UAAAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img21.gif]]></src><base64><![CDATA[R0lGODlhIgJDAIAAAAAAAP///yH5BAEAAAEALAAAAAAiAkMAAAL+jI+pq8APo5w0uoqzZnf7P3XgSJbmiabqyh6A2MYaLLdvjbv5zvf+D6zQgrsbsTQ8jozKpvMJVTKjsilVYr3Oktqu9wvOgk3icaBsfqDT7LZ7tUa8uB/6Zo6Nd/UGvMf/xwf4Rlho+EdxwxcySKJodwapJRlZuWV5KUh5yNnppumyGXLCpLcIBdoninka6prnGStbuFi6akHaYXp7VKu7anupyjhbbBxGGUya+wrR2uTbnPgrjOnMe5ytzRI9vExGDZvWbU3sjaEsvr3OXpQcTsZ8fs1G/pwuBG+B3d7vv59PmiN55Tjw83EKn7mC6sj9ewjxziaFSwhqOsgjob7+hc9YvcMYMeQ2jQIrgitp0AzJeRxvUVQDUqTMLy4nbjSJ5GbKMSsZ0mPZMuDMobHmAGv1KJfRnD4XdPzRCODTpBKbOo1JNKuTo1yRiXqK8B7YSAejAtSK1tBRrWMzYuX5Nq3cjBnaFjMbxW49vXP75libFS+quDT5+j1soy7hQ4KfGIa7GLHkgegiq7WM4jHcyZy3VsZMSDMc0YU7mybylTRj0DlZ53V9OnaDz2hVZ7Y9CbbsddjoGL145y9Ooerc1iy7pKNDg7h3U4GxPHnq5nICKZe0tEfjq1aZl3UgllGc7M5H/gKP/e12Djjs1hRHvQFSnaMCoYQJ33f5dlP+6Cd4vJ5TNQToTDU7ARUDgeeAxc9L+P2EYHf7eeLgWY5MNeAZw00DoTSlpKCgR4jYF+GB3P1Hw28TaiPCGuSVqBgvrF2A0XsmykGjJUn8xuM1qd2HRR3+nUgkivKtOBKO6OHIkmEh6mBDjiDYWCSTGlIlH48vovgjjAWSKKGVVZakG5JBtBiOQlquqeJVMgrJZh9Q1mHgbAK+IlqIFeIC5nxf2immmcagiacuR7YWHDda0qmYheUYkaefXqohJJBjGolSfIKeKSakNKaI1ZNytrfhQg9m4ekQbAqm55B/ViPpT2VouilUnX6qSn+hYkjqlHWyJ4ahcbVq6auNThr+KKVo0FqrdrcOowimMI0n1pa3iUqWgtHlau2U4U3VZqPhmXpos7Lo6lG43kSF67S1TQTVdWW6+Sul9pp7LnRIJauhVdiyOK9EAfdS47/4elEwv5YafAyz1vnjHsMHX9EWmjvaIfFdA8cIccIT31WpK1ZE6y5bG9PWj8Mf1zNiKFKO6pvKyBR2MhAyr9zxgt26/C7NOePcrKs3ypTxgDWHdTTQ2ez5IFFFV5G0cUpvaguVQz2dYNTuaD11vtDWu89ihBE7M8cPw3ls10hWvcWPTmJdSU8I+wlumNzFqnbeWRKnmXpCIytFT+Pa/SyHeh8ubUPDWvSOSjYVW+51kE/JjvjKgi9+EuA3V2U44TrD+njllV+eGeOdl9b54JID7rno5pL+DVPIwp0134C1LqJ4riNOINN1mV6cz0FVRnnhwe+utj2Yyx7m5mBaqDqV2yKvtPKlZy6h889DGD3o5FLftfWxXwi59pwrnvbqzXMNvkjRAKhupansxWHdDC75ffvV28R+yY6Owz+0CfB4+pua+VDTP+INKoEFfMgBbcZA4nitgYd7YFguozEK8s6BEfzdBDWoNwsWoRMiRAIIR/czTnTwfCc8TAEAADs=]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img22.gif]]></src><base64><![CDATA[R0lGODlhIgJDAIAAAAAAAP///yH5BAEAAAEALAAAAAAiAkMAAAL+jI+pu8APo5w0uoqzZnf7L3XgSJbmiabqyiKA2MYaLLdvjRt0zvf+DwxCdsLcrVgiIj/HpfMJjTqbUhm1GlJiJ9et9wsOu7RiJvnbLQ/P6rb7nUpz4nLPi32HB+pj9lxnx3eQp1doeLiBR2hyI0hx5LjnV6UoGbiI0ViJyNnpqTO5d9IUaTHGFfrkSJoKaDa4+Sk7W1Y6ONph+8CK6hbJOwMCbNFKa3yMoyvKmFucMLzmG6vsGgjbi5ytLaTs3NBM9+gN9As+40ANHb3N3m6VOv5szlxBXVR+HQyaob4b7w4wYL5MuAaS0GUvSKl+/ODNIyYwosSG+pI8FObwnxH+Pwwh7st00Z/GiSRnpSv4cQSpeiNrLAyZxSA2S+JK2qRV7CS9lMJcsKzFEaYpmTF5eryJ1NCdVpiyLLVIU+VSWwl9NI1mT1NOdKGqJv2q6lxLM2Othbm6xhtalg7BuoXDtOwhrzzoqrH7Nm/dc0nXRsErxq/ewVP4IhWsSu4WxIQbkzN8k/ESwGcpO76sEnJkxeHYWcYMuqI4zoU+q5DcyXTo1SEaktajGgVqTrFZ21aQ8WttZq+l7L7djmla1LNh9a4mVrM/henGFb/1aqbI48ChwKDylKjUtr+X8e12JrtVhJoScRUrXvp0Yt2rT2l23mhUi12F7qQof93y+Rv+u2o/2s0pP3nEB3XuvedTSl1YVlxH9Jn3HwdaYGegcQNGxx8/+O2XX4YH4iRUGpQ1aN9B3oEU4TccyrSSbFTF42BrG6ooD27pfWiSgLjxNyJ5KfZ04oU+0mjjLZB8M9WNNk6SR1Yl6ndhkUT+iCMiIjQJ33w91kclhEHW1KGEYhJ5nohJTpWWkHF12YCXU+oIXZXHXGkOJHSeiadfJLJpHJ5xbsWnh8glmM9ns8U4pqAyzrhjmzXKOaeOdvK0JYphkoWmpYq++ah8k7rI5JNkAqqclPm1B6lCkl7wUKVqWuHmkPuZCQoNeQp2qKimOunmrESgmuoPdBZaK5zbafr+G6mbmrqLoLl8iVGogSqorKZDKApssD0M+xGr15Gh5JIU7ZYpiuCp10e4ZJnrTHm9Rgkls9qmNiwrC3pr66WSxFXhJaX+ISx4zlXF6yPXzivLFcQZu4wgz2mTrXn9IkGXuggrhSG24EZcGRgPlwbjxxej0W4fiYqk28TJeRbyyDj16u41G6vsMc0g2UwOzi57LNq+yLHKXso16zzezql+uq/DHNc8dHBEG22MrpxOJPK2T/cHdZWIrlhS1XVdnczSWc+Z5b8Seb0Ry2CPTZu30BZ1M6inMbpYbuv6ay3bwNkr8YCAxcwI3VjkuuyYvMqqd+IWglk43D0KTslL057seK6+DCuu94uT7zrSc2KbzTlklTduOeYuFyzV5m22FVhQkxOyZumym45wc/fhBXTeXkg+e7qxSku74uShTe1BuY8GFONOPrx1scEn/rFdzQ/19slNO76mxYny/jz0HF2+YcVnMt76TDr1HhX33bPNvfRSG0x++dj3zHrjn69/mOvojyobvB3Pr6FpNe9++NsMNv4WH/rgQxq9KNjh9FdA9oVqLMTL2F2CMjC1qC+CYyPgPdYGubmAkIMC8SBzQGaSEZKwhCoMm1JaiJEVCi8gJsyMJ2ooQ6rB0AZtu2EOMbfDFeDQhlYK4g+hUAAAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img23.gif]]></src><base64><![CDATA[R0lGODlhJQAYAIAAAAAAAP///yH5BAEAAAEALAAAAAAlABgAAAJTTICmy+0ITDrRWTvTpLevDVVcI36PuI1kqWJl+ijsKYedNn82A6+e/srVhBIgioi7gCA1V5MmYbZ0vFzmiIy5iL+u9wsOi8fksvmMTqvX7LY7UAAAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img23.gif]]></src><base64><![CDATA[R0lGODlhJQAYAIAAAAAAAP///yH5BAEAAAEALAAAAAAlABgAAAJTTICmy+0ITDrRWTvTpLevDVVcI36PuI1kqWJl+ijsKYedNn82A6+e/srVhBIgioi7gCA1V5MmYbZ0vFzmiIy5iL+u9wsOi8fksvmMTqvX7LY7UAAAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img24.gif]]></src><base64><![CDATA[R0lGODlh9gJWAIAAAAAAAP///yH5BAEAAAEALAAAAAD2AlYAAAL+jI+py60AnJy02ouz3rz7D4biSJbmiabqyiJQC1tvTNf2jef6zvf+D5RAIkHVTMghNpQ+JsZZtEEfwenNmuxhR1tYl/UFl8KHYWyIPoK/SnTFaS6TKXGDm56o29V7EjR956cWiCT3N/f2AMgnx1XGQMikh+eCOMFoCFdJNjkZgJkRFpnH5+nQyQiqYbo3uCmTiqiKMmjZMfspyambW/kxU/vWRlQ6hfsEySsCrHwJZ2x7muy7cAzLGlgsHAtihhk53HtK/FwdTZpmfrROTircR+3uwZzMLv+ueH1W3jKr7RzPXqElAUVJiifu3i9oCi8JCQfvYb6J0ugwRIjxlsP+jNZcUCQ48BtFgZAQfmMzMKFHkyY5tTS3EWTElY0aSvwI0Au/NeNswqypElcXktaCRcR2Dt1PoJSWQFTpVOnSks4uMvW56uZVVjIz5tE67R7JpeysCL1gdSbRjmvNDtXKDSNXRW5h7cNK8xahvHagUinole/INn6/Au4Td96nqYW7go1w1l1iqkjSNr6MzGmdQ5gN4+3bU7MroP6evphcTYa6dWLDHVvrN7Jm0JtYSzYYe07HEGNnr3gGectOo45vehMeOhexz4kWDw6FrxXmQ8sDPypkVSi0RaBOW6ZOO+XVv7NPkk+4u2z4zrvCXncfR9aw6uM9i3a/Xnl+uuv+0ycNBUh97xkhDzOjkdYMZTmJY+BB+NFjHT7UZePSQ5u1sxdnUMkW1oSd4NQKd8aM98dEbDF2HlklntdbVDX9U5yC9u2nVjvRMbiTjKuNOCOOOcG44G91jSFiOv3ZaKNzCHJU5JDwAHMUfkoCGeIi5GkIYibchUZPkkq+R6VyInqGJYi72cXRlRXa1ORwOQ7YImNPzVSllamh6CRtbGlCZyxF3hbmip1N+WZyQkppxIc0QYleaxF+6SKY1dnWUG9n0mUknQKmyCJ9xEFq6VuigVNPlgBuJehRaz461JyFNfOam8zhhqecrkoZqnidsulocmFGmmiegiw6IznD9ar+aY8jgYbKgFGi96lir6CoY6/GSseXepvSeKchMJWppZ2HkdiaKNQKhmyysLZ6nbbJomtqKstCyy6z87EqXqFuCnfvtswt0x0Wc4G1lWFAyuovSu326WBeSEL2KFpSmcqptQxniyG+zXn7F7gbJBhbgRBfZlnF46p7mEjtZpywRYim+rBzKtuLmMZdBSqyzBqeFrG/vO31rn4f46mLNq56N6uFd2Q4clAB0ttzVQ2WXC01ZSWZoLvsWRQf00x3E5zHxHXtIcgm+4JajVDX1jXHQXMb2GR2aouKkVpz+FPaYxtYbtSD8nRCcI0Ueuetnii8jJ7/OXtXU+PwC6csMZn+kOo83Z1bdeaMq9NtpfJ2Mzmw6F6qucS6cl7xmZbIt0OmXIzsOtxVwkvx5kmMYvkVQJ8NoKIunw52tERevvHvFfUusON6hX6NWb/8zPw2zhdvfPVR5A4pojfGqLu019NwIhCLcy0s96VbrsprvKWw+9/He085UtRHb+j3t7ufFBvjO3K//eBb37r9EYx3tKvdQuhXQDQFTlRZOCAtGAg87dXPf9ARGgIvmL3WNZCCZ8CgFJrgBy2IQYM6ECD81vcEE0bhWhxsoQtfCMMYynCGNKyh+2z4NhzqcIc87KEPfwjE7gXRgEMsohGPiMQkKtF/pKNhUTZovhwgZ4kchKD+7P43whL2Q4S/4YEKIyg69m1JJzFpX6c8ppeirQpUX8zemIaHjqdRrjYbOxzhNEIj3LkNW6rxW5DiSKZL6cGOKHwcnxK4Rwv6TB/1aBgfH2khIv5rWIuEnqH25JMmmshsHSIk/z6iyU6Cso1HupF5/Cg1t8BmQ7tIW+9eNUhOirI+oWSbn9YVq4tJ0jiqNI2XbghLtJBSdLVMYf2KgsYnvi9OZtrl9nSpPBXJRXLWQ2Ym7zi0fDlSeLrCW7dmhqo+qgpztnNY5V41OW6qb5k8YkrWWOdMYDqwkmA7Jq0S6bN6QQuAVFvFKempP3dis3O+WWQthFXMBB7Ml6sjpz7+X1Y0BfKNnBl8n6bACZ9+GVCfqNkbPgs6yRxSMp/BI55HvIm0f3GUMN7MYEL78h3dCNNzpqvMV/CW0mkmblTOgk16HDpAtmHsbwLJacvEqSV4BXScrlQoo4RaSqbipqkUHSkyh1kso3IqPiqdqX78QVCRUiI7DX0mMy1auFeAdVpvOskbv/UdXz31dGstT8mAc0WR0SeHurnr+frGRjCGCFdy3WupAvvMB8YOrYHLWXEgRNLoQDasLh3fXOtkC4PEcrHRLJDVpviitm7nrYHcKrAmy9i6ZjR1jpXsL1tatXYq67SvteKOwiowZeSSlQo8FKaG16aePuxAkrrmn6b+0iXfja5snCWMcUc7xki5tZfR1dNns1VanRKJV3KqZEyPuySvHNI/i9JXk2KE0XLi5GjMjZ13cNZdkbK3t4kqHFapBxGspWtQ91SczkZXVaWRqmO23RXK+GvIpYU3cuFEpXT1ZSvvAlWumTzZJefLWGqlN6+8hWbpQPY5mvIVwwBcII9eSr5iYUu/BZElIm1zLS/Jlp7KM8UvCbhPRRJRpitjIYMf+avgPidNYlGVuWq30gojaKmLuVuBNTxj9ZLGyDaTEYSLvLaMujieaZygjr1qXezmRrg1i+wyacaS1KkQr2GcbcoCdmTHxeyQPgKxAO1s2pWVOX0TfrCSnwT+u+nBlGV8TeyGvwTOOVe5c/B1GKD/m7Mth5Sy5ZUf6vwZ4UyMssURa5XdmtWSAS+EbAHzIIQ4K1/yGcu5CFPkrzDtyVAvrV92FDWl0ZZMhkJSTMfZI2yz9M866XhuGt0al8SmxratGEaxpK84yzcNUt51qjSOcz0lLeX6Ppk/C0Ic+po9vzWb1MG3LndFJ6ZUHj9PsLSUII7n924bB9iDbp53uSg01jna45xpzbZB+UfnNntBdm2kVBSziUgPm1jQUPzju1dzcH+XuN6GjPi5jcnuRv41434kHXHPmtTtrhqNUBXrxRc+UA6jXApmXPgk+Q1cd8Pb4h/jijLX7XL+mauc4zUvNR6RyjWMExTFNedw/iaOg4dScYV/JLqXE55he58q4/tz+o7p7fDX8XzjJkdl8iYdvxsefesDp/nStYjW+1awiyRke9vZ58WyC33mVB3hwM6O97zrfe98p+LdlSr1Mey674QvvOEPj3gK/pSyVl9e4h8P+chLfvIjjV6wS6h2ymt+85zvvA4Xf80mWDszWfE8gaKe9IafvINbfDvoXA/3uO80hdQMPa9bvt2Q/J2NbCY3SG+/+9LbMvjCnM8awf1J3Au39w0uZC/NKR/mdx3pehw8t31P8cEuH92RBHv3IV7p4jtYkLl+ST8eislHi7fqN+bm6zcNsHH+Vs+oVse2/IOc8uLDmcS8tD36YDkWWqU9CSUudHR/+bd+DrR/5ucy7idwYZRoCGhJuNJf71RV3hYtjRdMfsNkqPUgvoR1TjN/DKhd7+cYdWdOCchut4JY8udl63QzM/Zx9kdL3sZoUfZqQwZMxGd0eHZ+9jR/ukZRHeiDrxNTQCdNRLUuiwZS1rRglkZjqNdhH5WEX1ZoT9d8OfZ7RwVvC7VkjLRRcIFs09JtNChPYiVaIZhgOiI4FuVTJJdtASiBEnOEMwcfxrZgeGhTj4BTINhRd7aG+SGAOiiAv/Y2mdJq0QaHKgddZCZVDbiIJ8dVceRIvbBbIphYnSViSpj+ebw3HYUVVWanNtPXR2RFemXYhlY2J4a4MNKhWoNhWPhHWrgWX2wFZpPIhaVyeYmIOinXHrWoIobVi0mjNC8jFUkGUGN3gk9jRp2IWA1CO0aRgzt3UBRCgMJIbDAYiJBVCunCigwSWgXzgQo3XdVVXD2yM311XUy4X27Ujq11hQgEc5i4W9O4es01dDfmjer4gwQmCG3iXOEIaRXVjQoHfKg2hQbTXofDOCpzS+aYD9wYcHKIKRAZkBI5WwWZkGfYdOfEgrUYKOdlYSHmgpQRkuCVkTCnkTB4krP4XoQzXsjYdRooczQJdCRWhxv5cE2lj81ja2GYEjxTki3ogAT+ZyUguFz7ZY+uxV15SEz8Z265klXbIpUW53NJaWE6GI8KEmRZuY/OZmKHlXuaJmYXUomNkmV6KF3WF4VuCGem5hp8pJEl+Y3EYkFz+SxO9lwWCZVEqR16BmTbNpQkqYXByI7x4pGsVmyweJg99WdpqZXktQaQc31TF2aOOWaCuBJd0piOZoVt6ZaUGXH7NoqOiImiqJhywSKPVoQ/p5P8IJSJxpqdWZgh82abhGiCKSCEiWizmZlCuZU3+JicmZmnmXXAdSyVeYolKCZTViOf5mu6CXy8Fm0lNXJYNprDlYa0SJtJ9TWypmyuNoc9EWsCxTF1M2vRuYKpSCLloDX+aVmXVylQ0Lls+0KbHvhPdMMNSwmaWrdzqiE8f+lfOCeKmeGMAcFxd3eSOPZF/Mk8JoQNUgeIVLdhfvJwcThx/bScphZ0JgN6ZChxpBg/PPgOcZl9rmNZNggwJGqdZCdgUKeNo0ZcRYd90sN1d6aiNmpuIZpq/jRuCJeJUPdbGwdPQfp5kwI0mlRMBzp5NxdAJ7R6MqpzPCqF3zalUSqkPgptNWWHJfWAWbo6TMpy+KN6YGZ6ghdUqdc//WmmO/qfV7qmf1WkYVelW2eTCBaC5FdEPuaiVJqlZ7p2XCd3gfqmtDCoajp7UnSoiGqCRopDfAqokSqpk0qpLXSnlYr+qZmqqZvKd5cqPmLKqaEqqqMaeZ76A6ZKqqmqqquqd6iqBaP3QucAqoqnhosqGLMqqI0FewSqqInaq6fXpmJUgL4VmnJkhAaYTsUQicIXLixaFWSZrMsaqMrXH5v4fs+3fSD6rNrKkQ9YfcFXnmU6pA3ZoTWqnNB6JBEFhvLkqqVJrANohr9TlOuIfyGEXOI2lE8ZeKGTfkk6ni8KfjnmoKh1eT0HgH35ginaXMhHrRuIPdN1m8lonMe5QN7nePAKdhAEcs7prmwKZZNGhGhYfljHn7zpoJo4VD9mchZ4dbqXj/FUsATESclkaDlqHya7TR9JiHP6rt2KaW12spL+iJRi+IX7KpbMuZ4CSTBQaJUly29BK4VeSGXG8565OISi1VdbyqPT5qZMu6NVaZ6A9osTi4V0amZp9KNZiEFEoYdvyGUEkZNqyBooxZ49uod8WGBx65oVaZr7FrKIEYlKR4kNWbeKCJSdhaJyWrjfiIuz07cY8rczyaQby5af9I52GmOgxZgtiEemyKViWLi3elkx2m+uqLmbI4sQCbjAuLlF2rhqyR+7yG36E4vS+S68mVevG582No84Ioxf6ahGmCEF2qzRBV2Uy4j5RWd5QrApKojGeo+qpn4bgpudZhz0+rSZRonDOqC3SluSu45Wq5WaCY+zJL6ZE2W5W1v+FMqQZ1NUMil2B5o+uIqVFCNk8PcpcWWQB9m+bpRbO8K9tzGYarKXwxqQPmKbygK11aSSMbk9fXm/g+mRZtaSqkuQ6RulECySuKZOD5Iwq8iPgHOuihVwt7tGhDW1z6uUi1Ndb7mCaOOUvEi6w+cp7cd4/7paRLaJThjDugm2oSigOpl9jXFokRucwtlu8MceIAyWI/otFQsm6CifVQpjy9abCAqfa8Z9ZUbFJnohUxmYebqZ+HnDBQy9tYmzgPmZzqmXUQvBgKVl3UnEGEyEkmaDM7ssVXsykikkJ3a0cyeO3Lqy6YRmMiNmaAacPpuPfpy0ewZikWa9xYM12bv+XlWHtO4ImLEpW4p2viNZOcQZF4m8uwPIlemYmy8ctuh4UiyTGPNqrtIDHLyrjExSclHjabN2NW2RnmHcotRpS40MjczZxnX6aQGabK15P+HqNPQpNOgZnsh3PoVYJvppn52MFbuYDqAmnsAMk8ecimQTkXPYrn2KB6TZcSdsggS4q0O8xmpLdf5pyxe6rWrWqOKacPIGsxsabwwXz5/rpl+mtUgI0MHKchqoyf2bSrUqNX/6tsJLzo10ll/qpzx1zzhMe/zMrBdLvNp3oWGq0Bwdb4D8z+MqzyO9g/Tbj/0Vq/+B0lWAzkmnopnXPktaSCMa0H96X81osxvdPBJPbafiN0SDaNJVEKedinRXsLQybbt1SrH1xNQ8W3nRTNDx99BYGr8tbXfhI0Oying7/au4BUJoJ9a+yqi8Wta6Wq5BXbmsytZt7dZd3a4FAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img25.gif]]></src><base64><![CDATA[R0lGODlhRQAZAIAAAAAAAP///yH5BAEAAAEALAAAAABFABkAAAKPTICZxu2t4pswLooq3SYzzz3gAUwjGZqllrLf6pxnK8Mt6ub43dn7XVO9eDHYjGb0vSTEpaLZYwqnSNVRpCSBrlcqpJc6rjIXLFAM5pSFa524i3tntdp30SctLu9deDrWRPZ19hGmNKfWUcizFZKHiPGkSJRHCWVymam5ydnp+QkaKjpKWmp6ipqqusp6WgAAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img26.gif]]></src><base64><![CDATA[R0lGODlhEQAZAIAAAAAAAP///yH5BAEAAAEALAAAAAARABkAAAIyTICZxn3QkGMywvlcndt0S12YsmCeaIqfdpVj5bLHE1OeaSk4t+doDwwKh8Si8YjsFQAAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img27.gif]]></src><base64><![CDATA[R0lGODlh9AESAIAAAAAAAP///yH5BAEAAAEALAAAAAD0ARIAAALyjI+py+0Po5y02ouz3rz7D4biBTzliKZqALTnCsfyTNc2/Rou0t7+3/sJh8Si8RgJsk7KJfLpaUKn1Kr1qmjmlFKsN9H9isfk8kb7Qps5ri0z6lzL5/R1bvnm3euQILe9hwe4k9UTxoeYqFiz11a4aJKWdhAoONjlVwm5ydmJ0eio5/mos6BpkTmqusrKcGdIqHMKmSr6Idmaq+v5aiubm1kbdgmYJTu7m6z81cvjuwrLclzawYS8jJ391PxLeZ14WRrKFqttfg6lFueN3u7+vomJCU9fb0/2fXi/z9/PeP3Nn8CBBDMg01cwocKFJhoaKAAAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img28.gif]]></src><base64><![CDATA[R0lGODlhJgAYAIAAAAAAAP///yH5BAEAAAEALAAAAAAmABgAAAJQjA2ny63JoJtUHmCpvhnn13xcF4hIZ5bqhWhSur4QXCbYdK86fVZs7fFUcqGgEDSsbXRIB5GIWxiL0tR0yfxht9yu9wsOi8fksvmMTqvX5QIAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img25.gif]]></src><base64><![CDATA[R0lGODlhRQAZAIAAAAAAAP///yH5BAEAAAEALAAAAABFABkAAAKPTICZxu2t4pswLooq3SYzzz3gAUwjGZqllrLf6pxnK8Mt6ub43dn7XVO9eDHYjGb0vSTEpaLZYwqnSNVRpCSBrlcqpJc6rjIXLFAM5pSFa524i3tntdp30SctLu9deDrWRPZ19hGmNKfWUcizFZKHiPGkSJRHCWVymam5ydnp+QkaKjpKWmp6ipqqusp6WgAAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img26.gif]]></src><base64><![CDATA[R0lGODlhEQAZAIAAAAAAAP///yH5BAEAAAEALAAAAAARABkAAAIyTICZxn3QkGMywvlcndt0S12YsmCeaIqfdpVj5bLHE1OeaSk4t+doDwwKh8Si8YjsFQAAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img29.gif]]></src><base64><![CDATA[R0lGODlhUQAZAIAAAAAAAP///yH5BAEAAAEALAAAAABRABkAAAKzhBGpy3vYInuyJiqN3XrX7kWgCIXNaCpoGqxOyV5w7Jr11c52HuO3hXAdeKzhjxTUcTSrzvEEeU6iSiAVKlNVX9nc0Un9XlUtrZlzHmfS3XWbKSs9wziie8j9xPdqu7/e1AcIg/dXRgSHcbb3Eqg1o5hXGCdXl6GzNXVo+VFJZhWp6ZAS9blkmnnSWZj6CNJK6ekRitZjagtrq7vL2+v7CxwsPExcbHyMnKy8zNzs/AydUAAAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img30.gif]]></src><base64><![CDATA[R0lGODlhKwAfAIAAAAAAAP///yH5BAEAAAEALAAAAAArAB8AAAJbjI+pywHQopRv2msqehB7123hZ2kiiZmZikZsxbYJZ3IZQ+fxpO2gTvuEfChgcCVLDXfG46UHGSUbNeL0+oxKsVQb1+W4fV2d7fgEOy9gVrX7DY/L5/S6/U4vAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img31.gif]]></src><base64><![CDATA[R0lGODlhOgAeAIAAAAAAAP///yH5BAEAAAEALAAAAAA6AB4AAAJ8jI+py80AAZKu2qcoNPT61gXbxEnjh5ZnuURhCr8rO8PoK4ZbPdb2gVtpZDnWL5PpuGYu45GU8ImSwNZy6QjiONTiM9pFRofTL3eMAXO3P+1Dp5SmrkC23Hxhn/ExvZd/Y+EHGJZF6DF4qLjI2Oj4CBkpOUlZaXmJmdlQAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img32.gif]]></src><base64><![CDATA[R0lGODlhUgAZAIAAAAAAAP///yH5BAEAAAEALAAAAABSABkAAAKdTICmy+0PI0SgUZNOlevyz3jhlmFVspmfCILsqGQllZZT2rq4M5O1aLMEH7IdbxjpxXZIjZGoURGbt87POqWOitln9yqNJrVYjOS18i3DHLLYzeaVlbO0V4qyV/FX3F3oVXOQgyb29kNTmHS09AclxIbimENZeWSkaKm5yfmVOHn2SdNJWmp6ipqqusra6voKGys7S1tre4ubq9tSAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img23.gif]]></src><base64><![CDATA[R0lGODlhJQAYAIAAAAAAAP///yH5BAEAAAEALAAAAAAlABgAAAJTTICmy+0ITDrRWTvTpLevDVVcI36PuI1kqWJl+ijsKYedNn82A6+e/srVhBIgioi7gCA1V5MmYbZ0vFzmiIy5iL+u9wsOi8fksvmMTqvX7LY7UAAAOw==]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img33.gif]]></src><base64><![CDATA[R0lGODlhOwAZAIAAAAAAAP///yH5BAEAAAEALAAAAAA7ABkAAAKFhBGpy3vYInsymYotzPJiz0VgOG2dSSpjqmXISr5oHMCazNaX/e2z3mJ5eJXhz6j6lYKUHvNQS0pdUwgxyrxpg5+tVWnZJr8OE4y8BE64OtlqBC2fN/HxEXyOvRwcEB4F1mClEuJ3UhcoZ1jYRJPD9xgpOUlZaXmJmam5ydnp+QkaKipaAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img34.gif]]></src><base64><![CDATA[R0lGODlhDQAZAIAAAAAAAP///yH5BAEAAAEALAAAAAANABkAAAIrhBGpa+vZHkNSofhOwBNSF3Hb6HWU5l1leaHQKx1u9cVzhef6zvf+DwwUAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img35.gif]]></src><base64><![CDATA[R0lGODlhlQAZAIAAAAAAAP///yH5BAEAAAEALAAAAACVABkAAAL6jI+py70A3YFAJnqj3fz1DyqRJpFlFZgpGraZ6sYPC4tsiZi1HN78byDtJsMMkegDgnyjpG0CFDpzlWKQhl0pW7eq1/FNzSjkmvSEmjKk6e0Sqi1itLZy+Xk95Tm6tNrtYbShYcWXBXY0yJQIOCjScchz1jCpR8XYiBNE97e592I3d/k5g2QpRrfSmYmq2kYK1yp5CENYBevpaYtaqyKqOhroKvp7VSzTZBo8Vxz6yewb3dWXZGehVvhxvHqhxK0t+ZT98x0b7lZO+XicmS6LDOgurMzaDR4VX6+/z9/v/w8woMCBBAsaPIgwocKFDBs6fAgxosSJFBkWAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img36.gif]]></src><base64><![CDATA[R0lGODlhjQAeAIAAAAAAAP///yH5BAEAAAEALAAAAACNAB4AAAL+jI+py80AgZu02ouiPBv7l2zQ53TkaRqieH7pyKlpG8x0mb1ybd9hpIDlfDtiQ/NbII2UmbDoezJBw6R0GlR2Rj1bt4dVBU1c52rq3Yq1SeUYSjRn4DUenZaWAY8x/hx21SKnt8exF4jChlGGkwMI5vLm1lY3pnHZSLkIWVnV6XhZOOkZIomYKLnJOXhKMpjVxmWUt2nnVyUbl1rKW8e5qGghdOoU83vxqjncioxp2KxJunzc5Gy7G1ZBvdYbnZ05+j3BfLMd1koubu66zvTbPgvvIV9+TI8n3p0/t9/v/w8woMCBBAsaPIgwocKFDBs6fAgxosSJFCtavIgxo8YDCQUAADs=]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img31.gif]]></src><base64><![CDATA[R0lGODlhOgAeAIAAAAAAAP///yH5BAEAAAEALAAAAAA6AB4AAAJ8jI+py80AAZKu2qcoNPT61gXbxEnjh5ZnuURhCr8rO8PoK4ZbPdb2gVtpZDnWL5PpuGYu45GU8ImSwNZy6QjiONTiM9pFRofTL3eMAXO3P+1Dp5SmrkC23Hxhn/ExvZd/Y+EHGJZF6DF4qLjI2Oj4CBkpOUlZaXmJmdlQAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img31.gif]]></src><base64><![CDATA[R0lGODlhOgAeAIAAAAAAAP///yH5BAEAAAEALAAAAAA6AB4AAAJ8jI+py80AAZKu2qcoNPT61gXbxEnjh5ZnuURhCr8rO8PoK4ZbPdb2gVtpZDnWL5PpuGYu45GU8ImSwNZy6QjiONTiM9pFRofTL3eMAXO3P+1Dp5SmrkC23Hxhn/ExvZd/Y+EHGJZF6DF4qLjI2Oj4CBkpOUlZaXmJmdlQAAA7]]></base64></img><img><src><![CDATA[http://192.168.2.104/v1-htm01/199img37.gif]]></src><base64><![CDATA[R0lGODlhDwAfAIAAAAAAAP///yH5BAEAAAEALAAAAAAPAB8AAAI1jA9wy5ENH2RyImVv1jv5DYLeSH5hNi6Vg6gY9bLNylZPfBskF88KTdEBW47h6YhMKpfMZAEAOw==]]></base64></img><description><![CDATA[<p>In engineering sciences, partial differential equations play an important and central role. For example, the temperature of a metal plate can be expressed as a partial differential equation if the temperature on the boundaries is known. This is called a boundary value problem.</p>
<p>Usually, it is not easy to solve these problems. Analytical solutions exist only in very special cases. But there are some more or less &quot;good&quot; numerical ways to solve boundary value problems.</p>
<p></p>
<p>We now will look at one method which works with finite difference approximations for the derivatives of a function. For this approach, we do not look at an analytical function <i>u</i>(<i>x</i>) but we are only interested in the values of <i>u</i> at a finite set of discrete points  <img align="MIDDLE" width="104" height="27" src="http://192.168.2.104/v1-htm01/199img1.gif" alt="tex2html_wrap_inline118" /> . The distance between two adjacent points,  <img align="MIDDLE" width="13" height="17" src="http://192.168.2.104/v1-htm01/199img2.gif" alt="tex2html_wrap_inline120" />  and  <img align="MIDDLE" width="30" height="18" src="http://192.168.2.104/v1-htm01/199img3.gif" alt="tex2html_wrap_inline122" /> , is constant:  <img align="MIDDLE" width="100" height="26" src="http://192.168.2.104/v1-htm01/199img4.gif" alt="tex2html_wrap_inline124" />  (cf. figure 1).</p>
<p></p>
<p><a name="31">&nbsp;</a> <img align="BOTTOM" src="http://192.168.2.104/v1-htm01/199img5.gif" alt="figure26" /> <br />
<strong>Figure:</strong> <i>u</i>(<i>x</i>) at some discrete points  <img align="MIDDLE" width="13" height="17" src="http://192.168.2.104/v1-htm01/199img2.gif" alt="tex2html_wrap_inline120" /> </p>
<p></p>
<p>The finite difference approximation of a first derivative of the function <i>u</i>(<i>x</i>) is</p>
<p></p>
<p><img align="BOTTOM" width="500" height="40" src="http://192.168.2.104/v1-htm01/199img6.gif" alt="equation33" /></p>
<p></p>
<p>The second derivative is approximated by</p>
<p></p>
<p><img align="BOTTOM" width="506" height="42" src="http://192.168.2.104/v1-htm01/199img7.gif" alt="equation39" /></p>
<p></p>
<p>This approximation works with 2-dimensional functions <i>u</i>(<i>x</i>,<i>y</i>) as well. For simplicity we only work on square problems, i.e. (<i>x</i>, <i>y</i>) is element of  <img align="MIDDLE" width="89" height="27" src="http://192.168.2.104/v1-htm01/199img8.gif" alt="tex2html_wrap_inline136" /> . Again, the area of the function is discretized in a similar way:  <img align="MIDDLE" width="225" height="31" src="http://192.168.2.104/v1-htm01/199img9.gif" alt="tex2html_wrap_inline138" /> , for some integer  <img align="MIDDLE" width="41" height="25" src="http://192.168.2.104/v1-htm01/199img10.gif" alt="tex2html_wrap_inline140" /> . We only look at the values of <i>u</i>(<i>x</i>,<i>y</i>) at the discrete points  <img align="MIDDLE" width="198" height="28" src="http://192.168.2.104/v1-htm01/199img11.gif" alt="tex2html_wrap_inline144" /> . With this discretization, we have a function  <img align="MIDDLE" width="23" height="17" src="http://192.168.2.104/v1-htm01/199img12.gif" alt="tex2html_wrap_inline146" />  as shown in figure 2:</p>
<p></p>
<p><a name="111">&nbsp;</a> <img align="BOTTOM" src="http://192.168.2.104/v1-htm01/199img13.gif" alt="figure50" /> <br />
<strong>Figure:</strong> Function  <img align="MIDDLE" width="23" height="17" src="http://192.168.2.104/v1-htm01/199img12.gif" alt="tex2html_wrap_inline146" />  in the discretization area</p>
<p></p>
<p></p>
<p>On the boundary,  <img align="MIDDLE" width="60" height="28" src="http://192.168.2.104/v1-htm01/199img14.gif" alt="tex2html_wrap_inline150" />  is given by 4 known functions:</p>
<p></p>
<p><img align="BOTTOM" width="500" height="84" src="http://192.168.2.104/v1-htm01/199img15.gif" alt="equation57" /></p>
<p></p>
<p>The points  <img align="MIDDLE" width="18" height="25" src="http://192.168.2.104/v1-htm01/199img16.gif" alt="tex2html_wrap_inline152" />  cover the inner points of the discretization area, i.e. the area without the boundary. They are numbered from left to right and from top to bottom like English text.</p>
<p></p>
<p>What we now want to do is to solve the poisson-equation in the area  <img align="MIDDLE" width="89" height="27" src="http://192.168.2.104/v1-htm01/199img8.gif" alt="tex2html_wrap_inline136" /> :</p>
<p></p>
<p><img align="BOTTOM" width="500" height="42" src="http://192.168.2.104/v1-htm01/199img17.gif" alt="equation62" /></p>
<p></p>
<p>with the above boundary conditions. <i>f</i>(<i>x</i>,<i>y</i>) is a given 2-dimensional function. With equation (2) and the above discretization, the poisson-equation can be approximated at</p>
<p></p>
<p><img align="BOTTOM" width="572" height="36" src="http://192.168.2.104/v1-htm01/199img18.gif" alt="equation66" /></p>
<p></p>
<p>where  <img align="MIDDLE" width="21" height="26" src="http://192.168.2.104/v1-htm01/199img19.gif" alt="tex2html_wrap_inline158" />  is the function <i>f</i>(<i>x</i>,<i>y</i>), evaluated at the discrete points  <img align="MIDDLE" width="49" height="28" src="http://192.168.2.104/v1-htm01/199img20.gif" alt="tex2html_wrap_inline162" /> .</p>
<p></p>
<p>Formula (5) can be written in a more readable form, depending on the position of the discrete points:</p>
<p></p>
<p><img align="BOTTOM" width="546" height="67" src="http://192.168.2.104/v1-htm01/199img21.gif" alt="displaymath164" /></p>
<p></p>
<p>A similar equation, which we will use as an example below, is:</p>
<p></p>
<p><img align="BOTTOM" width="546" height="67" src="http://192.168.2.104/v1-htm01/199img22.gif" alt="displaymath166" /></p>
<p></p>
<p>We call the  <img align="MIDDLE" width="37" height="24" src="http://192.168.2.104/v1-htm01/199img23.gif" alt="tex2html_wrap_inline168" />  matrix on the left hand side <i>v</i> and the  <img align="MIDDLE" width="37" height="24" src="http://192.168.2.104/v1-htm01/199img23.gif" alt="tex2html_wrap_inline168" />  matrix on the right hand side <i>g</i>.</p>
<p></p>
<p>Now, equation (6b) can be formulated in every point of the discrete area of figure 2:</p>
<p></p>
<p><img align="BOTTOM" width="758" height="86" src="http://192.168.2.104/v1-htm01/199img24.gif" alt="equation92" /></p>
<p></p>
<p>and (7) is a linear equation system for the values of <i>u</i>(<i>x</i>,<i>y</i>) at the points  <img align="MIDDLE" width="69" height="25" src="http://192.168.2.104/v1-htm01/199img25.gif" alt="tex2html_wrap_inline178" />  and  <img align="MIDDLE" width="17" height="25" src="http://192.168.2.104/v1-htm01/199img26.gif" alt="tex2html_wrap_inline180" /> .</p>
<p></p>
<p>By rearranging and adding the terms on each line, the linear equation system can be formulated as:</p>
<p></p>
<p><img align="BOTTOM" width="500" height="18" src="http://192.168.2.104/v1-htm01/199img27.gif" alt="equation101" /></p>
<p></p>
<p>where <i>a</i> is a  <img align="MIDDLE" width="38" height="24" src="http://192.168.2.104/v1-htm01/199img28.gif" alt="tex2html_wrap_inline184" />  matrix and <i>b</i> is a vector with 4 elements. Vector <i>z</i> represents the unknown values of <i>u</i>(<i>x</i>,<i>y</i>) at the points  <img align="MIDDLE" width="69" height="25" src="http://192.168.2.104/v1-htm01/199img25.gif" alt="tex2html_wrap_inline178" />  and  <img align="MIDDLE" width="17" height="25" src="http://192.168.2.104/v1-htm01/199img26.gif" alt="tex2html_wrap_inline180" /> .</p>
<p></p>
<p>You are to write a program that creates the linear equation system (7) in the form (8) for any two matrices <i>v</i> and <i>g</i> (6). As input, the two matrices <i>v</i> and <i>g</i> and the functions  <img align="MIDDLE" width="81" height="25" src="http://192.168.2.104/v1-htm01/199img29.gif" alt="tex2html_wrap_inline204" />  , and <i>f</i> are given. Also, a parameter <i>n</i> is given as the number of discretization intervals. Thus,  <img align="MIDDLE" width="43" height="31" src="http://192.168.2.104/v1-htm01/199img30.gif" alt="tex2html_wrap_inline210" /> . As the result, your program should calculate the matrix <i>a</i> and the vector <i>b</i>. For this more general case, there are  <img align="MIDDLE" width="58" height="30" src="http://192.168.2.104/v1-htm01/199img31.gif" alt="tex2html_wrap_inline216" />  inner points and <i>a</i> and <i>b</i> must be sized accordingly.</p>
<p></p>
<h2><font color="#0070e8"><a name="SECTION0001001000000000000000"></a></font></h2>]]></description>
<input><![CDATA[<p>The input file consists of <i>m</i> tests. The number <i>m</i> is given in the first line of the file. The first line of each test contains the number <i>n</i> which gives the number of discretizations intervals as defined above. You may assume that  <img align="MIDDLE" width="82" height="25" src="http://192.168.2.104/v1-htm01/199img32.gif" alt="tex2html_wrap_inline228" /> . Then the  <img align="MIDDLE" width="37" height="24" src="http://192.168.2.104/v1-htm01/199img23.gif" alt="tex2html_wrap_inline168" />  matrices <i>v</i> and <i>g</i> follow. The following four lines contain the functions  <img align="MIDDLE" width="59" height="25" src="http://192.168.2.104/v1-htm01/199img33.gif" alt="tex2html_wrap_inline236" />  and  <img align="MIDDLE" width="13" height="25" src="http://192.168.2.104/v1-htm01/199img34.gif" alt="tex2html_wrap_inline238" /> , each given as a vector of order <i>n</i>+1, containing the values for 0, <i>h</i>, 2<i>h</i>, ..., 1. Finally, the function <i>f</i> is given as a <i>n</i>+1 by <i>n</i>+1 matrix. Like the vectors before, it contains the values for  <img align="MIDDLE" width="149" height="25" src="http://192.168.2.104/v1-htm01/199img35.gif" alt="tex2html_wrap_inline252" /> . Each row contains from left to right the function values for increasing <i>x</i> values while each column contains from top to bottom the function values for decreasing <i>y</i> values.</p>
<p></p>
<p>A vector occupies one line. Its values are given in ascending order, separated by a space. A <i>n</i> by <i>n</i> matrix occupies <i>n</i> lines. Its rows are given in ascending order as vectors, which occupy one line each. All values found in the input file are integer values.</p>]]></input> 
<output><![CDATA[<p>For each test found in the input file, your program should output the matrices <i>a</i> and <i>b</i>. Matrix <i>a</i> is a  <img align="MIDDLE" width="141" height="30" src="http://192.168.2.104/v1-htm01/199img36.gif" alt="tex2html_wrap_inline270" />  matrix (the discretization area (cf. figure 2) contains  <img align="MIDDLE" width="58" height="30" src="http://192.168.2.104/v1-htm01/199img31.gif" alt="tex2html_wrap_inline216" />  inner points, which are unknown). The vector <i>b</i> is of order  <img align="MIDDLE" width="58" height="30" src="http://192.168.2.104/v1-htm01/199img31.gif" alt="tex2html_wrap_inline216" /> . They should be output in the same format as the vectors and matrices in the input file. Your output should only contain integer values. Note that the expression  <img align="MIDDLE" width="15" height="31" src="http://192.168.2.104/v1-htm01/199img37.gif" alt="tex2html_wrap_inline278" />  yields an integer number and that all other calculations can also be done using integer numbers.</p>]]></output>
<sample_input><![CDATA[1
3
1 0 2
0 -4 0
3 0 4
0 5 0
6 0 7
0 8 0
3 4 5 6
0 1 2 3
3 2 1 0
6 5 4 3
1 1 1 1
2 2 2 2
3 3 3 3
4 4 4 4]]></sample_input>
<sample_output><![CDATA[-36 0 0 36
0 -36 27 0
0 18 -36 0
9 0 0 -36
-35 -188 -189 -315]]></sample_output>
<test_input><![CDATA[2
9
0 1 0
1 -4 1
0 1 0
0 0 0
0 1 0
0 0 0
0 1 2 3 4 5 6 7 8 9
9 8 7 6 5 4 3 2 1 0
2 4 6 8 2 4 6 8 9 9
4 4 4 4 4 4 4 4 4 4
9 9 9 9 9 9 9 9 9 9
1 2 3 4 5 6 7 8 9 0
8 7 6 5 4 3 2 1 0 1
3 4 5 6 7 8 9 0 1 2
9 3 4 5 6 8 3 2 9 3
9 4 3 8 4 1 9 3 4 5
9 3 4 5 6 8 2 3 4 9
9 3 8 3 2 1 8 3 9 2
9 3 8 3 2 1 2 3 4 9
0 3 8 2 1 9 2 3 5 4
3
1 0 2
0 -4 0
3 0 4
0 5 0
6 0 7
0 8 0
3 4 5 6
0 1 2 3
3 2 1 0
6 5 4 3
1 1 1 1
2 2 2 2
3 3 3 3
4 4 4 4
]]></test_input>
<test_output><![CDATA[-324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 81 -324 0 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
81 0 0 0 0 0 0 0 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 0 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 0 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 0 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 0 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 0 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 0 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 0 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 0 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 0 0 0 0 0 0 0 81 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 0 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0 0 81 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 0 0 0 0 0 0 0 81
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 0 -324 81 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324 81
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 0 0 0 0 0 0 81 -324
-970 -564 -482 -400 -318 -236 -154 -396 -479 6 5 4 3 2 1 -324 -644 5 6 7 8 9 0 -323 -159 4 5 6 8 3 2 -315 -320 3 8 4 1 9 3 -320 -483 4 5 6 8 2 3 -320 -645 8 3 2 1 8 3 -315 -807 -154 -240 -322 -404 -484 -564 -968
-36 0 0 36
0 -36 27 0
0 18 -36 0
9 0 0 -36
-8 -152 -198 -333
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[www.csie.nctu.edu.tw]]></source>
</item>
</fps>