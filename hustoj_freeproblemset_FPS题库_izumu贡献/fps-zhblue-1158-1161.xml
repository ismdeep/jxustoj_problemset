<?xml version="1.0" encoding="UTF-8"?>
<fps version="1.0">
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题11.1]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[定义一个结构体变量（包括年、月、日）。计算该日在本年中是第几天，注意闰年问题。  
]]></description>
<input><![CDATA[年月日]]></input>
<output><![CDATA[当年第几天]]></output>
<sample_input><![CDATA[2000 12 31]]></sample_input>
<sample_output><![CDATA[366]]></sample_output>
<test_input><![CDATA[2009 9 17]]></test_input>
<test_output><![CDATA[260]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C"><![CDATA[
struct  
{int year;  
 int month;  
 int day;  
}date;  
main()  
{int days;
//printf("Input  year,month,day:");
scanf("%d%d%d",&date.year,&date.month,&date.day);
switch(date.month)  
 {case 1: days=date.day;    break;  
 case 2: days=date.day+31; break;  
 case 3: days=date.day+59; break;  
 case 4: days=date.day+90; break;  
 case 5: days=date.day+120;break;  
case 6: days=date.day+31; break;  
   case 7: days=date.day+181; break;  
   case 8: days=date.day+212; break;  
case 9: days=date.day+243; break;  
case 10: days=date.day+273; break;  
case 11: days=date.day+304; break;  
case 12: days=date.day+334; break;  
}  
if((date.year%4==0&&date.year%100!=0||date.year%400==0)&&date.month>=3)days+=1;  
printf("%d",days);  
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题11.3]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[现有有N个学生的数据记录，每个记录包括学号、姓名、三科成绩。
编写一个函数input,用来输入一个学生的数据记录。
编写一个函数print,打印一个学生的数据记录。
在主函数调用这两个函数，读取N条记录输入，再按要求输出。
N<100]]></description>
<input><![CDATA[学生数量N占一行
每个学生的学号、姓名、三科成绩占一行，空格分开。]]></input>
<output><![CDATA[每个学生的学号、姓名、三科成绩占一行，逗号分开。]]></output>
<sample_input><![CDATA[2
a100 zhblue 70 80 90
b200 newsclan 90 85 75
]]></sample_input>
<sample_output><![CDATA[a100,zhblue,70,80,90
b200,newsclan,90,85,75
]]></sample_output>
<test_input><![CDATA[3
1 2 3 4 5
5 6 7 8 9
10 11 12 13 14
]]></test_input>
<test_output><![CDATA[1,2,3,4,5
5,6,7,8,9
10,11,12,13,14
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C"><![CDATA[
int N=100;
struct student  
{char num[6];  
   char name[8];  
   int score[3];  
}stu[100]; 
void print(struct student st)  
{	 int i,j;  
     printf("%s,%s",st.num,st.name);  
     for(j=0;j<3;j++)  
     printf(",%d",st.score[j]);  
     printf("\n");  
} 
main()  
{int i,j ;  
   scanf ("%d",&N);
   for(i=0;i<N;i++)  
{
	//printf("Input score of student %d:\n",i+1);  
     //printf("no.:");  
     scanf("%s",stu[i].num);  
     ///printf("name:");  
     scanf("%s",stu[i].name);  
     for(j=0;j<3;j++)  
     {//printf("score%d:",j+1);  
      scanf("%d",&stu[i].score[j]);  
}  
 
 print(stu[i]);  
}  


}]]></solution>
<spj><![CDATA[]]></spj>
</item>
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题11.5]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[有N个学生，每个学生的数据包括学号、姓名、3门课的成绩，从键盘输入N个学生的数据，要求打印出3门课的总平均成绩，以及最高分的学生的数据（包括学号、姓名、3门课成绩）]]></description>
<input><![CDATA[学生数量N占一行每个学生的学号、姓名、三科成绩占一行，空格分开。]]></input>
<output><![CDATA[各门课的平均成绩
最高分的学生的数据（包括学号、姓名、3门课成绩）]]></output>
<sample_input><![CDATA[2
1 blue 90 80 70
b clan 80 70 60]]></sample_input>
<sample_output><![CDATA[85 75 65
1 blue 90 80 70]]></sample_output>
<test_input><![CDATA[3
1 blue 85 75 65
2 clan 80 70 60
a zzy 90 80 70
]]></test_input>
<test_output><![CDATA[85 75 65
a zzy 90 80 70]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C++"><![CDATA[
#include<stdio.h>
#define N 100 
struct student
{
char num[6];
char name[8];
int score[4];
int avr;
}stu[N];
int r;

int main()
{
  int sum3=0,sum1=0,sum2=0,maxi;
  int sum;
  int max;
  scanf("%d",&r);
  int i,j;
  for(i=0;i<r;i++)
  {
   scanf("%s%s",stu[i].num,stu[i].name);
   for(j=0;j<3;j++)
   {
    scanf("%d",&stu[i].score[j]);
   }

}

max=0;
maxi=0;
 for(i=0;i<r;i++)
 {
  sum=0;
  sum1+=stu[i].score[0];
  sum2+=stu[i].score[1];
  sum3+=stu[i].score[2];
  for(j=0;j<3;j++)
    sum+=stu[i].score[j];
  stu[i].avr=sum/3;
  
  if(sum>max)
  {
  max=sum;
  maxi=i;
  }

 }
printf("%d %d %d",sum1/r,sum2/r,sum3/r);
putchar('\n');

printf("%s %s %d %d %d",stu[maxi].num,stu[maxi].name,stu[maxi].score[0],stu[maxi].score[1],stu[maxi].score[2]);


return 0;
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题11.8]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[已有a、b两个链表，每个链表中的结点包括学好、成绩。要求把两个链表合并，按学号升序排列。  ]]></description>
<input><![CDATA[第一行，a、b两个链表元素的数量N、M,用空格隔开。
接下来N行是a的数据
然后M行是b的数据
每行数据由学号和成绩两部分组成

]]></input>
<output><![CDATA[按照学号升序排列的数据]]></output>
<sample_input><![CDATA[2 3
5 100
6 89
3 82
4 95
2 10]]></sample_input>
<sample_output><![CDATA[2 10
3 82
4 95
5 100
6 89]]></sample_output>
<test_input><![CDATA[15 15
2 20
4 40
6 60
8 80
10 100
12 120
14 140
16 160
18 180
20 200
22 220
24 240
26 260
28 280
30 300
1 10
3 30
5 50
7 70
9 90
11 110
13 130
15 150
17 170
19 190
21 210
23 230
25 250
27 270
29 290]]></test_input>
<test_output><![CDATA[1 10
2 20
3 30
4 40
5 50
6 60
7 70
8 80
9 90
10 100
11 110
12 120
13 130
14 140
15 150
16 160
17 170
18 180
19 190
20 200
21 210
22 220
23 230
24 240
25 250
26 260
27 270
28 280
29 290
30 300]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="Java"><![CDATA[
import java.util.Scanner;
import java.io.*;
public class Main {
	public static Scanner cin=new Scanner(System.in);
	public static void main(String[] args){
		int n=cin.nextInt();
		int m=cin.nextInt();
		int num[][]=new int[m+n][2];
		int tmp[]={0,0};
		for(int i=0;i<m+n;i++)
		{
			for(int j=0;j<2;j++)
			{
				num[i][j]=cin.nextInt();
			}
		}
		for(int i=0;i<m+n-1;i++)
		{
			for(int j=i+1;j<m+n;j++)
			{
				if(num[j][0]<num[i][0])
				{
					tmp=num[i];
					num[i]=num[j];
					num[j]=tmp;
				}
			}
		}
		for(int i=0;i<m+n;i++)
		{
			System.out.println(num[i][0]+" "+num[i][1]);
		}
		
		
	}
	
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
</fps>