<?xml version="1.0" encoding="UTF-8"?> 
<fps version="1.1" url="http://code.google.com/p/freeproblemset/">
	<generator name="HUSTOJ" url="http://code.google.com/p/hustoj/"/>
	<item>
<title><![CDATA[Equations]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<description><![CDATA[<p>Given 2 equations on the variables</p>
<i>x</i>
<p>and</p>
<i>y</i>
<p>, solve for</p>
<i>x</i>
<p>and</p>
<i>y</i>
<p>.</p>
<p>The first line of input contains N, the number of test cases.  Each test case consists of two equations, each on a separate line.  An empty line separates cases.  An equation consists of two or more terms separated by addition,  subtraction, or equality operators.  A term is an integer, or a variable name (<i>x</i> or <i>y</i>) optionally preceded by a minus sign or an integer coefficient.  There is exactly one equality operator.  All operators are surrounded by spaces, and there are no spaces within terms.  For each case, print two lines, giving the values of <i>x</i> and <i>y</i> as rationals in simplest terms.  If <i>x</i> or <i>y</i> has no unique rational value such that both equations hold, print &quot;don't know&quot; for its value.  Print an empty line between cases.</p>]]></description>
<input><![CDATA[]]></input> 
<output><![CDATA[]]></output>
<sample_input><![CDATA[7
2x + 3y = x
5 = x + y + 3

2x + 3y = 0
10x = -15y

2x + 3y = 0
10x = -15y + 1

x = 1
3x = 6y

2x = 3x + -x + y
x + y = x + y

2x = -3
-2y = 3

1 = 2
x = 3
]]></sample_input>
<sample_output><![CDATA[3
-1

don't know
don't know

don't know
don't know

1
1/2

don't know
0

-3/2
-3/2

don't know
don't know
]]></sample_output>
<test_input><![CDATA[65
2x + 3y = 2x + 3y + 1
x = 2

2x + 3y = x
5 = x + y + 3

2x + 3y = 0
10x = -15y

2x + 3y = 0
10x = -15y + 1

x = 1
3x = 6y

2x = 3x - x + y
x + y = x + y

x = 3
x = y

x = 3
x = x

x = x
x = 3

y = 6
y = y

y = y
y = 6

y = 6
y = 6

x = y
y = x

x = 3
x = 4

x = 3
y = 6

77x + 35x - -51x - -73y = -41y - 40
-89y + -71y - -38x = -33x + -98

67x - -89x + 73 + 84x = 98y + 70y - -9y - -27y - 96x
-16 = 36y

13y - -5 = 45y + -66y + 50x - -24y - 84
99 - -24 = 39x - 86 + 95x - 78y + -3y

-48y + -20y + -35y = -56y - 29 + -3y
9x + -44y = 53

-17y = -76x + 32y
-30 - 15x + 96y - -55y = -49x + 79x - -72x - 93x - 64

-44 + -73x + 36x + -63x + -93 = 21y + -71x + 93y
-89 + 76x + 63y - -94x = 4x - -12 + 17 - 43

-x + -56 + 39y - -31y = 42y
55x - -89y - -1 = 46y - -78y - -95x

-22y - 36x = -74
-84 = -42y + -38y - -64y + 79x

73y + 30x - -40 + 81y = 96 + -87
26y = -16

76 = 36x + 56x - -13y - 72 + 36y
-94 + 72x + -81x = 21y + -89y + 5

84x - -76x + 96x = -70y
-28y + 85y + -60y = -2y - 90 - -91

32x - -96y + -27y - -45x - 79x = 93x + 67y
54 + 44x - 6y + -58 = 28x - 8

-92x - 3x + -52 - 67 = 68 - -54
90x + 63y + -8 = 25y - 75y + 29x - -86 - 4y

48x - 94 + -57y = -98
-19y - 59y + 34x - -85 = 4y

-15x + 35 - -62y + -11y - -8y = 43 + 90 - 41 - -68y - 60
-19 - -75y + -23 - -74x = -43y - -95y

0 - 94x - 78x = 46x + 70
93x = -73y - -86x

-88 - 69 - 55y = -80
38x - -16y + -94x = -51y + -41y - 45 + -42y

-17x - 57x + 29 = -41y - -75 - -67x + -7 - -x
63x - 73x + -38 - -8x + 15y = 57x + 47x + -79y - -46y - 25x

-98 + 96x = 38x - -79
79 + 36 - -17y = 59 - -1 + 50y

5 = -51y + -95y + 75y - 89x
-95x - 82y - -7y - 93 = -47y - -86 + 77 + -12

-6y = 46y + -9x + 73y
10 = -83 + -45x

4y + -67 + -27 + -95x = -32y
95y = 49y + -74x

81x - -64y - 18 = 42y - 79
72y = -66x + -28x - -37y - -70x - -41

-18 - -96x + -2 = -60x + -38 + -59x + 24x - 54
65 + 76 = -82y + -47y + 59

20 - 34x = 91 - 15 + 89y
-84x + 39 = 78y

14 + -74x + -77x + 32y = -19 - 79y
31 + -6y + -97y + 82y + -85x = -75x

51 - 34 - -85x = 8 + 62x + 76x
87 - -79 + -40 = -89x - -15x - 83 - 16x - 25

-10y - -82y + 28 + 10x - -75y = 70
22 - -43 + 26y + -49 = 10 + 98 - 93 - 76x

-13 + -43x - -83y = 35 - 84
-34x - 28y = 93x

-28 + -100y + -17x = 27
34x - -79y = 85 - 61y - 41x - -50y

-83 + -85 + 64y = -37x - -63y + -72 - 87y - 41
11y + 61y + 12y = 6

-11x - 4 + 41y = 38y - 70y - 60y - -35 - -14y
35 + 93 + 9x + -36 - -5y = 13y - 49y + 93x - 60 + -14

40 + 61y + -50y - -25x = -58y + 19y - -31y
83y + 43 = 56x + -34y

92y - -32x - 74y = 18 + 77x - 73y
33 - -82 + 26y = 80

5y = -71y - 60y - 19 + 2x
83x = 40y + 38x

10y + -10y + -62x + -33 = -29 + -5x
54 + -68y - 73 + -37x + -6y = -y + -36 - -14x + 15

-66 + 22 = 73y + 42x
39 + -82y - -31y - 33 - -81y = -65x + -31y + -98x - -11 + 60y

-71x - -8y = 22x + 79 - 78
-18x = -1

53y - 94y - 7y + -36x - -20 = 94 + -63y
12y + 9y - -92x + 95y + -5x = 59y - -48y - 25y

-11 - -22 - 96y = 33x - -x
15y - -61y + 98y + -98y + 28y = -96y - -17x + -5y + 72x

25x - -55 - 39y + -97x + 42x = 39x - 96 + -6y + 19y
-68y = -21y + -65 - 7

76 - -99 - -8y = -4x
35y + -94x + -49y + 30x - 65y = 2y + 91y + -16x + 19x

-73 + 43x + 68 + -57x = 88 - -20x - -82x + -2y
79x = -34x

78x = 66 - 47y - -14
0 + 32y + 51x - -51x + 6 = -97 - -72 + -67x

-86y = -3y + -92y
-21 - 14y + 65y - -74 - -71x = 52y - 15 + -72 + -87y

86 = 63x - 97y + 82x
-74 = 65y

46x + -38x - -58 - -93 - -31x = -85y - 24 + -49 + 43 + -39x
-12y - 41x = 24

62y = -30x + -34 - 15y - 32x
-67x = -20x + -87 - -56y + 38

-89 - -19y = -17y + 35 - 69y + -28x
-77x = -43x + -61

71y = -82 - -17y + -3y + -26 + -10
29x - -8y + 49x = -78y - -57y + 66 - -47x - -80x
]]></test_input>
<test_output><![CDATA[don't know
don't know

3
-1

don't know
don't know

don't know
don't know

1
1/2

don't know
0

3
3

3
don't know

3
don't know

don't know
6

don't know
6

don't know
6

don't know
don't know

don't know
don't know

3
6

-8786/17087
6567/17087

-491/1008
-4/9

5119/2710
738/1355

82/9
29/44

-833/5150
-646/2575

5727/5699
-24917/17097

-92/55
747/385

-332/1157
4435/1157

829/390
-8/13

5213/6697
10440/6697

35/128
-1

4/269
190/269

-241/95
7877/3705

4517/1998
1972/999

103/107
-136/107

-35/109
245/7957

-165/56
-7/5

-314/3495
2237/3495

177/58
5/3

-17184/4253
21241/4253

-31/15
-93/625

-2162/3517
3478/3517

-3037/2307
1595/769

-72/191
-82/129

13/8
-5/4

1378/1427
4351/4281

don't know
don't know

-1239/10912
1601/5456

112/1305
-508/1305

1345/597
-557/597

341/259
1/14

21353/9545
5102/9545

-3863/3989
-3315/3989

-281/90
-35/26

-19/151
-171/1208

-4/57
106/1387

409/11857
-7382/11857

1/18
37/48

-2516/2529
2146/843

2255/15514
979/15514

3353/3243
72/47

-7525/38
11725/152

0
93/2

-309/419
1226/419

-140/71
0

-1588/9425
-74/65

132/2549
-5549/2549

811/21
-4636/147

61/34
418/595

-7184/2793
-118/57
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[http://plg1.cs.uwaterloo.ca/~acm00/020928/A.html]]></source>
<solution language="C"><![CDATA[#include <stdio.h>
#include <ctype.h>

int i,j,k,m,n,N;
char buf[10000];
char *b;
int val,sign,cx[2],cy[2],c[2],eq,state,coef,op;
int xnum,ynum,den;

int gcd(int a, int b){
   if (b == 0) return a;
   if (b < 0) return -gcd(a,-b);
   if (a < 0) return gcd(-a,b);
   return gcd(b,a%b);
}

void pr(int n, int d){
   if (n%d == 0) printf("%d\n",n/d);
   else printf("%d/%d\n",n/gcd(n,d),d/gcd(n,d));
}

main(){
   scanf("%d",&N); 
   gets(buf);
   while (N--) {
      if (m++) printf("\n");
      for (i=0;i<2;i++){
         gets(buf);
         b = buf;
         op = 1;
         eq = 1;
         cx[i] = cy[i] = c[i] = 0;
         while (*b) {
            while (*b == ' ') b++;
            sign = 1;
            if (*b == '+') {
               sign = 1;
               b++;
            } else if (*b == '-') {
               sign = -1;
               b++;
            }
            if (!isdigit(*b)) val = 1;
            else val = 0;
            while (isdigit(*b)) {
               val = val * 10 + (*b-'0');
               b++;
            }
            if (*b == 'x') {
               cx[i] += sign * op * val;
               b++;
            } else if (*b == 'y') {
               cy[i] += sign * op * val;
               b++;
            } else c[i] += sign * op * val;
            while (*b == ' ') b++;
            if (*b == '=') {
               eq = -1;
               op = -1;
               b++;
            } else if (*b == '+') {
               op = eq;
               b++;
            } else if (*b == '-') {
               op = -eq;
               b++;
            } else if (!*b) break;
            else printf("oops! at %s\n",b);
         }
         //printf("%dx + %dy + %d = 0\n",cx[i],cy[i],c[i]);
      }
      den = (cx[0]*cy[1]) - (cx[1] * cy[0]);
      if (den) {
         xnum = (-c[0]*cy[1]) - (-c[1] * cy[0]);
         ynum = (cx[0]*-c[1]) - (cx[1] * -c[0]);
         pr(xnum,den);
         pr(ynum,den);
      } else if (c[0] && !cx[0] && !cy[0] || cy[1] && !cx[1] && !cy[1]) {
         printf("don't know\ndon't know\n");
      } else {
         if (cx[0] && !cy[0] && !cx[1]) pr(-c[0],cx[0]);
         else if (cx[1] && !cy[1] && !cx[0]) pr(-c[1],cx[1]);
         else if (cx[1] && !cy[1] && cx[0] && !cy[0] && cx[1]*c[0] == cx[0]*c[1]) pr(-c[0],cx[0]);
         else printf("don't know\n");
         if (cy[0] && !cx[0] && !cy[1]) pr(-c[0],cy[0]);
         else if (cy[1] && !cx[1] && !cy[0]) pr(-c[1],cy[1]);
         else if (cy[1] && !cx[1] && cy[0] && !cx[0] && cy[1]*c[0] == cy[0]*c[1]) pr(-c[0],cy[0]);
         else printf("don't know\n");
      }
      gets(buf);
   }
}
]]></solution>
</item>
<item>
<title><![CDATA[Euclid's Game]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<description><![CDATA[<p>Two players, Stan and Ollie, play, starting with two natural numbers. Stan, the first player, subtracts any positive multiple of the lesser of the two numbers from the greater of the two numbers, provided that the resulting number must be nonnegative. Then Ollie, the second player, does the same with the two resulting numbers, then Stan, etc., alternately, until one player is able to subtract a multiple of the lesser number from the greater to reach 0, and thereby wins. For example, the players may start with (25,7):</p>
<pre>
         25 7
         11 7
          4 7
          4 3
          1 3
          1 0
</pre>
<p>an Stan wins.</p>
<p>The input consists of a number of lines.  Each line contains two positive integers giving the starting two numbers of the game. Stan always starts.</p>
<p>For each line of input, output one line saying either <tt>Stan wins</tt> or <tt>Ollie wins</tt> assuming that both of them play perfectly. The last line of input contains two zeroes and should not be processed.</p>]]></description>
<input><![CDATA[]]></input> 
<output><![CDATA[]]></output>
<sample_input><![CDATA[34 12
15 24
0 0
]]></sample_input>
<sample_output><![CDATA[Stan wins
Ollie wins
]]></sample_output>
<test_input><![CDATA[1111111111 2
1 1
36 20
28 20
25 7
4 4
8 4
12 8
20 8
34 12
15 24
846930886 1804289383
1714636915 1681692777
424238335 1957747793
1649760492 719885386
1189641421 596516649
1350490027 1025202362
1102520059 783368690
1967513926 2044897763
1540383426 1365180540
1303455736 304089172
521595368 35005211
1726956429 294702567
861021530 336465782
233665123 278722862
468703135 2145174067
1801979802 1101513929
635723058 1315634022
1125898167 1369133069
2089018456 1059961393
1656478042 628175011
1653377373 1131176229
1914544919 859484421
756898537 608413784
1973594324 1734575198
2038664370 149798315
184803526 1129566413
1424268980 412776091
749241873 1911759956
42999170 137806862
135497281 982906996
2084420925 511702305
1827336327 1937477084
1159126505 572660336
1632621729 805750846
1433925857 1100661313
84353895 1141616124
2001100545 939819582
1548233367 1998898814
1585990364 610515434
760313750 1374344043
356426808 1477171087
1889947178 945117276
709393584 1780695788
1918502651 491705403
1474612399 752392754
1264095060 2053999932
1843993368 1411549676
1984210012 943947739
1749698586 855636226
1956297539 1469348094
463480570 1036140795
1975960378 2040651434
1892066601 317097467
927612902 1376710097
603570492 1330573317
660260756 1687926652
485560280 959997301
593209441 402724286
894429689 1194953865
1947346619 364228444
270744729 221558440
1633108117 1063958031
2007905771 2114738097
822890675 1469834481
791698927 1610120709
498777856 631704567
524872353 1255179497
1572276965 327254586
1703964683 269455306
1600028624 352406219
2040332871 160051528
1120048829 112805732
515530019 378409503
1573363368 1713258270
2077486715 1409959708
1631518149 1373226340
289700723 200747796
168002245 1117142618
439493451 150122846
1760243555 990892921
1622597488 1231192379
338888228 111537764
438792350 2147469841
269441500 1911165193
116087764 2142757034
155324914 1869470124
1982275856 8936987
387346491 1275373743
841148365 350322227
1760281936 1960709859
1186452551 771151432
971899228 1244316437
213975407 1476153275
1626276121 1139901474
2130794395 653468858
1884661237 1239036029
1350573793 1605908235
1605894428 76065818
1987231011 1789366143
1784639529 1875335928
0 0
]]></test_input>
<test_output><![CDATA[Stan wins
Stan wins
Stan wins
Ollie wins
Stan wins
Stan wins
Stan wins
Ollie wins
Stan wins
Stan wins
Ollie wins
Stan wins
Ollie wins
Stan wins
Stan wins
Stan wins
Ollie wins
Ollie wins
Ollie wins
Ollie wins
Stan wins
Stan wins
Stan wins
Stan wins
Ollie wins
Stan wins
Stan wins
Stan wins
Ollie wins
Stan wins
Stan wins
Ollie wins
Stan wins
Ollie wins
Ollie wins
Stan wins
Stan wins
Stan wins
Stan wins
Stan wins
Stan wins
Stan wins
Ollie wins
Stan wins
Stan wins
Ollie wins
Stan wins
Stan wins
Ollie wins
Stan wins
Stan wins
Stan wins
Stan wins
Stan wins
Stan wins
Stan wins
Stan wins
Ollie wins
Stan wins
Stan wins
Ollie wins
Stan wins
Ollie wins
Stan wins
Ollie wins
Stan wins
Stan wins
Stan wins
Ollie wins
Ollie wins
Stan wins
Ollie wins
Ollie wins
Ollie wins
Stan wins
Stan wins
Ollie wins
Stan wins
Stan wins
Stan wins
Stan wins
Stan wins
Stan wins
Ollie wins
Ollie wins
Ollie wins
Ollie wins
Ollie wins
Stan wins
Stan wins
Stan wins
Ollie wins
Stan wins
Stan wins
Stan wins
Stan wins
Stan wins
Stan wins
Stan wins
Stan wins
Ollie wins
Ollie wins
Ollie wins
Stan wins
Ollie wins
Stan wins
Ollie wins
Ollie wins
Stan wins
Ollie wins
Ollie wins
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C++"><![CDATA[#include <stdio.h>

int i,j,k,a,b;

int gcd(int a, int b) {
   if (b > a) return gcd(b,a);
   if (b == 0) return 0;  // this player loses
   if (a/b == 1) return !gcd(b,a%b); // no choice
   return 1; // this player can force a win
}

main(){
   while (2 == scanf("%d%d",&a,&b) && a) {
      if (gcd(a,b)%2) printf("Stan wins\n");
      else printf("Ollie wins\n");
   }
}
]]></solution>
</item>
<item>
<title><![CDATA[Arctic Network]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<description><![CDATA[<p>The Department of National Defence (DND) wishes to connect several northern outposts by a wireless network.  Two different communication technologies are to be used in establishing the network:  every outpost will have a  radio transceiver and some outposts will in addition have a satellite  channel.</p>
<p>Any two outposts with a satellite channel can communicate via the satellite, regardless of their location.  Otherwise, two  outposts can communicate by radio only if the distance between them does not exceed D, which depends of the power of the transceivers.   Higher power yields higher D but costs more.   Due to purchasing and maintenance considerations, the transceivers at the outposts must be identical; that is, the value of D is the same for every pair of outposts.</p>
<p>Your job is to determine the minimum D required for the transceivers.  There must be at least one communication path (direct or indirect) between every pair of outposts.</p>
<p>The first line of input contains N, the number of test cases.  The first line of each test case contains 1 &lt;= S &lt;= 100, the number of satellite channels,  and S &lt; P &lt;= 500, the number of outposts.  P lines follow, giving the (x,y) coordinates of each outpost in km (coordinates are integers between 0 and 10,000).   For each case, output should consist of a single line giving the minimum D required to connect the network. Output should be specified to 2 decimal points.</p>]]></description>
<input><![CDATA[]]></input> 
<output><![CDATA[]]></output>
<sample_input><![CDATA[1
2 4
0 100
0 300
0 600
150 750
]]></sample_input>
<sample_output><![CDATA[212.13
]]></sample_output>
<test_input><![CDATA[5
1 2
0 0
100 100
2 4
0 100
0 300
0 600
150 750
1 500
9383 886
2777 6915
7793 8335
5386 492
6649 1421
2362 27
8690 59
7763 3926
540 3426
9172 5736
5211 5368
2567 6429
5782 1530
2862 5123
4067 3135
3929 9802
4022 3058
3069 8167
1393 8456
5011 8042
6229 7373
4421 4919
3784 8537
5198 4324
8315 4370
6413 3526
6091 8980
9956 1873
6862 9170
6996 7281
2305 925
7084 6327
336 6505
846 1729
1313 5857
6124 3895
9582 545
8814 3367
5434 364
4043 3750
1087 6808
7276 7178
5788 3584
5403 2651
2754 2399
9932 5060
9676 3368
7739 12
6226 8586
8094 7539
795 570
1434 378
7467 6601
97 2902
3317 492
6652 756
7301 280
4286 9441
3865 9689
8444 6619
8440 4729
8031 8117
8097 5771
4481 675
709 8927
4567 7856
9497 2353
4586 6965
5306 4683
6219 8624
1528 2871
5732 8829
9503 19
8270 3368
9708 6715
6340 8149
7796 723
2618 2245
2846 3451
2921 3555
2379 7488
7764 8228
9841 2350
5193 1500
7034 7764
124 4914
6987 5856
3743 6491
2227 8365
9859 1936
1432 2551
6437 9228
3275 5407
1474 6121
8858 4395
6029 1237
8235 3793
5818 4428
6143 1011
5928 9529
8776 2404
4443 5763
4613 4538
8606 6840
2904 4818
5128 688
7369 7917
9917 6996
3324 7743
9470 2183
8490 5499
9772 6725
5644 5590
7505 8139
2954 9786
7669 8082
8542 8464
197 9507
9355 8804
6348 8611
3622 7828
9299 7343
5746 5568
4340 5422
3311 3810
7605 1801
5661 3730
4878 1305
9320 8736
9444 8626
8522 3465
6708 3416
8282 3258
2924 7637
2062 5624
2600 2036
3452 1899
9379 5550
7468 71
973 7131
3881 4930
8933 5894
8660 163
7199 7981
8899 2996
2959 3773
2813 9668
7190 1095
2926 6466
5084 1340
2090 7684
3376 5542
5936 9107
7445 9756
9179 8418
6887 9412
3348 2172
1659 2009
2336 5210
6342 7587
8206 9301
7713 7372
5321 1255
4819 4599
7721 9904
5939 9811
3940 5667
1705 6228
1127 9150
5984 6658
3920 9224
2422 7269
1396 4081
5630 84
9292 1972
7672 3850
7625 5385
1222 9299
6640 6042
3898 713
2298 6190
524 2590
8209 8581
8819 9336
7732 1155
5994 8004
379 4769
5273 1776
8850 7255
1860 8142
5579 5884
1993 3205
7621 9567
2504 613
1961 2754
1326 4259
8944 8202
3202 3506
6784 2021
2842 868
9528 5189
8872 9908
9958 498
8036 8808
7753 6248
3303 3333
2133 1648
2890 9754
7567 1746
368 9529
4500 8046
3788 9797
6249 6990
3303 3033
5363 2497
253 4892
7686 9125
1152 3996
5975 9188
9157 3729
5436 2460
3414 3921
460 6304
28 8027
8050 6748
7556 8902
4794 7697
8699 1043
1039 2002
428 6403
4500 681
7647 8538
6159 5151
2535 2134
4339 1692
2215 6127
504 5629
49 964
8285 6429
5343 6335
3177 2900
5238 7971
6949 289
5367 7988
2292 5795
743 3144
2829 8390
1682 5340
3541 569
3826 4232
2261 6042
360 9117
8023 6761
81 6309
3190 5425
8996 6367
4677 4234
690 1626
4524 6057
9614 3168
8205 358
6312 7386
5100 4346
2726 4994
4916 6552
5578 3529
8946 2290
2647 6970
9051 9080
9631 8593
857 8627
1312 1886
9214 8355
3512 90
4412 9479
9610 8969
6189 2274
6355 7641
6620 5433
8987 7888
8338 4566
7770 7284
6856 417
606 2260
5849 237
7205 3059
5217 8518
4945 783
6873 8458
873 7637
4289 483
6607 478
2757 9314
4471 5729
1100 3459
3618 9438
8025 1388
3074 1233
8157 3681
3493 358
270 699
3417 1839
5569 8363
2622 8794
3173 9847
6431 7462
6682 9390
4292 5791
5057 5115
1521 6157
8574 1491
1947 2951
9231 5021
537 3740
5054 4030
4098 5325
1081 7516
3516 3002
2231 6139
1796 5404
2338 4580
9218 9021
3970 9862
4812 5379
4977 2685
1536 9904
4176 3483
9207 9759
4857 9744
3499 9911
127 3950
5236 7560
7818 5105
563 49
1244 8711
1805 9934
3291 7375
8955 3614
3589 3768
8993 4918
2805 6882
4822 6982
6717 4030
3093 1574
126 6593
1486 253
543 3074
7814 4713
8179 8377
4762 5775
7088 2919
5710 6732
294 1017
346 235
1137 5691
5153 3943
2573 6328
925 9291
6710 4018
7217 6836
6963 5055
7090 3858
8130 4904
8571 2661
9633 9685
4789 3073
2604 6851
9805 9250
7868 6503
9485 9006
2195 4639
2949 1120
967 226
6763 7677
596 3981
865 7560
9036 7955
7770 3518
9211 6342
2532 5196
2379 7321
8270 4984
4172 4427
4234 2040
7283 72
7398 5830
1063 347
6950 2030
573 3714
6059 7522
4047 6924
5082 9435
1232 9204
2954 443
1898 5486
5640 4278
9159 262
9262 9683
1041 9848
1723 8324
6272 9122
4154 7335
5821 7457
9365 2747
1171 1776
269 5218
8701 1703
4653 9933
907 3959
6728 2806
5797 8720
7084 1308
5334 2698
991 6376
8898 2715
1052 5171
8189 1559
2506 4010
9016 8224
3109 6539
0 3378
8109 5053
5081 9114
1338 5989
9426 8067
5147 5223
6787 2231
6532 2122
1281 3875
4850 179
6590 2254
5350 1131
3813 7857
1494 9181
6081 4603
5720 2433
7982 181
7487 9415
9296 8825
5404 8722
6892 551
297 32
9134 3181
8506 415
7057 9708
595 9999
1962 2297
7483 5776
154 8977
1309 2587
9932 3382
5021 4266
3563 8860
3682 9211
7685 9086
4285 930
5990 4583
7314 1476
4116 5820
1892 7525
5528 8839
7525 7490
1136 1360
9618 7643
337 928
6582 6621
4310 7955
888 4225
6815 4570
3437 853
8 7722
1783 2350
8657 9097
3827 9126
1269 2071
6651 3149
910 528
639 8398
1888 6610
2393 8577
3890 8976
5199 4552
6931 6087
8777 99
657 8566
952 7017
2641 2735
9368 1298
8184 3195
6776 5805
5266 3428
8954 2528
308 9593
7278 2197
2555 9672
774 6445
5000 2325
997 8283
8412 6127
8382 5421
10 500
4536 127
6906 2999
7697 3316
9260 6839
7570 5567
2986 3486
3008 5767
6277 6966
136 435
8693 37
4946 9719
5367 212
7096 3934
9540 1117
6095 8674
3950 631
8802 7208
3630 2851
525 9242
9690 4447
1161 2676
7934 4169
4795 563
1135 4931
7351 6180
1320 2297
5900 6688
8861 2996
6974 8401
4114 3069
3428 4416
52 8582
1625 3682
1433 8502
9277 1123
2949 6790
151 7235
960 4946
7799 8447
6229 1502
4628 7549
3799 528
589 9013
9876 7563
3766 3990
6984 7194
4759 7036
5776 6384
7071 7209
1238 2700
4684 539
9490 4835
7775 450
9781 1926
5250 2362
3428 9878
6264 3579
6758 6853
8944 6634
769 2711
6977 4105
6257 1736
1142 2034
4472 4565
5595 5710
7265 6632
6249 3107
1467 376
3558 7601
2302 5160
9963 2082
5038 6227
2014 1796
9433 958
8430 6554
3669 5407
659 9927
3495 1801
8313 7967
2718 260
29 6335
6892 2631
9443 4712
3007 9353
2313 1662
4513 8628
96 9551
4856 2110
7699 641
3069 2481
7195 3090
7889 7854
9369 7736
6008 7682
5704 8726
4295 5733
1414 1187
8364 857
2251 7724
210 4564
5738 4723
3193 5834
626 4401
7945 8325
1394 7366
806 8589
456 5047
2795 9826
2784 8803
3860 4840
3882 8155
573 1648
5695 5290
2505 7946
9366 9067
8863 5104
3790 8408
7290 768
9161 5235
9093 555
2601 6251
9144 9410
7651 8291
5588 435
3447 9448
5275 3681
3956 2200
5329 9651
3842 7834
3949 9560
6901 9164
4664 7043
7572 1955
7811 6733
3542 3256
3640 2496
5859 9136
8258 3510
7428 3846
297 875
3294 1924
4556 7250
4125 9885
3253 4319
4071 3555
3880 7324
2719 4896
4367 6644
3203 8530
9729 6746
1786 3370
5594 7645
8858 3852
7508 6286
7698 7805
3513 7344
9730 4421
947 207
658 4200
878 4729
4107 4758
2053 3179
6007 2772
6175 9210
1302 5904
2308 9440
5626 7902
7086 4485
8106 946
7123 5804
8751 637
9501 4833
1410 448
1392 2069
1000 2271
3150 5108
3381 1556
8287 9388
4328 4462
4951 1983
6718 7259
1423 2345
1514 4861
3182 5972
5807 6657
8129 911
7294 7630
5744 5057
8078 7137
7126 9078
5760 6628
4186 9141
8184 8825
4882 8865
9639 9833
848 6358
3444 8623
5055 1310
3485 4589
7283 5644
1246 5412
6555 4893
3042 2300
9950 1120
5789 3428
6550 1549
56 737
7042 8241
5914 1924
3458 5554
8109 658
8264 1554
9281 3319
9216 9118
4260 6499
4763 5506
8263 1318
399 1305
9970 6701
8777 2111
129 5328
12 186
2417 7055
4779 4683
8979 4589
237 7089
5247 4853
4995 880
4524 4211
9999 8784
711 1114
643 5326
8784 1042
6632 5107
4096 1761
7218 4225
3441 7231
763 2210
4286 1894
6894 9617
2835 3483
3058 8082
8337 8053
5315 9213
8617 5314
7998 5680
2780 8641
1006 1564
6035 7638
3023 131
5752 242
709 5545
3825 7824
7756 4463
6071 1002
4080 8906
4485 3491
6989 9174
1544 8656
8388 161
3970 2738
5841 3102
1379 6848
1018 3766
838 4042
250 2942
4284 959
8488 4461
5135 2596
8924 1206
3598 9356
113 4435
2847 3454
9962 744
2110 4702
7257 2432
7440 9451
1886 5171
6299 2904
5289 3489
6946 5539
2784 7582
2850 1272
2043 7986
3868 7319
9192 3818
6676 5657
8253 5875
5463 8215
6619 3925
9269 3877
2709 6709
9680 4595
8232 2331
7500 3522
5820 4446
5413 4956
2029 8264
6228 424
6250 6448
7744 1794
6618 772
3804 4872
6647 9267
9439 9619
3193 8709
9848 2254
1770 9528
6850 6355
1859 4350
6229 4031
5148 1642
8988 7177
9906 1568
3954 2508
4369 1698
4303 987
2470 8107
2211 5469
3726 8003
1440 3271
3064 1288
5526 1186
816 2376
7541 9027
3078 122
3059 8226
1765 8399
5404 8023
9967 9358
532 688
7408 1187
1676 6230
9294 239
8051 9372
8242 9492
2644 1306
780 4522
2493 7949
6898 6386
3328 9976
6509 6387
8202 4626
1138 9958
2649 7458
5668 3181
8146 9428
720 6174
5658 14
6414 62
5739 4656
9554 4735
2315 334
9257 1160
4635 2507
7546 7964
2483 4055
703 7037
5033 1842
3348 7683
9300 5368
7216 7446
1149 7937
3621 3159
4303 6387
3221 42
1043 2775
4777 9710
9462 386
870 4097
2893 8417
2061 1728
8824 9117
8766 3858
959 8466
7893 259
186 5109
4057 1335
3046 4030
4495 3702
417 7716
96 7813
492 4874
7523 6306
5260 8394
403 4506
3163 8817
6234 8339
7934 1352
8549 8893
9818 6442
5504 5
7904 5913
7692 7302
9944 2187
1004 361
6256 1101
4526 6748
2327 2050
3054 3939
6796 9809
8445 6311
8626 4680
1002 2912
6032 9552
8157 2203
2346 3661
8560 250
5927 6252
7553 5871
8440 8557
2584 1048
6010 7111
4148 8337
5513 3554
2277 8661
3363 7074
1324 8342
1754 2326
1254 4139
1878 5764
6342 4225
5777 4902
827 1704
1154 8380
7575 5946
3290 160
6994 9300
3623 1142
3990 5488
4696 2619
4149 4412
9693 1825
2754 1448
4151 360
5587 2382
6124 1929
2959 1902
3183 3786
3606 4337
2167 7534
6636 1809
4046 3630
1109 7669
1125 1451
3157 2173
4070 3658
6585 3764
5483 9339
1564 5986
6052 3503
8368 2176
5432 1327
430 4967
1466 4037
9304 3633
1571 2292
1794 5617
2275 9255
9638 3400
707 9147
5573 4777
9157 2159
4893 992
7850 6457
6978 3902
9960 5347
2431 1744
3026 2861
6711 4492
6898 2368
4477 4821
4660 6271
6790 3287
1879 2780
6687 2586
8279 8613
7363 7436
7124 8609
8428 4974
5066 1759
5229 5027
3458 7660
6771 6484
6873 9835
7329 124
2203 8158
4945 3215
782 8088
6503 2661
868 9542
5247 5500
8155 8962
2936 1631
7571 7717
2958 2638
9476 8187
4017 2934
2199 7140
5770 9072
100 500
7822 6872
8230 2157
4481 1745
3566 9153
592 6541
7070 5458
9838 6585
6216 1424
8539 1192
1083 2172
7177 6872
9832 3038
6242 2806
5482 4091
8586 2050
2918 6409
8922 1148
4918 9755
9245 8484
8908 6189
1378 5979
1647 1216
2564 4215
8993 7455
5407 76
5979 2585
3301 5811
1975 5895
4969 3810
9986 3556
2212 9257
6317 7486
6757 1235
7241 6003
6072 6149
2192 7450
8480 3840
5018 7397
8055 4011
1204 9815
440 7184
2400 93
9347 727
5988 4317
4537 5974
7873 3101
1583 4190
587 8341
1777 7828
696 4201
330 2888
8003 8810
3080 3022
2559 1136
3385 3764
7303 177
7300 6055
270 6647
6782 6258
964 7672
8585 8837
773 168
9379 1361
4861 7509
9189 5557
1710 9519
8446 6066
4682 7878
9088 7241
5366 8825
7357 2669
9003 4657
8724 5625
1305 5507
1884 2269
9531 469
7459 304
6989 3190
1665 1851
7051 7207
7408 8762
3078 2206
4828 7760
85 268
1354 5451
5445 8711
8121 800
3369 6845
6426 1026
8704 4662
3295 8235
5131 7106
8540 2120
6649 6557
323 3700
116 7732
8814 3195
6290 3642
7307 6375
262 5013
8179 2060
77 6300
2860 3446
9497 5638
824 4554
300 471
2789 5431
7578 7681
3904 579
591 4227
4279 707
8311 3094
254 4602
3088 3914
7329 9703
5279 5508
1763 5356
8160 975
5154 4010
6614 5978
8564 6914
6450 1353
8698 380
5387 8954
959 5978
9533 5238
3037 7845
4684 9644
8799 7773
3558 6128
3828 8837
7989 5591
546 6149
2918 5700
159 9532
1679 8723
2799 8129
6429 1497
8509 1816
6803 5820
4146 6336
1058 7183
533 2095
6827 9332
6220 6737
1813 48
1927 9802
1991 2473
2303 4909
4525 2463
4442 6204
7538 3593
685 319
1442 5546
8487 8245
1366 2633
4581 8777
6169 5115
872 9348
799 7092
2438 2612
7140 4365
2414 9131
3190 1070
392 7715
3533 1186
272 7423
4779 957
4095 6221
6504 2582
818 4222
1568 1752
2999 4089
3219 3871
9789 4018
7315 2227
2983 4455
2944 1749
9938 6134
2819 6683
202 2704
7869 474
128 2649
7783 4223
5222 639
3157 2393
4862 4725
4145 4213
5166 7364
4437 4956
7734 1752
7183 717
2560 6480
2467 8850
8966 5286
5533 9168
7991 3403
5994 4471
2404 3778
5046 3978
4417 4555
6371 9279
5633 6868
3493 799
584 4282
5755 8319
6034 9291
5388 8594
5771 4207
3797 1089
9494 9330
258 3837
9085 2604
4660 1489
6382 6058
1820 800
613 8191
6431 6246
1412 6276
7046 1996
558 9153
6667 2945
8444 2056
7891 567
6263 1688
8009 2109
1019 4619
2298 6456
7223 6958
4298 3606
3016 6118
758 9982
661 3541
6228 2073
9818 9626
4070 6728
8780 737
9673 3576
9145 7565
496 5409
9253 8505
3870 6624
3124 6169
9433 347
3127 3731
305 2496
9849 1063
2478 510
957 5058
8936 775
4685 9358
7503 3465
6447 3529
7041 5593
1094 7537
7354 6699
2394 1224
9676 5518
3745 9109
2218 3225
9192 2523
5721 9041
9939 4551
5903 896
9609 1191
8023 4294
549 1878
4111 6997
1759 1153
2590 2853
5042 6296
5905 3789
3872 1933
9307 7618
7394 7877
843 6586
6753 2916
1979 6692
7467 7882
3940 3428
9074 8315
7723 5975
6545 1834
2972 8305
9339 1914
7510 734
8210 3415
4523 8435
1700 182
6053 9094
8060 6896
2032 4813
9812 4011
7857 3631
1894 8149
7059 7320
2816 1134
3295 9361
9321 2620
7666 5012
886 5177
5746 5449
4944 6621
3884 6645
3156 9937
2091 1216
3185 4124
2381 9349
4487 6590
2980 6381
1091 6391
53 3907
7526 9701
3268 6847
8673 7287
8211 9559
2464 310
5008 3760
6931 5244
6757 87
1533 8849
7655 4718
9325 6388
4067 3812
2978 3399
6546 4069
9791 2951
4328 3669
9004 7597
6868 7677
4884 5079
3589 3700
5389 4949
7460 8673
194 4218
5112 1727
9419 9120
6446 5096
5508 6865
5260 4839
6617 1806
5260 6408
1110 9589
6429 114
3538 3297
7792 4774
4728 1381
8474 118
6330 2286
5143 2876
2856 255
4604 8627
5727 7402
75 1236
619 5336
2427 7236
3494 7687
3644 4604
7276 73
4719 7166
9722 8863
1940 4451
6596 6766
921 9278
5405 6064
2155 8261
2671 3111
3241 8399
513 3316
5987 1132
5004 8414
4721 8499
6101 8365
9455 9730
4791 526
6896 865
9389 8837
5316 2337
5603 2589
1616 1008
5005 123
5622 7677
9586 5215
2428 6451
4883 8415
7583 9888
6829 8656
4739 9282
7022 4194
9012 8165
4721 5909
5382 462
4746 7051
2800 6701
9640 768
4062 4646
7243 6036
8675 6829
7603 1103
3280 2486
9518 7215
8726 2699
5872 3465
1981 9246
7660 994
3763 2381
3255 9145
2843 4353
6196 1995
1054 2189
2763 1468
6835 6358
3856 5510
3187 1459
2965 6467
3946 2483
3683 2672
1534 5907
6138 3515
5153 150
4509 8916
8883 7764
8061 8078
8469 610
74 9524
2799 9189
7344 9634
5548 1201
1496 8735
2660 4461
1555 2958
3296 1590
5631 4830
7497 8121
4697 2650
4623 5559
7918 3506
9675 2331
1584 8145
2941 8010
7669 5740
7200 1365
1726 9100
2566 9574
7835 5227
387 5742
4537 3683
7332 168
4865 4829
4641 9563
3831 9264
5122 1749
2770 1149
4081 707
9294 7022
8717 3315
9115 5917
4681 7193
5017 7247
6768 9205
8826 7155
4947 3364
7191 8632
9884 2056
3461 878
7971 3645
142 9445
5394 9265
595 5827
9972 9889
9202 8689
3205 8317
959 7886
5510 2328
1485 8630
7885 6664
5786 9185
6380 2977
7817 6264
1385 7630
7142 5709
1275 3637
5154 3022
2902 2101
8849 9226
1991 8051
4267 1548
2720 5226
5786 4583
3907 7271
3213 1792
287 5351
7329 6667
4680 5146
2932 6066
2777 6426
8127 404
63 3281
3426 9317
1735 8628
]]></test_input>
<test_output><![CDATA[141.42
212.13
726.43
593.60
416.91
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C"><![CDATA[/* 
   The proper way to do this is with Union Find, but 
   binary search works OK, too.  O(n^2 log d) where
   d is the max distance.  

   The recursive connected components implementaiton
   is a dog on Sun SPARC.
*/

#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>

int i,j,k,N,C,P;
int x[1000],y[1000];
double dsq,delta;
int mark[1000];

void set(int w, int c, double d) {
   int i,j,k;
   if (mark[w]) return;
   mark[w] = c;
   for (i=0;i<P;i++) {
      if ((x[i]-x[w])*(x[i]-x[w]) + (y[i]-y[w])*(y[i]-y[w]) < d) {
         set(i,c,d);
      }
   }
}

int try(double d) {
   int i,j,k=0;
   memset(mark,0,sizeof(mark));
   for (i=0;i<P;i++) {
      if (mark[i]) continue;
      set(i,++k,d);
   }
   return k;
}

main(){
   scanf("%d",&N);
   while (N--) {
      scanf("%d%d",&C,&P);
      for (i=0;i<P;i++) scanf("%d%d",&x[i],&y[i]);
      dsq = 100;
      for (delta = 100000000;delta > .00001; delta *=.5) {
         if (try(dsq) > C) dsq += delta;
         else dsq -= delta;
      }
      printf("%0.2lf\n",sqrt(dsq));
   }
}
]]></solution>
</item>
<item>
<title><![CDATA[Above Average]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<description><![CDATA[<p>It is said that 90% of frosh expect to be above average in their class.  You are to provide a reality check.</p>
<p>The first line of standard input contains an integer C, the number of test cases.  C data sets follow.  Each data set begins with an integer, N, the number of people in the class (1 &lt;= N &lt;= 1000). N integers follow, separated by spaces or newlines, each giving the final grade (an integer between 0 and 100)  of a student in the class.  For each case you are to output a line giving the percentage of students whose grade is above average, rounded to 3 decimal places.</p>]]></description>
<input><![CDATA[]]></input> 
<output><![CDATA[]]></output>
<sample_input><![CDATA[5
5 50 50 70 80 100
7 100 95 90 80 70 60 50
3 70 90 80
3 70 90 81
9 100 99 98 97 96 95 94 93 91
]]></sample_input>
<sample_output><![CDATA[40.000%
57.143%
33.333%
66.667%
55.556%
]]></sample_output>
<test_input><![CDATA[31
5 50 50 70 80 100
7 100 95 90 80 70 60 50
3 70 90 80
10 0 0 0 0 0 0 0 0 0 0
10 100 100 100 100 100 100 100 100 100 100
10 100 100 100 100 100 100 100 100 100 99
384 32 54 12 52 56 8 30 44 94 44 39 65 19 51 91 1 5 89 34 25 58 20 51 38 65 30 7 20 10 51 18 43 71 97 61 26 5 57 70 65 0 75 29 86 93 87 87 64 75 88 89 100 7 40 37 38 36 44 24 46 95 43 89 32 5 15 58 77 72 95 8 38 69 37 24 27 90 77 92 31 30 80 30 37 86 33 76 21 77 100 68 37 8 22 69 81 38 94 57 76 54 65 14 89 69 4 16 24 47 7 21 78 53 17 81 39 50 22 60 93 89 94 30 97 16 65 43 20 24 67 62 78 98 42 67 32 46 49 57 60 56 44 37 75 62 17 13 11 40 40 4 95 100 0 57 82 31 0 1 56 67 30 100 64 72 66 63 18 81 19 44 2 63 81 78 91 64 91 2 70 97 73 64 97 39 21 78 70 21 46 25 54 76 92 84 47 57 46 31 38 31 75 40 61 21 84 51 86 41 19 21 37 58 86 100 97 73 44 67 60 90 58 13 31 49 63 44 73 76 76 77 73 16 83 100 4 67 51 56 7 36 77 10 95 28 10 57 0 54 23 60 9 48 39 40 97 69 84 35 44 25 11 83 8 61 83 12 27 100 34 0 35 10 10 96 39 87 53 5 40 42 66 15 90 71 55 87 39 5 88 49 97 100 32 4 60 81 83 53 80 16 53 14 94 29 77 99 16 29 3 22 71 35 4 61 6 25 13 11 30 0 27 94 66 25 64 92 5 47 44 85 29 63 65 89 59 41 87 41 36 57 29 7 92 33 34 64 59 47 76 55 13 2 48 46 27 12 37 99 25 48 83 20 77 13 9 35 55 62 76 57 18 72 64 10 4 64 74 63 77 15 18 91 84
568 36 77 10 39 75 35 87 23 22 30 37 31 65 58 59 7 14 78 79 45 54 83 8 94 12 86 9 97 42 93 95 44 70 5 83 10 40 36 34 62 66 71 59 97 95 18 3 8 62 48 19 15 98 28 8 9 80 84 72 21 43 66 65 79 71 13 89 78 49 22 5 14 59 65 11 53 49 81 28 77 29 47 92 26 41 66 1 20 50 73 7 59 4 72 37 76 86 25 19 0 14 24 15 73 55 93 93 3 73 87 80 68 100 37 94 41 3 61 27 19 33 35 78 38 73 14 80 58 5 99 59 19 22 40 59 78 32 17 47 71 3 94 39 2 97 99 9 66 60 37 85 59 38 28 63 10 8 8 35 81 6 60 100 96 66 24 39 64 41 52 34 10 11 39 80 8 4 89 74 64 92 25 89 29 19 18 6 28 26 7 8 33 67 74 95 32 99 33 96 5 51 96 83 63 35 62 71 39 16 10 69 8 35 23 3 55 41 76 49 68 83 23 67 15 97 61 13 61 60 75 33 77 71 15 39 72 43 76 77 59 53 11 33 88 34 37 8 76 79 23 9 62 46 76 43 9 2 57 70 28 31 69 4 68 84 10 39 26 52 82 52 4 93 85 59 94 21 33 35 67 57 44 28 69 86 37 78 54 94 14 48 25 83 18 59 33 28 99 25 81 46 77 51 39 62 9 32 49 43 33 15 100 77 9 68 28 47 12 82 6 26 96 98 75 13 57 7 8 55 33 55 0 76 5 5 3 15 3 53 58 36 34 23 79 10 57 6 23 69 54 29 61 49 27 36 63 84 9 71 4 8 25 71 85 97 77 88 11 46 6 35 83 7 24 27 17 82 34 40 16 88 69 44 3 62 46 32 45 55 2 49 64 94 87 14 90 63 68 68 75 75 2 23 82 27 51 65 75 85 71 57 38 39 0 7 1 46 39 12 68 41 28 31 0 14 45 91 43 12 58 17 53 26 41 0 19 92 31 60 42 1 17 46 41 84 54 8 97 93 20 64 0 14 61 0 28 72 57 71 50 81 89 70 7 96 70 26 87 1 87 95 69 70 40 9 19 94 84 15 87 71 45 87 85 5 53 13 43 10 50 94 91 38 63 98 33 99 91 86 66 43 80 35 79 20 10 98 80 61 13 66 31 24 18 82 97 72 61 39 48 11 99 38 49 27 2 49 26 59 0 58 1 81 59 80 67 70 77 46 97 56 79 27 81 63 75 77 0 36 82 48 47 81 53 62 7 55 77 100 13 78 24 81 24 83 26 91 18
640 2 14 25 47 7 72 10 83 14 10 18 96 25 65 42 78 93 16 32 70 15 11 47 5 58 71 89 84 27 73 86 96 88 77 43 95 48 19 43 62 96 61 24 20 92 66 98 85 82 96 20 64 73 67 69 30 3 23 13 97 97 66 58 50 42 0 44 57 86 54 85 82 14 8 1 73 41 66 23 22 61 43 86 0 9 21 30 79 44 44 75 40 76 99 56 17 100 67 40 51 20 25 32 0 100 0 73 40 66 96 29 93 38 81 93 13 1 90 92 46 100 32 52 75 31 8 58 97 75 99 13 61 90 46 61 89 12 34 96 78 96 24 36 34 4 96 13 73 85 72 18 50 70 36 24 67 10 82 29 51 80 43 11 35 89 39 24 0 73 86 44 34 9 46 34 80 41 48 52 92 19 36 41 55 39 31 22 49 13 51 67 59 94 44 95 48 83 85 48 21 70 58 56 45 4 90 91 11 3 43 70 89 45 77 44 84 8 66 100 88 83 66 46 77 76 6 24 59 91 39 46 26 97 68 37 0 58 28 79 27 37 48 16 82 24 60 66 32 92 65 19 74 97 32 16 72 38 41 97 96 46 43 88 42 77 25 9 34 19 88 28 56 1 44 3 25 70 69 24 27 100 9 0 96 7 84 34 12 91 30 7 36 39 95 78 16 86 53 16 71 6 44 26 7 54 30 100 23 65 23 50 65 99 17 26 73 67 60 85 57 57 92 93 96 52 36 78 4 90 61 75 96 4 68 3 25 64 69 14 28 58 31 59 56 48 86 28 81 45 12 37 1 70 29 64 89 31 41 93 20 1 67 83 73 0 52 98 64 20 78 93 78 8 17 100 22 2 95 2 48 6 39 15 43 34 79 31 66 87 23 52 54 56 34 93 57 52 56 87 72 34 79 15 42 63 15 65 65 9 67 79 82 73 95 91 6 39 21 38 92 10 91 46 67 91 38 90 43 95 76 81 28 21 63 70 84 78 0 48 53 68 94 0 40 88 92 12 93 12 17 85 23 7 30 56 64 34 45 73 28 87 20 22 7 83 59 91 26 59 5 79 26 99 79 32 52 70 11 44 83 28 95 72 1 91 27 65 25 38 4 19 24 24 8 99 73 67 89 99 25 60 77 18 24 21 16 42 58 27 53 6 55 47 78 56 38 71 88 29 8 58 48 99 48 56 97 20 89 52 18 14 78 61 99 2 48 14 44 5 42 97 11 63 10 55 19 48 25 73 77 100 30 91 99 78 13 95 98 1 12 82 82 91 8 80 93 22 61 2 28 2 66 5 65 76 61 50 90 86 22 32 52 52 22 50 96 1 10 59 70 90 40 51 80 14 98 38 37 58 40 31 60 72 2 91 47 63 7 2 15 29 34 67 48 23 83 9 24 59 69 94 48 8 11 27 90 8 31 93 32 38 90 58 9 92 48 23 55 55 25
843 51 60 69 65 83 51 74 73 76 42 67 24 17 44 17 73 18 49 65 50 87 54 7 62 11 21 85 32 77 10 68 94 70 36 24 52 53 98 24 96 6 57 86 90 67 2 62 85 17 26 34 70 46 41 32 23 63 16 56 5 26 23 65 62 26 89 80 45 52 71 6 58 27 92 47 61 61 75 45 78 67 46 14 12 53 46 36 82 28 58 87 21 47 17 83 73 72 63 85 24 33 91 48 26 49 62 53 9 36 99 53 3 10 67 82 63 79 84 45 7 41 98 95 89 82 43 27 53 5 78 77 4 69 25 98 17 53 16 93 89 81 45 58 91 12 40 54 91 90 65 64 31 62 58 86 43 1 12 63 73 91 39 44 25 30 7 8 83 23 0 38 4 45 96 61 23 1 14 81 92 45 44 89 74 69 74 83 36 52 45 75 8 85 18 100 81 92 7 30 82 74 34 52 86 96 12 8 98 94 89 55 38 100 43 11 68 83 95 3 0 39 78 9 90 63 8 37 20 83 67 1 56 67 53 7 62 66 16 25 25 71 80 63 70 89 75 3 37 35 6 38 74 51 47 30 80 21 67 100 3 100 68 26 66 87 33 27 52 15 53 43 53 99 6 22 88 47 26 24 82 99 28 21 15 75 51 95 63 84 61 66 83 28 58 14 14 58 42 33 39 61 76 92 25 48 14 79 95 6 70 76 4 98 98 87 39 14 81 1 99 7 33 81 1 92 96 16 15 3 15 54 30 57 12 55 5 93 0 100 99 70 42 69 67 39 21 5 53 2 6 51 76 40 99 78 98 60 60 79 63 75 99 59 98 10 80 2 2 80 69 67 49 10 2 16 49 23 88 68 92 95 86 68 0 84 11 64 43 71 42 72 45 40 97 42 17 76 11 86 56 80 19 4 90 88 87 4 77 75 72 69 35 23 2 35 6 80 99 15 50 6 53 61 46 49 69 29 25 80 15 47 25 34 51 14 21 38 85 98 79 57 32 13 46 0 48 53 80 12 34 29 18 54 56 30 2 25 60 94 4 41 40 30 75 58 10 62 62 96 59 40 18 58 53 64 24 67 83 4 79 17 100 63 37 56 93 39 81 18 100 51 59 5 81 100 63 58 61 24 53 87 64 37 10 83 67 34 49 50 38 27 33 4 56 70 60 15 75 6 33 40 57 59 46 4 24 75 62 86 100 81 38 29 17 48 79 84 48 27 100 87 21 32 57 77 68 16 92 9 22 92 49 79 16 95 83 40 70 10 25 35 91 29 30 74 43 8 24 92 2 23 44 23 22 0 66 56 16 58 65 4 15 14 49 31 75 32 71 10 8 63 45 100 92 42 73 1 50 97 93 18 87 36 41 75 36 7 30 18 31 96 22 12 76 71 43 50 69 80 61 78 42 72 43 0 13 15 68 30 79 60 48 31 62 56 5 98 29 1 82 26 97 3 38 72 40 81 89 76 26 15 53 35 87 96 1 67 77 69 97 21 28 10 18 90 32 23 53 61 25 34 87 88 3 91 26 9 37 81 85 64 96 3 99 82 65 100 48 42 68 10 29 62 88 48 17 19 37 70 47 28 70 100 16 73 91 8 82 94 89 33 57 84 36 21 31 1 87 46 9 20 56 4 82 9 52 99 96 56 34 8 84 3 7 66 42 64 74 24 58 28 23 81 11 59 2 9 26 55 55 1 76 77 6 23 87 24 89 82 80 22 90 30 93 63 96 34 27 36 24 51 30 47 98 8 73 100 17 99 21 72 0 97 48 73 86 34 97 74 82 43 63 37 73 55 0 34 55 94 36 80 10 67 93 7 75 65 74 92 64 95 63 30 57 77 2 42 11 65 16 59 7 45 97 46 66 63 81 20 56 83 66 32 49 59 39 90 23 12 81 53 73 9
112 29 87 17 72 64 83 54 89 90 65 85 36 30 13 83 16 35 65 83 67 14 7 73 70 97 85 51 16 24 26 65 53 79 83 91 8 65 10 98 20 41 48 22 71 62 4 54 63 36 36 30 16 9 2 86 5 53 36 88 77 29 53 97 74 1 53 83 32 30 46 52 71 94 41 42 21 45 62 85 81 98 81 97 73 83 83 44 1 85 32 45 80 85 41 54 52 60 2 84 90 48 1 61 7 42 69 96 54 30 46 0 94
441 64 32 75 46 76 42 97 7 87 43 58 94 97 9 54 99 59 43 12 61 70 19 69 4 14 22 0 26 23 60 52 53 92 93 65 68 35 61 75 88 70 33 82 66 8 35 30 68 44 8 95 81 28 63 85 8 52 86 35 41 11 53 94 3 12 58 71 13 85 11 0 55 44 82 87 19 83 84 87 27 92 81 7 86 9 58 61 27 9 62 68 21 81 61 24 93 85 61 72 70 72 73 91 16 20 77 35 3 26 88 97 18 34 3 70 9 27 30 37 37 92 4 24 73 32 48 31 83 8 3 52 80 42 8 62 62 52 63 65 78 16 27 62 50 30 32 26 24 62 63 27 20 67 51 59 65 65 90 48 73 93 66 18 0 75 47 63 26 76 94 3 59 21 66 75 17 64 0 41 25 63 68 11 97 85 70 61 49 60 8 88 18 41 6 19 15 19 48 41 61 41 10 19 62 42 95 46 5 95 53 98 58 21 8 20 5 79 81 21 4 56 8 89 97 81 74 11 100 21 18 61 29 95 46 57 37 40 2 42 1 56 5 59 43 14 79 14 59 25 35 29 81 44 84 43 24 58 20 91 45 38 17 74 100 63 31 36 3 33 44 71 55 50 96 98 30 40 12 55 65 13 50 12 57 33 55 48 91 42 38 36 46 55 76 45 17 6 81 87 6 25 57 61 41 52 25 37 92 3 92 23 16 7 35 74 40 56 21 98 98 59 100 44 80 75 89 97 82 36 50 54 27 6 14 68 25 5 4 83 8 62 5 25 69 40 65 75 63 52 72 60 10 71 70 56 12 59 52 94 95 68 13 21 41 94 55 66 100 25 48 7 53 54 99 88 60 63 62 22 14 34 49 91 71 18 46 83 77 65 42 37 32 55 24 39 15 45 4 14 36 19 21 89 39 87 76 99 49 4 88 64 4 36 54 75 20 67 24 64 31 32 0 29 54 92 69 69 36 39 83 39 58 70 27 63 56 70 28 5 74 15
18 78 17 55 18 37 88 8 0 85 41 68 14 95 59 49 63 61 54
653 66 79 81 94 41 3 29 69 75 69 50 9 46 33 30 30 71 18 39 37 2 80 4 83 40 29 98 2 57 52 13 22 30 60 82 71 29 10 6 3 79 22 79 91 56 76 21 26 94 26 63 62 72 34 45 11 29 42 13 86 94 93 75 90 18 56 27 48 33 33 17 78 55 63 69 10 38 56 2 31 48 32 93 19 32 3 30 61 46 43 13 5 1 88 96 86 9 89 100 42 21 17 20 42 80 55 19 17 10 88 14 58 19 6 77 17 77 73 79 22 15 58 94 83 45 55 68 20 43 68 63 30 51 49 39 97 3 58 13 80 45 27 3 31 100 80 48 76 52 93 64 33 50 24 82 61 45 15 82 89 49 10 85 100 59 23 96 28 81 75 7 93 68 10 90 34 56 3 76 74 97 6 73 12 30 20 40 75 35 88 29 85 64 14 50 22 37 12 16 85 87 23 77 21 100 66 55 21 35 30 95 31 2 33 10 32 53 16 74 54 70 69 38 33 83 55 55 87 67 71 71 19 60 13 40 25 45 61 46 80 58 6 78 60 39 88 93 58 70 32 11 39 0 16 72 50 71 93 36 37 29 6 56 55 19 63 80 64 23 25 43 81 98 87 41 2 40 100 60 9 31 37 14 98 53 86 47 90 44 83 26 73 55 49 27 40 11 73 70 0 64 13 82 61 66 89 29 6 88 89 15 85 93 30 82 11 82 96 1 26 78 27 65 100 42 93 39 53 31 9 54 96 89 1 22 54 90 52 60 43 6 42 27 99 72 75 10 19 70 11 45 14 4 10 13 47 69 52 66 100 27 86 61 15 53 84 36 42 35 96 85 41 37 78 40 75 53 16 95 22 94 5 36 98 15 15 10 50 34 77 16 61 28 77 43 82 60 79 90 95 74 41 2 78 18 8 18 71 24 12 60 17 85 62 81 66 78 92 16 11 34 32 38 28 75 81 9 1 59 66 62 100 6 64 43 24 72 61 62 62 40 21 79 24 49 26 90 26 84 72 3 84 70 8 11 45 89 88 46 14 53 74 80 59 38 89 83 9 15 10 38 55 31 83 45 81 8 1 73 92 73 43 75 9 51 53 54 5 40 66 86 59 39 31 17 43 19 66 19 1 77 57 22 74 39 68 20 14 35 60 5 7 2 47 16 19 66 36 91 5 68 43 30 74 40 47 83 26 79 1 27 21 24 49 96 64 83 82 78 17 41 49 92 9 62 74 28 27 77 86 99 44 95 28 84 34 41 33 60 20 34 87 41 59 36 2 89 85 85 32 2 25 47 94 35 9 67 29 2 43 81 1 54 75 96 3 9 37 36 35 23 37 22 30 62 24 33 50 8 84 48 77 8 95 70 9 70 37 5 73 46 86 74 100 27 35 70 2 72 5 37 95 42 25 25 3 49 24 19 24 7 67 0 82 28 71 92 98 74 63 70 86 14 9 52 41 45 21 43 83 93 47 44
264 72 35 4 88 59 91 11 32 57 11 13 51 48 71 49 88 33 85 40 48 61 92 55 5 79 65 54 71 11 98 72 83 32 43 70 57 33 47 89 56 25 69 7 73 39 56 27 39 6 67 53 67 24 74 38 2 38 93 73 49 56 11 99 89 54 34 11 87 48 67 42 73 35 49 11 40 71 4 45 78 71 98 10 95 38 49 63 76 41 36 92 97 47 56 51 0 56 63 53 3 29 95 76 30 44 54 70 81 58 82 58 96 45 69 56 83 84 19 59 24 21 16 87 34 72 4 0 27 33 53 31 28 47 73 58 57 26 94 38 85 75 62 80 87 97 35 69 80 20 27 3 41 43 57 75 81 27 75 8 60 27 5 88 41 78 11 98 71 71 1 55 12 64 0 99 60 1 67 40 22 61 9 63 70 32 4 51 59 79 25 18 73 30 72 13 7 49 77 78 87 79 99 99 42 65 63 68 67 96 7 55 56 84 84 93 15 88 43 75 33 34 59 72 64 98 85 37 12 27 82 99 5 80 63 13 11 92 48 44 88 55 99 9 4 48 1 20 2 10 61 1 44 86 73 74 83 23 11 62 50 93 26 22 38
640 1 15 47 49 59 34 71 23 44 75 38 11 61 40 22 21 41 32 7 13 6 56 36 84 17 52 76 44 74 80 100 42 96 46 91 20 81 27 10 91 2 48 1 29 88 90 51 95 22 58 7 95 13 9 78 31 61 19 41 1 65 40 43 26 86 100 47 32 94 23 22 62 71 91 91 58 80 41 18 68 65 25 62 79 0 5 76 27 24 83 28 56 22 37 82 74 3 95 6 97 17 95 24 54 85 14 78 31 56 96 99 20 87 27 65 87 32 6 14 23 89 8 45 77 12 26 51 82 88 23 44 71 17 68 25 69 82 2 100 3 99 64 91 85 91 21 38 90 28 52 79 83 26 23 60 38 49 10 86 2 33 29 74 16 97 65 51 45 67 16 48 31 81 4 16 37 26 20 93 20 38 71 2 64 94 62 69 9 72 54 11 71 84 51 54 80 15 4 24 83 88 39 80 68 43 62 71 35 82 64 55 19 0 58 84 95 19 18 3 58 72 81 95 55 32 14 1 47 19 92 96 6 30 76 40 40 37 77 75 19 6 30 38 7 54 88 68 73 5 71 97 78 51 58 99 49 72 66 97 57 58 58 63 54 33 69 60 37 12 1 56 18 31 60 92 51 14 59 90 19 29 87 63 47 10 28 96 82 94 58 39 17 16 68 38 15 3 64 52 15 65 74 100 62 0 92 12 14 50 2 33 46 55 63 59 65 91 20 46 50 79 51 34 61 19 72 76 89 35 95 3 67 68 69 28 68 60 41 82 77 43 82 22 98 44 47 28 0 67 74 50 11 92 84 72 77 21 14 65 23 8 34 90 42 2 84 10 63 24 58 5 33 5 94 97 15 40 24 15 6 65 32 18 56 82 56 32 70 70 97 93 78 30 48 87 99 31 97 27 22 20 32 55 93 25 52 7 31 42 90 4 6 88 89 62 35 44 60 4 81 56 63 24 52 10 10 17 8 73 44 30 94 77 51 86 68 69 59 66 11 48 70 84 1 58 12 37 68 72 41 48 95 71 73 12 47 83 29 55 56 74 51 15 16 2 67 50 71 92 15 82 6 51 66 7 75 44 44 43 15 52 57 9 22 96 89 35 79 17 91 0 57 7 82 73 9 14 90 81 5 4 28 11 22 60 19 97 3 29 5 86 81 63 61 69 58 49 71 2 67 27 69 90 34 50 29 44 64 18 91 36 89 85 47 10 45 32 7 14 62 12 100 8 41 61 44 100 9 14 68 42 41 37 99 75 87 27 85 17 45 75 53 33 26 66 10 71 99 84 85 60 62 51 68 3 11 11 69 87 92 36 96 32 39 94 74 93 87 58 9 31 100 28 30 25 94 6 62 92 90 12 17 52 29 86 55 40 63 90 94 21 92 55 53 31 14 93 23 0 17 99 98 16 26 27 7 86 34 35 78 90 13 95 41 43 46 62 49 76 51
416 97 9 63 15 40 77 8 63 43 25 61 40 7 53 68 81 38 68 82 82 57 95 43 65 37 55 93 87 30 10 95 93 19 58 75 59 0 83 88 44 74 14 50 47 67 17 94 71 51 75 53 75 69 96 5 73 16 98 59 13 7 19 5 93 43 80 17 44 28 4 54 68 18 3 14 51 88 7 22 4 48 41 45 17 2 50 90 18 14 14 31 88 33 3 81 77 49 98 87 44 2 6 11 87 76 93 4 63 66 26 34 14 33 79 98 35 29 53 19 43 67 51 30 66 20 77 8 69 75 61 79 43 33 91 96 9 49 100 38 14 25 72 28 58 51 92 59 46 44 79 55 77 96 51 9 15 28 17 50 69 45 29 11 78 86 6 53 34 73 92 48 98 29 43 22 46 34 47 92 79 25 12 55 87 64 64 68 58 48 18 93 59 13 70 2 99 76 56 32 14 13 46 12 42 89 0 89 23 13 46 1 5 59 22 92 89 53 60 12 67 44 4 92 57 74 94 55 15 15 53 30 28 99 8 71 88 75 59 77 88 4 44 93 29 66 51 17 85 10 96 17 54 100 8 77 73 2 31 89 17 50 85 46 48 93 83 35 67 7 11 54 78 21 13 7 88 64 91 38 74 87 56 94 86 64 70 25 32 67 80 50 16 64 62 30 56 10 32 89 17 9 8 95 31 21 68 18 85 59 22 24 11 78 84 97 42 19 88 40 86 67 90 68 30 17 99 52 27 30 40 44 5 49 5 36 70 73 20 21 31 43 11 42 20 96 5 28 14 93 69 67 26 24 34 56 8 99 75 35 95 14 46 0 29 51 36 66 23 57 87 21 100 98 29 86 59 0 81 74 60 15 40 86 39 40 7 47 5 82 49 100 63 95 66 92 11 2 57 0 25 9 21 91 74 17 76 32 17 22 72 43 37 78 28 77 18
778 90 90 84 38 89 46 99 21 4 9 90 27 10 14 3 98 4 77 14 46 75 99 35 47 41 72 24 70 48 8 72 4 98 55 42 53 68 7 74 72 16 63 99 26 43 1 24 13 44 4 25 19 2 60 32 10 32 22 80 46 98 17 50 95 38 59 13 5 66 87 77 48 15 42 41 58 9 31 71 54 35 97 39 4 56 37 14 88 59 60 0 56 77 50 17 81 75 30 87 6 84 29 55 99 37 96 57 47 26 94 67 27 56 5 98 12 8 11 66 67 37 66 90 80 83 6 61 23 2 47 30 86 42 51 51 80 46 74 26 38 67 59 31 23 64 29 1 38 6 33 4 44 100 60 90 48 32 50 71 1 63 67 87 5 17 3 51 29 77 77 33 10 35 65 100 65 60 0 2 32 33 73 42 99 100 32 12 31 48 84 99 11 50 86 83 34 55 33 63 32 76 97 8 77 27 7 7 53 74 76 85 73 14 27 72 13 59 50 11 73 33 9 84 50 61 32 84 16 31 12 14 6 8 89 49 1 96 56 54 35 31 39 7 46 32 45 59 57 96 36 29 95 46 80 10 73 11 94 89 9 73 69 15 47 57 31 49 18 87 69 53 18 74 27 30 5 38 55 28 33 92 58 95 3 37 4 76 14 65 31 23 37 66 5 50 23 36 99 41 22 68 61 6 7 88 2 13 92 58 41 92 15 65 86 18 1 56 60 83 87 57 5 90 23 10 40 12 12 38 19 35 72 80 7 80 33 10 59 25 34 66 16 49 31 68 33 99 23 59 47 10 16 53 100 5 29 39 17 42 44 2 43 82 49 16 27 82 93 86 73 26 18 55 75 49 89 7 13 79 33 61 55 15 80 20 20 75 60 3 83 70 5 92 17 54 8 45 2 0 30 41 27 14 63 68 29 51 42 43 96 75 70 50 90 49 71 9 90 97 79 73 66 50 64 83 4 72 27 73 39 24 80 32 4 42 100 34 60 41 43 55 82 12 5 71 27 42 46 16 38 24 89 3 41 19 52 11 57 46 84 96 36 29 27 40 72 94 40 98 0 83 18 83 95 90 53 88 31 66 71 69 56 59 38 97 44 57 7 1 2 57 97 4 87 91 10 24 84 51 21 84 33 39 66 95 96 86 82 26 51 52 96 73 78 33 70 21 90 77 89 58 0 86 28 87 42 39 10 25 56 98 75 89 2 7 49 98 59 98 24 76 15 86 48 59 18 17 81 75 61 69 99 61 20 27 13 62 32 90 53 88 87 95 42 89 1 58 53 60 55 43 1 70 28 49 29 12 33 76 53 60 10 52 87 98 45 100 25 43 89 79 97 41 73 4 96 40 62 48 66 16 91 67 53 85 82 48 98 14 90 50 74 66 68 26 63 12 25 89 55 80 33 17 20 72 22 83 11 84 30 77 67 88 9 86 72 91 33 35 72 89 86 11 54 53 38 17 32 29 72 53 76 71 71 62 42 93 44 19 76 41 62 42 28 71 27 66 27 26 1 99 14 87 10 35 5 14 52 37 43 90 91 18 60 27 81 68 19 24 87 95 31 48 3 59 18 97 92 11 90 93 10 70 45 20 4 16 34 22 54 43 11 10 62 37 37 8 4 22 99 57 83 30 4 86 55 89 49 46 0 38 38 77 74 49 97 79 66 97 0 86 5 79 62 33 15 65 41 87 87 6 9 35 2 14 21 57 69 36 3 35 40 7 11 13 23 74 92 55 36 93 40 42 37 68 75 18 32
536 71 85 89 81 19 91 61 6 13 29 8 16 65 48 91 76 62 80 16 19 34 52 78 74 94 14 7 69 33 5 17 3 56 5 84 41 62 44 48 75 40 56 58 71 71 14 12 99 94 28 17 27 81 96 67 74 76 74 8 75 45 25 79 0 97 28 41 58 39 55 100 45 11 23 15 48 37 27 46 97 56 63 90 36 24 56 76 0 96 85 41 40 9 19 6 6 14 47 30 19 2 96 64 80 18 45 27 21 72 39 17 94 1 6 96 93 28 72 59 90 56 100 96 31 86 1 3 66 15 0 85 17 96 14 63 81 59 90 1 97 28 19 57 96 92 52 54 87 23 12 76 45 79 72 43 64 39 46 29 54 12 80 37 8 60 100 89 85 55 56 47 49 75 3 45 33 56 99 19 45 78 61 91 56 99 33 86 4 45 81 58 58 60 96 32 19 61 87 70 16 42 16 65 84 20 76 83 42 41 68 87 18 28 77 40 94 76 25 98 88 5 21 11 31 16 43 16 44 29 86 60 37 1 24 20 88 67 69 29 7 36 16 25 65 59 65 24 1 56 21 89 61 42 100 58 25 8 74 69 3 25 95 40 26 85 27 81 51 96 9 58 32 25 49 63 51 80 87 52 35 74 40 62 82 5 19 73 13 59 7 16 84 1 56 77 53 49 57 3 45 66 28 43 58 77 72 8 57 58 60 92 98 66 20 79 71 39 52 84 65 59 100 48 27 21 91 80 71 47 83 82 80 10 24 37 54 62 45 10 86 71 68 83 36 88 27 6 94 79 56 58 4 55 72 98 42 63 77 12 9 25 60 89 2 50 92 56 11 2 32 97 73 100 79 75 88 73 47 47 17 2 4 21 23 42 18 66 4 61 44 81 87 71 35 89 20 27 10 32 96 42 95 69 41 40 9 95 12 23 41 29 25 11 17 15 54 1 47 24 63 57 4 49 27 40 3 48 33 13 46 95 55 40 29 96 46 39 57 58 62 98 54 53 76 71 68 29 72 81 53 34 38 24 49 65 30 52 79 29 31 24 23 86 31 53 48 77 92 4 1 19 68 55 72 9 92 6 38 63 87 58 64 24 82 79 56 78 98 34 6 28 25 29 81 22 82 28 65 39 99 66 58 32 87 97 42 78 2 46 7 55 3 71 46 51 49 1 28 46 1 34 41 26 30 21 48 11 49 80 17 13 45 75 11 99 37
891 76 39 66 83 95 35 19 40 87 69 7 81 81 8 82 21 35 11 42 49 89 57 95 5 36 40 47 14 38 84 33 80 23 99 29 84 34 48 90 87 16 97 67 64 71 48 51 72 59 60 88 48 83 82 53 86 21 66 100 25 50 32 72 39 31 0 22 65 48 78 51 31 40 84 61 10 32 11 83 57 71 70 4 20 51 24 5 39 90 4 30 5 36 1 44 33 68 66 64 16 9 81 13 49 65 74 60 97 51 42 19 89 11 24 8 28 14 13 67 70 84 64 76 86 65 19 19 100 52 83 15 61 64 95 10 95 34 70 57 85 78 76 73 55 66 47 83 80 60 16 16 9 80 92 96 10 77 14 9 28 63 91 56 93 85 32 87 18 68 43 70 45 19 42 66 85 56 48 31 82 30 47 92 9 4 87 87 81 67 96 76 29 87 31 89 37 63 75 22 97 85 92 41 70 100 73 20 55 20 51 37 17 64 28 93 68 81 79 15 47 75 91 42 27 88 30 64 16 72 52 12 56 43 19 25 43 92 45 64 78 63 0 95 26 95 54 61 75 32 76 88 73 32 30 66 86 26 97 1 98 48 80 19 92 99 10 0 56 56 64 33 85 65 95 77 59 48 3 0 46 45 88 19 77 84 51 62 10 47 29 74 96 8 94 53 73 3 53 28 25 16 62 76 47 22 53 73 70 22 73 15 68 60 0 10 44 52 73 54 65 68 94 60 77 53 79 15 23 31 44 48 14 72 91 27 94 9 100 29 31 72 44 99 32 11 9 76 29 48 96 94 15 55 20 58 8 99 40 31 97 84 45 77 55 35 3 14 44 3 43 42 75 87 40 73 64 15 14 93 29 76 53 11 31 73 69 39 37 8 70 100 58 81 76 79 16 80 93 26 49 35 68 23 89 75 63 18 56 77 11 86 53 30 97 84 2 31 89 5 6 24 5 64 4 47 43 87 26 1 13 41 3 47 65 92 88 94 9 44 70 87 29 89 16 25 72 85 56 26 57 62 50 62 93 55 8 1 7 1 2 20 42 5 34 73 63 21 66 39 31 2 25 60 91 8 51 29 59 74 55 15 1 5 77 94 26 52 95 33 19 64 20 27 35 54 0 99 41 32 37 73 34 28 99 92 2 50 20 62 23 75 77 24 46 20 85 72 38 45 72 57 75 92 84 10 11 50 75 18 83 78 91 83 72 56 74 75 72 60 36 95 1 79 85 47 99 35 19 36 47 91 59 21 48 43 31 59 59 72 77 7 49 34 91 21 56 30 96 27 57 98 88 58 76 38 4 41 74 90 43 20 46 2 7 94 11 39 18 70 77 62 78 26 62 34 47 17 30 8 10 87 72 98 44 47 1 15 54 75 4 98 61 17 100 69 10 10 74 96 46 50 23 23 42 85 23 55 68 54 29 44 40 0 41 51 14 42 66 68 84 36 31 10 53 30 45 30 6 85 25 53 1 14 42 43 65 66 65 32 86 94 42 25 95 83 42 8 91 74 42 40 10 74 51 63 70 62 59 77 47 50 96 48 64 3 57 28 35 21 26 20 15 68 12 9 16 54 84 74 28 92 13 4 65 30 33 1 93 93 78 5 42 39 53 73 42 9 0 78 98 94 98 12 61 76 88 44 30 37 17 24 28 97 28 60 27 61 27 86 53 4 91 62 9 9 34 17 85 0 61 82 94 25 60 21 0 13 65 30 50 48 54 45 44 48 71 37 9 98 89 62 68 45 23 43 54 23 60 5 24 21 87 17 12 13 4 12 26 69 9 43 83 29 88 94 78 24 30 87 21 86 14 55 30 4 98 51 27 57 56 17 44 8 35 56 21 39 69 14 75 44 57 23 73 10 16 50 34 13 2 55 99 17 9 95 21 6 45 14 29 0 32 74 9 33 96 97 38 30 10 79 74 33 2 47 43 85 63 77 98 66 98 62 83 73 57 70 45 68 50 75 69 82 14 44 81 9 6 19 40 84 64 80 16 66 26 60 51 90 36 14
264 34 43 3 73 100 73 18 67 89 93 1 37 6 11 17 82 85 2 88 68 67 68 50 99 60 9 15 49 12 30 70 12 73 73 85 38 11 2 71 67 95 39 3 67 16 20 15 0 90 69 34 22 36 85 20 63 94 36 11 72 32 48 84 71 87 69 75 65 37 11 31 99 50 34 31 33 20 46 100 76 15 34 98 17 18 18 80 78 20 58 16 18 72 100 55 58 34 96 89 72 6 86 36 23 86 67 56 6 80 21 48 61 55 46 78 39 30 24 84 50 48 100 34 19 65 89 43 100 84 32 37 56 17 73 79 3 5 0 76 85 22 23 45 43 35 23 83 65 13 32 14 61 31 14 46 96 2 89 61 52 87 64 8 4 2 53 74 8 54 15 93 42 38 4 85 40 94 67 4 6 99 86 33 96 100 79 58 69 33 85 20 20 49 95 91 17 14 64 25 68 79 85 76 83 89 60 22 82 94 27 54 58 79 87 54 78 31 78 12 64 62 100 84 10 94 74 28 7 37 19 41 82 70 16 31 58 43 19 5 36 12 59 94 91 11 13 69 42 91 81 6 53 80 90 29 40 30 23 13 33 9 21 15 79
1 12
726 46 31 8 48 44 34 42 34 45 21 69 54 12 16 60 65 96 15 60 1 45 84 82 45 93 2 60 71 5 38 74 18 69 49 66 12 83 74 47 94 96 15 47 74 31 6 4 94 89 64 61 100 13 42 44 72 44 70 9 16 7 83 34 77 98 66 55 80 40 1 74 1 84 20 41 81 94 45 40 48 8 1 47 89 43 58 60 54 27 69 36 1 18 70 44 15 1 99 96 7 0 35 75 50 21 15 30 14 60 37 62 35 38 76 23 47 33 49 67 60 18 2 27 2 38 71 17 6 70 79 13 36 80 89 86 1 3 82 15 30 18 44 31 22 19 54 36 52 69 69 78 53 72 5 55 76 42 73 82 11 17 62 47 98 50 99 99 19 81 80 15 65 23 46 54 8 66 56 60 35 24 4 88 62 76 43 38 17 82 86 29 65 47 42 62 63 41 26 49 88 6 64 18 96 10 72 4 42 94 64 77 18 34 31 80 9 40 84 27 21 70 22 86 83 64 14 46 4 40 61 92 46 24 10 42 0 48 12 9 42 76 86 26 77 83 5 86 22 56 79 43 92 0 96 40 65 76 52 35 15 12 94 28 3 3 36 3 17 48 79 25 90 65 51 66 47 23 18 36 79 97 79 36 98 40 76 28 15 28 63 98 40 56 25 43 25 27 13 9 75 92 34 30 22 86 97 36 75 81 72 19 77 16 55 40 23 97 68 4 24 31 1 31 53 93 40 79 19 19 88 60 78 88 91 66 39 53 1 13 33 39 32 76 22 53 16 11 16 84 15 40 81 17 37 34 76 44 79 96 63 32 21 6 86 11 73 25 30 40 4 29 46 3 5 68 56 21 79 72 71 60 79 18 77 82 52 53 25 97 14 55 95 35 61 80 13 33 4 9 74 9 39 19 12 10 53 34 98 98 73 68 57 17 52 0 99 3 19 24 66 100 79 60 34 39 40 13 39 44 23 79 19 28 64 98 38 16 32 35 80 71 69 36 88 21 2 86 91 21 76 57 87 20 83 21 26 22 0 65 33 90 9 18 17 73 16 55 55 14 56 34 85 92 36 38 79 5 90 35 93 66 58 80 86 41 67 78 29 67 8 62 57 17 47 74 90 63 96 44 43 17 44 27 75 47 65 53 52 54 55 10 86 12 90 38 53 56 15 49 23 24 77 46 41 23 19 98 86 81 7 95 65 18 21 39 31 52 59 49 73 13 59 24 25 49 62 45 4 44 60 94 34 36 39 41 60 25 4 11 72 12 6 36 97 94 76 27 12 34 76 85 13 34 75 4 83 3 49 54 47 8 47 47 11 53 88 71 44 59 48 15 71 54 52 67 14 27 94 26 27 69 77 6 69 51 10 52 54 26 72 67 0 85 80 11 37 34 48 81 93 97 97 29 16 14 96 30 7 55 56 34 90 99 6 58 50 16 76 70 8 47 3 9 32 49 87 69 83 35 16 75 98 79 3 13 93 65 44 100 86 66 100 75 65 5 33 81 88 75 16 97 22 86 72 54 35 58 89 17 59 71 59 56 49 28 70 41 60 80 40 45 11 5 20 42 10 19 22 99 94 5 61 82 91 32 1 25 90 57 9 49 27 34 71 43 62 40 50 21 86 91 33 98 62 53 39
188 38 28 37 98 33 98 80 90 29 47 82 85 3 57 100 98 91 71 40 18 77 90 6 63 46 39 26 8 58 31 47 96 59 84 59 58 47 38 48 76 52 96 26 55 52 26 52 42 63 58 26 5 48 32 68 60 37 60 68 95 92 14 56 16 64 15 75 10 19 89 52 71 84 79 26 1 71 44 43 100 2 35 4 16 68 39 76 4 99 10 100 56 91 21 73 55 36 13 31 56 1 84 93 51 28 85 52 65 29 61 64 98 96 68 13 29 73 55 34 38 65 100 94 56 87 32 77 23 45 7 45 12 91 37 29 85 22 47 49 17 74 12 14 70 47 94 65 86 48 99 23 13 64 84 35 51 15 11 40 27 18 51 5 76 88 1 26 76 48 76 59 22 54 73 58 67 32 22 53 81 88 76 60 17 25 95 34 7
593 40 34 90 91 5 31 45 6 58 20 21 33 80 9 53 18 67 20 51 55 73 31 42 14 57 26 40 51 60 13 22 0 47 78 91 18 9 1 92 33 22 79 32 68 88 85 86 20 71 2 75 43 100 84 24 56 9 30 6 35 43 95 1 56 73 59 40 48 60 31 81 82 9 12 15 97 63 1 83 34 70 58 43 70 41 67 25 16 63 99 17 5 93 19 27 31 78 68 79 37 99 59 86 75 37 0 37 67 68 20 0 38 78 43 7 85 77 99 67 39 97 84 11 90 2 38 20 46 5 100 50 71 24 35 45 28 1 82 95 36 68 61 40 11 70 47 62 46 11 28 52 8 79 63 98 81 67 84 94 39 49 43 9 40 78 20 68 45 68 28 81 36 89 20 47 58 33 9 71 45 37 22 53 82 51 16 29 84 100 22 22 15 65 98 55 8 17 22 19 86 16 0 21 4 87 34 28 20 43 99 31 47 87 50 28 3 66 57 88 31 45 76 46 9 74 0 84 91 89 3 42 4 3 63 8 56 98 3 76 6 1 73 53 55 22 48 58 54 71 11 86 16 88 98 92 61 99 76 17 53 79 60 58 48 89 32 3 52 35 46 59 3 18 78 24 7 92 48 61 63 60 12 79 47 10 70 74 75 11 91 27 90 16 51 3 5 84 74 57 85 19 15 54 3 60 44 10 51 93 38 13 52 50 58 65 60 28 38 34 39 95 28 96 11 79 99 16 28 38 73 80 57 55 100 27 14 44 3 65 36 41 79 54 92 2 18 17 30 56 18 36 50 46 98 27 24 62 43 19 0 83 99 23 37 98 50 51 41 20 82 43 61 26 97 18 29 14 2 25 36 20 61 53 66 24 80 56 87 90 41 87 72 39 9 8 3 26 25 44 46 73 54 73 100 50 58 95 31 60 19 67 80 47 86 11 71 32 33 23 21 75 9 93 80 86 67 83 11 58 94 23 30 47 96 96 63 19 56 94 79 42 27 24 89 12 1 25 44 35 49 65 76 58 23 21 9 90 4 87 13 64 9 10 77 72 72 39 91 28 33 70 70 60 60 24 72 62 49 83 63 64 47 4 89 37 25 98 26 96 85 6 25 94 16 1 31 54 41 22 48 74 58 17 100 17 7 71 45 57 19 74 20 67 78 75 3 70 73 96 65 57 68 57 16 50 58 14 4 99 36 52 38 60 36 37 43 43 75 89 66 94 62 53 60 6 27 29 76 100 92 6 22 59 63 5 9 21 19 13 86 21 31 24 47 67 61 90 10 35 44 42 29 73 95 55 79 22 51 54 88 42 26 10 0 56 82 9 77 67 89 28 88 20
298 34 53 80 90 29 14 34 72 9 6 66 65 85 54 82 4 42 23 97 18 23 52 100 100 95 66 54 23 19 40 75 19 60 20 8 89 35 42 60 10 48 93 41 99 46 22 69 54 45 66 38 35 17 37 0 12 69 54 35 54 61 76 73 20 97 48 8 98 90 35 7 4 94 15 69 5 37 38 60 83 3 98 84 20 1 84 99 36 3 100 57 64 76 96 50 38 43 25 35 100 60 8 70 53 23 38 58 27 42 84 76 11 48 59 99 15 8 97 51 11 97 7 42 38 70 58 76 12 83 77 11 42 51 47 61 75 86 86 68 94 69 43 5 16 1 3 31 9 100 49 87 62 22 95 100 92 53 41 71 35 17 48 44 69 96 4 9 47 56 77 40 25 86 45 7 87 48 5 62 14 20 48 76 8 43 76 67 62 16 37 97 0 85 6 35 80 78 10 26 33 53 33 24 38 78 32 24 93 3 52 6 90 100 48 98 8 90 64 70 6 67 33 73 52 39 7 98 16 84 91 16 36 23 40 74 67 38 64 59 41 15 31 97 81 80 61 56 35 24 25 41 92 24 80 9 30 53 6 12 36 97 28 72 86 69 11 53 6 75 78 14 56 76 10 37 55 37 93 56 62 84 98 19 75 43 28 4 97 0 83 32 98 11 71 49 80 82 1


1000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

1000 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 99 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 90 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100
]]></test_input>
<test_output><![CDATA[40.000%
57.143%
33.333%
0.000%
0.000%
90.000%
50.000%
49.824%
49.688%
51.839%
50.000%
51.474%
55.556%
48.392%
53.030%
51.250%
49.519%
49.486%
49.254%
50.281%
50.000%
0.000%
47.796%
51.064%
49.241%
48.993%
99.900%
0.100%
0.000%
0.000%
99.800%
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C"><![CDATA[#include <stdio.h>

int i,j,k,C,N,m[1000];
double sum,avg,cnt;

main(){
   scanf("%d",&C);
   while (C--) {
      scanf("%d",&N);
      sum = 0;
      for (i=0;i<N;i++) {
         scanf("%d",&m[i]);
         sum += m[i];
      }
      avg = sum/N;
      cnt = 0;
      for (i=0;i<N;i++) if (m[i]>avg) cnt++;
      printf("%0.3lf%%\n",100*cnt/N);
   }
}
]]></solution>
</item>
<item>
<title><![CDATA[Time Zones]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>

<img><src><![CDATA[http://plg1.cs.uwaterloo.ca/%7Eacm00/020928/time.gif]]></src><base64><![CDATA[]]></base64></img><description><![CDATA[<img align="right" src="http://plg1.cs.uwaterloo.ca/%7Eacm00/020928/time.gif" alt="" />
<p>Prior to the late nineteenth century, time keeping was a purely local phenomenon. Each town would set their clocks to noon when the sun reached its zenith each day. A clockmaker or town clock would be the &quot;official&quot; time and the citizens would set their pocket watches and clocks to the time of the town - enterprising citizens would offer their services as mobile clock setters, carrying a watch with the accurate time to adjust the clocks in customer's homes on a weekly basis. Travel between cities meant having to change one's pocket watch upon arrival.</p>
<p>However, once railroads began to operate and move people rapidly across great distances, time became much more critical. In the early years of the railroads, the schedules were very confusing because each stop was based on a different local time.  The standardization of time was essential to efficient operation of railroads.</p>
<p>In 1878, Canadian Sir Sanford Fleming proposed the system of worldwide time zones that we use today. He recommended that the world be divided into twenty-four time zones, each spaced 15 degrees of longitude apart. Since the earth rotates once every 24 hours and there are 360 degrees of longitude, each hour the earth rotates one-twenty-fourth of a circle or 15� of longitude. Sir Fleming's time zones were heralded as a brilliant solution to a chaotic problem worldwide.</p>
<p>United States railroad companies began utilizing Fleming's standard time zones on November 18, 1883. In 1884 an International Prime Meridian Conference was held in Washington D.C. to standardize time and select the Prime Meridian. The conference selected the longitude of Greenwich, England as zero degrees longitude and established the 24 time zones based on the Prime Meridian. Although the time zones had been established, not all countries switched immediately. Though most U.S. states began to adhere to the Pacific, Mountain, Central, and Eastern time zones by 1895, Congress didn't make the use of these time zones mandatory until the Standard Time Act of 1918.</p>
<p>Today, many countries operate on variations of the time zones proposed by Sir Fleming. All of China (which should span five time zones) uses a single time zone - eight hours ahead of Coordinated Universal Time (known by the abbreviation UTC - based on the time zone running through Greenwich at 0� longitude). Russia adheres to its designated time zones although the entire country is on permanent Daylight Saving Time and is an hour ahead of their actual zones. Australia uses three time zones - its central time zone is a half-hour ahead of its designated time zone. Several countries in the Middle East and South Asia also utilize half-hour time zones.</p>
<p>Since time zones are based on segments of longitude and lines of longitude narrow at the poles, scientists working at the North and South Poles simply use UTC time. Otherwise, Antarctica would be divided into 24 very thin time zones!</p>
<p>Time zones have recently been given standard capital-letter abbreviations as follows:</p>
<pre>
UTC Coordinated Universal Time
GMT Greenwich Mean Time, defined as UTC
BST British Summer Time, defined as UTC+1 hour
IST Irish Summer Time, defined as UTC+1 hour
WET Western Europe Time, defined as UTC
WEST Western Europe Summer Time, defined as UTC+1 hour
CET Central Europe Time, defined as UTC+1
CEST Central Europe Summer Time, defined as UTC+2
EET Eastern Europe Time, defined as UTC+2
EEST Eastern Europe Summer Time, defined as UTC+3
MSK Moscow Time, defined as UTC+3
MSD Moscow Summer Time, defined as UTC+4
AST Atlantic Standard Time, defined as UTC-4 hours
ADT Atlantic Daylight Time, defined as UTC-3 hours
NST Newfoundland Standard Time, defined as UTC-3.5 hours
NDT Newfoundland Daylight Time, defined as UTC-2.5 hours
EST Eastern Standard Time, defined as UTC-5 hours
EDT Eastern Daylight Saving Time, defined as UTC-4 hours
CST Central Standard Time, defined as UTC-6 hours
CDT Central Daylight Saving Time, defined as UTC-5 hours
MST Mountain Standard Time, defined as UTC-7 hours
MDT Mountain Daylight Saving Time, defined as UTC-6 hours
PST Pacific Standard Time, defined as UTC-8 hours
PDT Pacific Daylight Saving Time, defined as UTC-7 hours
HST Hawaiian Standard Time, defined as UTC-10 hours
AKST Alaska Standard Time, defined as UTC-9 hours
AKDT Alaska Standard Daylight Saving Time, defined as UTC-8 hours
AEST Australian Eastern Standard Time, defined as UTC+10 hours 
AEDT Australian Eastern Daylight Time, defined as UTC+11 hours 
ACST Australian Central Standard Time, defined as UTC+9.5 hours 
ACDT Australian Central Daylight Time, defined as UTC+10.5 hours 
AWST Australian Western Standard Time, defined as UTC+8 hours 
</pre>
<p>Given the current time in one time zone, you are to compute what time it is in another time zone.  The first line of input contains N, the number of test cases. For each case a line is given with a time, and 2 time zone abbreviations.   Time is given in standard a.m./p.m. format with midnight denoted &quot;midnight&quot;  and noon denoted &quot;noon&quot; (12:00 a.m. and 12:00 p.m. are oxymorons). Assuming the given time is the current time in the first time zone, give the current time in the second time zone.</p>]]></description>
<input><![CDATA[]]></input> 
<output><![CDATA[]]></output>
<sample_input><![CDATA[4
noon HST CEST 
11:29 a.m. EST GMT
6:01 p.m. CST UTC
12:40 p.m. ADT MSK
]]></sample_input>
<sample_output><![CDATA[midnight
4:29 p.m.
12:01 a.m.
6:40 p.m.
]]></sample_output>
<test_input><![CDATA[213
noon HST CEST 
11:29 a.m. EST GMT
11:30 p.m. EST GMT
10:30 p.m. ACDT UTC
10:30 a.m. ACDT UTC
3:30 a.m. NST UTC
3:30 p.m. NST UTC
8:30 p.m. NST UTC
8:30 a.m. NST UTC
midnight NDT EDT
noon NDT EDT
11:45 p.m. EST EDT
11:45 p.m. EST NST
7:30 a.m. CDT EDT
9:00 p.m. MSD CST
12:06 p.m. HST AEST
2:50 p.m. BST CDT
6:30 a.m. PDT EDT
9:33 a.m. PDT HST
11:30 a.m. CET AEST
2:50 p.m. UTC UTC
8:05 p.m. UTC UTC
6:45 p.m. PDT MSK
7:00 p.m. MSK AST
2:19 p.m. MST AST
10:06 p.m. BST AEST
11:00 a.m. CET WEST
1:20 p.m. UTC EEST
12:30 a.m. MDT EDT
9:30 a.m. WET EEST
midnight EST EET
3:59 p.m. EET AEDT
12:30 p.m. WEST ACDT
11:28 p.m. IST EDT
2:00 p.m. CST AEST
midnight EST EET
11:47 p.m. AKST AKDT
noon AEDT AWST
8:30 a.m. CDT MDT
4:00 p.m. WET AKST
8:03 p.m. PDT AKDT
4:30 a.m. MSD MSK
6:00 a.m. CDT AEST
2:48 a.m. NDT GMT
11:10 a.m. EEST ACST
noon CST MSK
6:00 p.m. MDT NST
midnight NST AST
9:00 a.m. CET IST
11:16 a.m. ADT ADT
2:30 p.m. AST MSK
12:07 a.m. AST AEST
4:52 a.m. AKST WET
6:21 a.m. AST AKST
9:44 a.m. BST MST
11:50 p.m. CST EST
8:01 p.m. MST AEDT
1:45 p.m. BST EST
noon ACDT EDT
noon MST AEST
6:55 p.m. NST AEST
5:30 p.m. MDT EEST
noon CST EST
12:30 p.m. MST CET
1:08 a.m. MDT WEST
7:06 p.m. EEST IST
5:10 a.m. AKST CDT
6:45 p.m. AST PDT
4:00 p.m. EDT AEDT
2:08 p.m. CET AKDT
noon BST MST
7:11 a.m. PST CDT
12:29 a.m. MST ADT
9:40 p.m. BST MDT
12:35 a.m. HST ADT
9:09 p.m. HST WEST
3:30 a.m. WEST PST
5:54 p.m. MSK AST
9:30 p.m. AKDT AST
4:32 p.m. AKST CST
3:00 a.m. UTC EEST
6:55 p.m. AKDT AST
9:14 a.m. AKST AST
10:30 p.m. MST HST
1:17 a.m. BST EDT
1:38 a.m. MDT UTC
9:34 a.m. UTC AEDT
noon UTC ADT
10:19 a.m. NDT EDT
1:00 a.m. PST MSK
midnight ACST ACDT
3:01 a.m. AST ACDT
1:30 p.m. MSK CEST
2:40 p.m. ADT CST
9:25 p.m. WET EST
9:30 a.m. PDT AWST
midnight EDT AEDT
7:15 a.m. NST MDT
9:22 p.m. PST ACST
10:13 p.m. ADT NDT
11:17 p.m. AWST EST
noon MSD UTC
1:00 a.m. MSD PST
11:00 p.m. CST CST
midnight EDT AST
12:23 a.m. ACDT CDT
midnight ACST IST
8:00 p.m. NST MSD
7:21 p.m. EET AST
3:32 p.m. CET CEST
1:14 a.m. CST AWST
12:04 p.m. MSD AKDT
7:02 p.m. CDT EDT
4:42 p.m. CEST ADT
7:56 a.m. GMT ADT
11:39 p.m. PST MDT
6:00 a.m. HST CST
9:59 p.m. AKDT HST
12:58 a.m. ACST EEST
midnight PDT CDT
1:00 p.m. BST NST
9:57 p.m. ADT UTC
2:41 a.m. PDT WET
12:30 a.m. EST ACDT
1:00 a.m. AWST MSK
10:00 a.m. AEST AEDT
7:40 p.m. AEST MDT
6:03 p.m. MST IST
12:19 a.m. CST WET
5:28 p.m. ACST PST
11:10 a.m. MDT EET
12:30 a.m. CET MDT
2:48 a.m. NST WET
6:36 a.m. HST BST
9:46 p.m. AKST UTC
8:15 p.m. ACST GMT
8:53 p.m. MDT MSD
8:00 a.m. MSD AEDT
5:34 a.m. CET WEST
2:41 p.m. AST MDT
2:00 a.m. AKST GMT
3:24 p.m. CEST AEST
11:00 a.m. EST AEST
6:30 a.m. PDT ADT
7:32 p.m. MSK PST
noon BST NDT
5:16 p.m. MST AEDT
5:54 p.m. ACDT PDT
12:30 a.m. NST EEST
8:15 p.m. PDT MDT
9:35 a.m. UTC IST
7:00 a.m. ACDT ADT
5:50 a.m. GMT IST
10:44 a.m. NDT UTC
7:00 a.m. CDT ACST
1:15 p.m. MSD CEST
6:00 a.m. MSK CET
11:17 a.m. WET ADT
5:30 p.m. MSK MDT
12:33 a.m. AEDT EDT
10:30 p.m. HST PDT
10:40 p.m. AWST MDT
2:37 a.m. AWST CET
5:00 p.m. ACDT ACST
midnight MSD EST
5:12 a.m. ACDT MDT
noon EDT MSD
6:00 p.m. AEST MDT
3:14 a.m. CDT CST
3:22 p.m. IST MST
10:53 p.m. MDT EDT
2:19 a.m. CDT NDT
11:22 a.m. AKDT EEST
8:00 a.m. WEST MSD
2:25 a.m. CDT EDT
noon MSD BST
1:26 p.m. AKDT AEDT
1:44 a.m. MST EST
11:30 a.m. AEDT ADT
5:05 p.m. HST ADT
11:00 a.m. NDT UTC
4:00 a.m. AST BST
6:00 p.m. AST AST
noon EST AEST
5:00 p.m. CET CDT
12:17 p.m. MSD AKDT
11:20 a.m. AST AKDT
4:30 a.m. WET CET
3:01 a.m. PST EET
4:30 a.m. NST ACST
10:12 p.m. MST CEST
3:30 a.m. WEST AKST
8:30 a.m. EST IST
11:03 a.m. HST EDT
7:00 a.m. GMT CDT
2:00 a.m. CEST CDT
5:39 a.m. ADT EST
11:01 a.m. HST AEST
8:54 p.m. EET CST
3:00 a.m. CST AKST
10:45 p.m. CST WEST
7:32 p.m. ACDT HST
noon AEST CDT
5:34 a.m. AKDT NST
12:30 a.m. EDT BST
5:57 p.m. AKST EET
7:00 p.m. AKDT EEST
2:46 p.m. HST WEST
10:55 a.m. EDT AST
2:40 p.m. MSK MDT
9:00 a.m. NST EST
6:25 p.m. AEST ACDT
10:43 p.m. CST EST
]]></test_input>
<test_output><![CDATA[midnight
4:29 p.m.
4:30 a.m.
noon
midnight
7:00 a.m.
7:00 p.m.
midnight
noon
10:30 p.m.
10:30 a.m.
12:45 a.m.
1:15 a.m.
8:30 a.m.
11:00 a.m.
8:06 a.m.
8:50 a.m.
9:30 a.m.
6:33 a.m.
8:30 p.m.
2:50 p.m.
8:05 p.m.
4:45 a.m.
noon
5:19 p.m.
7:06 a.m.
11:00 a.m.
4:20 p.m.
2:30 a.m.
12:30 p.m.
7:00 a.m.
12:59 a.m.
10:00 p.m.
6:28 p.m.
6:00 a.m.
7:00 a.m.
12:47 a.m.
9:00 a.m.
7:30 a.m.
7:00 a.m.
7:03 p.m.
3:30 a.m.
9:00 p.m.
5:18 a.m.
5:40 p.m.
9:00 p.m.
8:30 p.m.
11:30 p.m.
9:00 a.m.
11:16 a.m.
9:30 p.m.
2:07 p.m.
1:52 p.m.
1:21 a.m.
1:44 a.m.
12:50 a.m.
2:01 p.m.
7:45 a.m.
9:30 p.m.
5:00 a.m.
8:25 a.m.
2:30 a.m.
1:00 p.m.
8:30 p.m.
8:08 a.m.
5:06 p.m.
9:10 a.m.
3:45 p.m.
7:00 a.m.
5:08 a.m.
4:00 a.m.
10:11 a.m.
4:29 a.m.
2:40 p.m.
7:35 a.m.
8:09 a.m.
6:30 p.m.
10:54 a.m.
1:30 a.m.
7:32 p.m.
6:00 a.m.
10:55 p.m.
2:14 p.m.
7:30 p.m.
8:17 p.m.
7:38 a.m.
8:34 p.m.
9:00 a.m.
8:49 a.m.
noon
1:00 a.m.
5:31 p.m.
12:30 p.m.
11:40 a.m.
4:25 p.m.
12:30 a.m.
3:00 p.m.
4:45 a.m.
2:52 p.m.
10:43 p.m.
10:17 a.m.
8:00 a.m.
1:00 p.m.
11:00 p.m.
midnight
8:53 a.m.
3:30 p.m.
3:30 a.m.
1:21 p.m.
4:32 p.m.
3:14 p.m.
12:04 a.m.
8:02 p.m.
11:42 a.m.
4:56 a.m.
1:39 a.m.
10:00 a.m.
7:59 p.m.
6:28 p.m.
2:00 a.m.
8:30 a.m.
12:57 a.m.
9:41 a.m.
4:00 p.m.
8:00 p.m.
11:00 a.m.
3:40 a.m.
2:03 a.m.
6:19 a.m.
11:58 p.m.
7:10 p.m.
5:30 p.m.
6:18 a.m.
5:36 p.m.
6:46 a.m.
10:45 a.m.
6:53 a.m.
3:00 p.m.
5:34 a.m.
12:41 p.m.
11:00 a.m.
11:24 p.m.
2:00 a.m.
10:30 a.m.
8:32 a.m.
8:30 a.m.
11:16 a.m.
12:24 a.m.
7:00 a.m.
9:15 p.m.
10:35 a.m.
5:30 p.m.
6:50 a.m.
1:14 p.m.
9:30 p.m.
11:15 a.m.
4:00 a.m.
8:17 a.m.
8:30 a.m.
9:33 a.m.
1:30 a.m.
8:40 a.m.
7:37 p.m.
4:00 p.m.
3:00 p.m.
12:42 p.m.
8:00 p.m.
2:00 a.m.
2:14 a.m.
7:22 a.m.
12:53 a.m.
4:49 a.m.
10:22 p.m.
11:00 a.m.
3:25 a.m.
9:00 a.m.
8:26 a.m.
3:44 a.m.
9:30 p.m.
12:05 a.m.
1:30 p.m.
9:00 a.m.
6:00 p.m.
3:00 a.m.
11:00 a.m.
12:17 a.m.
7:20 a.m.
5:30 a.m.
1:01 p.m.
5:30 p.m.
7:12 a.m.
5:30 p.m.
2:30 p.m.
5:03 p.m.
2:00 a.m.
7:00 p.m.
3:39 a.m.
7:01 a.m.
12:54 p.m.
midnight
5:45 a.m.
11:02 p.m.
9:00 p.m.
10:04 a.m.
5:30 a.m.
4:57 a.m.
6:00 a.m.
1:46 a.m.
10:55 a.m.
5:40 a.m.
7:30 a.m.
6:55 p.m.
11:43 p.m.
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C"><![CDATA[#include <stdio.h>
#include <string.h>

char *x[] = {
"WET","0",
"UTC","0",
"GMT","0",
"BST","+1",
"IST","+1",
"WEST","+1",
"CET","+1",
"CEST","+2",
"EET","+2",
"EEST","+3",
"MSK","+3",
"MSD","+4",
"AST","-4",
"ADT","-3",
"NST","-3.5",
"NDT","-2.5",
"EST","-5",
"EDT","-4",
"CST","-6",
"CDT","-5",
"MST","-7",
"MDT","-6",
"PST","-8",
"PDT","-7",
"HST","-10",
"AKST","-9",
"AKDT","-8",
"AEST","+10",
"AEDT","+11",
"ACST","+9.5",
"ACDT","+10.5",
"AWST","+8",
"",""};

int i,j,k,h,m,n,N,time;
char buf[100];
double off;

main(){
   scanf("%d",&N);
   while (N--) {
      scanf(" %s",buf);
      if (!strcmp(buf,"noon")) time = 12*60;
      else if (!strcmp(buf,"midnight")) time = 0;
      else {
         sscanf(buf,"%d:%d",&h,&m);
         if (h == 12) h = 0;
         time = h*60 + m;
         scanf(" %s",buf);
         if (!strcmp(buf,"p.m.")) time += 12*60;
      }
      scanf(" %s",buf);
      for (i=0;*x[i] && strcmp(x[i],buf);i++);
      if (strcmp(x[i],buf)) printf("oops:  <<<%s>>>\n",buf);
      sscanf(x[i+1],"%lf",&off);
      time -= 60 * off; 
      scanf(" %s",buf);
      for (i=0;*x[i] && strcmp(x[i],buf);i++);
      if (strcmp(x[i],buf)) printf("oops:  %s\n",buf);
      sscanf(x[i+1],"%lf",&off);
      time += 60 * off; 
      time = (time + 24*60) % (24*60);
      if (time == 0) printf("midnight\n");
      else if (time == 12 * 60) printf("noon\n");
      else {
         h = time/60%12;
         if (h == 0) h = 12;
         m = time%60;
         printf("%d:%02d %s\n",h,m,time>12*60?"p.m.":"a.m.");
      }
   }
}
]]></solution>
</item>
</fps>