<?xml version="1.0" encoding="UTF-8"?>
<fps version="1.0">
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题10.1]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[输入三个整数，按由小到大的顺序输出。]]></description>
<input><![CDATA[三个整数]]></input>
<output><![CDATA[由小到大输出成一行，每个数字后面跟一个空格]]></output>
<sample_input><![CDATA[2 3 1]]></sample_input>
<sample_output><![CDATA[1 2 3 ]]></sample_output>
<test_input><![CDATA[99 55 11]]></test_input>
<test_output><![CDATA[11 55 99 ]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C"><![CDATA[
main()  
{ int a,b,c,*p1,*p2,*p3,t;  
scanf("%d%d%d",&a,&b,&c);  
p1=&a;p2=&b;p3=&c;  
if(*p1>*p2)   
{t=p1;p1=p2;p2=t;}  
if(*p1>*p3)  
{t=p1;p1=p3;p3=t;}  
if(*p2>*p3)   
{t=p2;p2=p3;p3=t;}  
printf("%d %d %d ",*p1,*p2,*p3);  
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题10.2]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[输入三个字符串，按由小到大的顺序输出 ]]></description>
<input><![CDATA[3行字符串]]></input>
<output><![CDATA[按照从小到大输出成3行]]></output>
<sample_input><![CDATA[cde
afg
abc
]]></sample_input>
<sample_output><![CDATA[abc
afg
cde]]></sample_output>
<test_input><![CDATA[abczefghijklmnopqrstuvwxyz
xbcdefghijklmnopqrstuvwxyz
abcdefahijklmnopqrstuvwxyz]]></test_input>
<test_output><![CDATA[abcdefahijklmnopqrstuvwxyz
abczefghijklmnopqrstuvwxyz
xbcdefghijklmnopqrstuvwxyz]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C++"><![CDATA[
#include<stdio.h>
#include<string.h>

void Swap(char **q1, char**q2);

int main()
{    
    int i=0;
    char *p1,*p2,*p3, str1[80],str2[80],str3[80];
 p1=str1; p2=str2; p3=str3;
    gets(str1);
	gets(str2);
	gets(str3);
if (strcmp(p1, p2)>0)
        Swap(&p1, &p2);  
if (strcmp(p1, p3)>0)
        Swap(&p1, &p3);
if (strcmp(p2, p3)>0)
        Swap(&p2, &p3);
 printf("%s\n%s\n%s\n",p1,p2,p3);
 return(0);
}

void Swap(char **q1, char* *q2)
{char *t;
 t= *q1;
 *q1 = *q2;
 *q2 = t;
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题10.3]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[输入10个整数，将其中最小的数与第一个数对换，把最大的数与最后一个数对换。写三个函数；
①输入10个数；②进行处理；③输出10个数。]]></description>
<input><![CDATA[10个整数]]></input>
<output><![CDATA[整理后的十个数，每个数后跟一个空格（注意最后一个数后也有空格）]]></output>
<sample_input><![CDATA[2 1 3 4 5 6 7 8 10 9]]></sample_input>
<sample_output><![CDATA[1 2 3 4 5 6 7 8 9 10 ]]></sample_output>
<test_input><![CDATA[10 9 8 7 6 5 4 1 3 2]]></test_input>
<test_output><![CDATA[1 9 8 7 6 5 4 2 3 10 
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C++"><![CDATA[
#include<stdio.h>
int main()
{
	int array[11];
	int n=10;
	//scanf("%d",&n);
	int temp;
	int i;
	for(i=0;i<n;i++)
		scanf("%d",&array[i]);
	temp=0;
	for(i=0;i<n;i++)
		if(array[temp] > array[i])
			temp = i;
		int t = array[temp];
		array[temp] = array[0];
		array[0] = t;
	temp = 0;
	for(i=0;i<n;i++)
		if(array[temp] < array[i])
			temp = i;
		t = array[temp];
		array[temp] = array[n-1];
		array[n-1] = t;
	for(i=0;i<n;i++)
	{
		
		printf("%d ",array[i]);
	}
	printf("\n");
	return 0;
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题10.4]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[有n个整数，使前面各数顺序向后移m个位置，最后m个数变成前面m个数，见图。写一函数：实现以上功能，在主函数中输入n个数和输出调整后的n个数。]]></description>
<input><![CDATA[输入数据的个数n
n个整数
移动的位置m]]></input>
<output><![CDATA[移动后的n个数]]></output>
<sample_input><![CDATA[10
1 2 3 4 5 6 7 8 9 10
2]]></sample_input>
<sample_output><![CDATA[9 10 1 2 3 4 5 6 7 8 ]]></sample_output>
<test_input><![CDATA[10
1 2 3 4 5 6 7 8 9 10
9]]></test_input>
<test_output><![CDATA[2 3 4 5 6 7 8 9 10 1 ]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C++"><![CDATA[
#include <stdio.h>
void mv(int *p,int n,int m)
{
    int *h, t,i;
    h=p+n-m-1; 
    for(;h>=p;h--)
    {
         for(i=0;i<m;i++) 
         {
                     t=*(h+i);
                     *(h+i)=*(h+i+1);
                     *(h+i+1)=t;
          }
   }
}


int main()
{
    int a[80];
     int m,i,n;
	 scanf("%d",&n);
 for(i=0;i<n;i++) 
	 scanf("%d",&a[i]);
   scanf("%d",&m);
  mv(a,n,m); 
 for(i=0;i<n;i++) 
	 printf("%d ",a[i]);
 
  return 0;
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题10.5]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[有n人围成一圈，顺序排号。从第1个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来的第几号的那位。]]></description>
<input><![CDATA[初始人数n]]></input>
<output><![CDATA[最后一人的初始编号]]></output>
<sample_input><![CDATA[3]]></sample_input>
<sample_output><![CDATA[2]]></sample_output>
<test_input><![CDATA[7]]></test_input>
<test_output><![CDATA[4]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C++"><![CDATA[
#include <stdio.h> 

const int M = 3; 

int main() 
{ 
    int n, s = 0; 
    scanf("%d", &n); 
    for (int i = 2; i <= n; ++i) 
        s = (s+M)%i; 
    printf("%d\n", s+1); 
    return 0; 
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
<item>
<title><![CDATA[C语言程序设计教程（第三版）课后习题10.7]]></title>
<time_limit><![CDATA[1]]></time_limit>
<memory_limit><![CDATA[128]]></memory_limit>
<description><![CDATA[有一字符串，包含n个字符。写一函数，将此字符串中从第m个字符开始的全部字符复制成为另一个字符串。]]></description>
<input><![CDATA[数字n
一行字符串
数字m]]></input>
<output><![CDATA[从m开始的子串]]></output>
<sample_input><![CDATA[6
abcdef
3]]></sample_input>
<sample_output><![CDATA[cdef]]></sample_output>
<test_input><![CDATA[26
abcdefghijklmnopqrstuvwxyz
10]]></test_input>
<test_output><![CDATA[jklmnopqrstuvwxyz]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[]]></source>
<solution language="C++"><![CDATA[
#include <stdio.h>
#include <string.h>
#define N 80
void fun(char a[N],int m)
{char *p1,b[N];int i,l;
p1=a;i=1;l=0;
while(i<m){i++;p1++;}
while(*p1!='\0')
{b[l]=*p1;
 p1++;
 l++;
}
b[l]='\0';
puts(b);
}
int main()
{char a[N];int m,n;
scanf("%d\n",&n);
gets(a);
scanf("%d",&m);
fun(a,m);
return 0;
}]]></solution>
<spj><![CDATA[]]></spj>
</item>
</fps>